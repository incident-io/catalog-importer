{
  "openapi": "3.0.3",
  "info": {
    "title": "incident.io",
    "description": "This is the API reference for incident.io.\n\nIt documents available API endpoints, provides examples of how to use it, and\ninstructions around things like authentication and error handling.\n\nThe API is hosted at:\n\n- https://api.incident.io/\n\nAnd you will need to create an API key via your [incident.io\ndashboard](https://app.incident.io/settings/api-keys) to make requests.\n\n# Making requests\n\nHere are the key concepts required to make requests to the incident.io API.\n\n## Authentication\n\nFor all requests made to the incident.io API, you'll need an API key.\n\nTo create an API key, head to the incident dashboard and visit [API\nkeys](https://app.incident.io/settings/api-keys). When you create the key,\nyou'll be able to choose what actions it can take for your account: choose\ncarefully, as those roles can only be set when you first create the key. We'll\nonly show you the token once, so make sure you store it somewhere safe.\n\nOnce you have the key, you should make requests to the API that set the\n`Authorization` request header using a \"Bearer\" authentication scheme:\n\n```\nAuthorization: Bearer <YOUR_API_KEY>\n```\n\n## Errors\n\nWe use standard HTTP response codes to indicate the status or failure of API\nrequests.\n\nThe API response body will be JSON, and contain more detailed information on the\nnature of the error.\n\nAn example error when a request is made without an API key:\n\n```json\n{\n  \"type\": \"authentication_error\",\n  \"status\": 401,\n  \"request_id\": \"8e3cc412-b49d-4957-9073-2c19d2c61804\",\n  \"errors\": [\n    {\n      \"code\": \"missing_authorization_material\",\n      \"message\": \"No authorization material provided in request\"\n    }\n  ]\n}\n```\n\nNote that the error:\n\n- Contains the HTTP status (`401`)\n- References the type of error (`authentication_error`)\n- Includes a `request_id` that can be provided to incident.io support to help\n\tdebug questions with your API request\n- Provides a list of individual errors, which go into detail about why the error\n\toccurred\n\nThe most common error will be a 422 Validation Error, which is returned when the\nrequest was rejected due to failing validations.\n\nThese errors look like this:\n\n```json\n{\n  \"type\": \"validation_error\",\n  \"status\": 422,\n  \"request_id\": \"631766c4-4afd-4803-997c-cd700928fa4b\",\n  \"errors\": [\n    {\n      \"code\": \"is_required\",\n      \"message\": \"A severity is required to open an incident\",\n      \"source\": {\n        \"field\": \"severity_id\"\n      }\n    }\n  ]\n}\n```\n\nThis error is caused by not providing a severity identifier, which should be at\nthe `severity_id` field of the request payload. Errors like these can be mapped to\nforms, should you be integrating with the API from a user-interface.\n\n## Compatibility\n\nWe won't make breaking changes to existing API services or endpoints, but will\nexpect integrators to upgrade themselves to the latest API endpoints within 3\nmonths of us deprecating the old service.\n\nWe will make changes that are considered backwards compatible, which include:\n\n- Adding new API endpoints and services\n- Adding new properties to responses from existing API endpoints\n- Reordering properties returned from existing API endpoints\n- Adding optional request parameters to existing API endpoints\n- Altering the format or length of IDs\n- Adding new values to enums\n\nIt is important that clients are robust to these changes, to ensure reliable\nintegrations.\n\nAs an example, if you are generating a client using an openapi-generator, ensure\nthe generated client is configured to support unknown enum values, often\nconfigured via the `enumUnknownDefaultCase` parameter.\n\nWhen breaking changes are unavoidable, we'll create a new service version on a\nseparate path, and run them in parallel.\n\nFor example:\n\n- https://api.incident.io/v1/incidents\n- https://api.incident.io/v2/incidents\n\nFor any questions, email support@incident.io.\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.incident.io"
    }
  ],
  "paths": {
    "/v1/actions": {
      "get": {
        "description": "List all actions for an organisation.",
        "operationId": "Actions V1#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Find actions related to this incident",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "description": "Find actions related to this incident",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter to actions marked as being follow up actions",
            "example": true,
            "in": "query",
            "name": "is_follow_up",
            "schema": {
              "description": "Filter to actions marked as being follow up actions",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter to actions from incidents of the given mode. If not set, only actions from `real` incidents are returned",
            "examples": {
              "default": {
                "summary": "default",
                "value": "real"
              }
            },
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "description": "Filter to actions from incidents of the given mode. If not set, only actions from `real` incidents are returned",
              "enum": [
                "real",
                "test",
                "tutorial"
              ],
              "example": "real",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": [
                    {
                      "assignee": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      },
                      "completed_at": "2021-08-17T13:28:57.801578Z",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Call the fire brigade",
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "follow_up": true,
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "status": "outstanding",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Actions V1",
        "tags": [
          "Actions V1"
        ],
        "deprecated": true
      }
    },
    "/v1/actions/{id}": {
      "get": {
        "description": "Get a single incident action.",
        "operationId": "Actions V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the action",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Actions V1",
        "tags": [
          "Actions V1"
        ],
        "deprecated": true
      }
    },
    "/v1/custom_field_options": {
      "get": {
        "tags": [
          "Custom Field Options V1"
        ],
        "summary": "List Custom Field Options V1",
        "description": "Show custom field options for a custom field",
        "operationId": "Custom Field Options V1#List",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "number of records to return",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "number of records to return",
              "default": 25,
              "example": 25,
              "format": "int64"
            },
            "example": 25
          },
          {
            "name": "after",
            "in": "query",
            "description": "A custom field option's ID. This endpoint will return a list of custom field options created after this option.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "A custom field option's ID. This endpoint will return a list of custom field options created after this option.",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
            },
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          {
            "name": "custom_field_id",
            "in": "query",
            "description": "The custom field to list options for.",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "The custom field to list options for.",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody3"
                },
                "example": {
                  "custom_field_options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Field Options V1"
        ],
        "summary": "Create Custom Field Options V1",
        "description": "Create a custom field option. If the sort key is not supplied, it'll default to 1000, so the option appears near the end of the list.",
        "operationId": "Custom Field Options V1#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody"
              },
              "example": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody3"
                },
                "example": {
                  "custom_field_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/custom_field_options/{id}": {
      "delete": {
        "tags": [
          "Custom Field Options V1"
        ],
        "summary": "Delete Custom Field Options V1",
        "description": "Delete a custom field option",
        "operationId": "Custom Field Options V1#Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the custom field option",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the custom field option",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Custom Field Options V1"
        ],
        "summary": "Show Custom Field Options V1",
        "description": "Get a single custom field option",
        "operationId": "Custom Field Options V1#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the custom field option",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the custom field option",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody3"
                },
                "example": {
                  "custom_field_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Custom Field Options V1"
        ],
        "summary": "Update Custom Field Options V1",
        "description": "Update a custom field option",
        "operationId": "Custom Field Options V1#Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the custom field option",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the custom field option",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody"
              },
              "example": {
                "sort_key": 10,
                "value": "Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody3"
                },
                "example": {
                  "custom_field_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/custom_fields": {
      "get": {
        "description": "List all custom fields for an organisation.",
        "operationId": "Custom Fields V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_fields": [
                    {
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ],
                      "required": "never",
                      "required_v2": "never",
                      "show_before_closure": true,
                      "show_before_creation": true,
                      "show_before_update": true,
                      "show_in_announcement_post": true,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody4"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "deprecated": true
      },
      "post": {
        "description": "Create a new custom field",
        "operationId": "Custom Fields V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "name": "Affected Team",
                "required": "never",
                "required_v2": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ],
                    "required": "never",
                    "required_v2": "never",
                    "show_before_closure": true,
                    "show_before_creation": true,
                    "show_before_update": true,
                    "show_in_announcement_post": true,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody4"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "deprecated": true
      }
    },
    "/v1/custom_fields/{id}": {
      "delete": {
        "description": "Delete a custom field",
        "operationId": "Custom Fields V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "deprecated": true
      },
      "get": {
        "description": "Get a single custom field.",
        "operationId": "Custom Fields V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ],
                    "required": "never",
                    "required_v2": "never",
                    "show_before_closure": true,
                    "show_before_creation": true,
                    "show_before_update": true,
                    "show_in_announcement_post": true,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody4"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "deprecated": true
      },
      "put": {
        "description": "Update the details of a custom field",
        "operationId": "Custom Fields V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Which team is impacted by this issue",
                "name": "Affected Team",
                "required": "never",
                "required_v2": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true
              },
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ],
                    "required": "never",
                    "required_v2": "never",
                    "show_before_closure": true,
                    "show_before_creation": true,
                    "show_before_update": true,
                    "show_in_announcement_post": true,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody4"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "deprecated": true
      }
    },
    "/v1/identity": {
      "get": {
        "tags": [
          "Utilities V1"
        ],
        "summary": "Identity Utilities V1",
        "description": "Test if your API key is valid, and which roles it has.",
        "operationId": "Utilities V1#Identity",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResponseBody"
                },
                "example": {
                  "identity": {
                    "dashboard_url": "https://app.incident.io/my-org",
                    "name": "Alertmanager token",
                    "roles": [
                      "incident_creator"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/incident_attachments": {
      "get": {
        "tags": [
          "Incident Attachments V1"
        ],
        "summary": "List Incident Attachments V1",
        "description": "List all incident attachements for a given external resource or incident. You must provide either a specific incident ID or a specific external resource type and external ID.",
        "operationId": "Incident Attachments V1#List",
        "parameters": [
          {
            "name": "incident_id",
            "in": "query",
            "description": "Incident that this attachment is against",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Incident that this attachment is against",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
            },
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          {
            "name": "external_id",
            "in": "query",
            "description": "ID of the resource in the external system",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "ID of the resource in the external system",
              "example": "123"
            },
            "example": "123"
          },
          {
            "name": "resource_type",
            "in": "query",
            "description": "E.g. PagerDuty: the external system that holds the resource",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "E.g. PagerDuty: the external system that holds the resource",
              "example": "pager_duty_incident",
              "enum": [
                "pager_duty_incident",
                "opsgenie_alert",
                "datadog_monitor_alert",
                "github_pull_request",
                "gitlab_merge_request",
                "sentry_issue",
                "jira_issue",
                "atlassian_statuspage_incident",
                "zendesk_ticket",
                "google_calendar_event",
                "scrubbed",
                "statuspage_incident"
              ]
            },
            "examples": {
              "default": {
                "summary": "default",
                "value": "pager_duty_incident"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody7"
                },
                "example": {
                  "incident_attachments": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "resource": {
                        "external_id": "123",
                        "permalink": "https://my.pagerduty.com/incidents/ABC",
                        "resource_type": "pager_duty_incident",
                        "title": "The database has gone down"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incident Attachments V1"
        ],
        "summary": "Create Incident Attachments V1",
        "description": "Attaches an external resource to an incident",
        "operationId": "Incident Attachments V1#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody4"
              },
              "example": {
                "incident_id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "resource": {
                  "external_id": "123",
                  "resource_type": "pager_duty_incident"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseBody"
                },
                "example": {
                  "incident_attachment": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "resource": {
                      "external_id": "123",
                      "permalink": "https://my.pagerduty.com/incidents/ABC",
                      "resource_type": "pager_duty_incident",
                      "title": "The database has gone down"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/incident_attachments/{id}": {
      "delete": {
        "tags": [
          "Incident Attachments V1"
        ],
        "summary": "Delete Incident Attachments V1",
        "description": "Unattaches an external resouce from an incident",
        "operationId": "Incident Attachments V1#Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of this incident membership",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier of this incident membership",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      }
    },
    "/v1/incident_memberships": {
      "post": {
        "tags": [
          "Incident Memberships V1"
        ],
        "summary": "Create Incident Memberships V1",
        "description": "Makes a user a member of a private incident",
        "operationId": "Incident Memberships V1#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody5"
              },
              "example": {
                "incident_id": "01ET65M7ZADYFCKD4K1AE2QNMC",
                "user_id": "01FCQSP07Z74QMMYPDDGQB9FTG"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseBody2"
                },
                "example": {
                  "incident_membership": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "user": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/incident_memberships/actions/revoke": {
      "post": {
        "tags": [
          "Incident Memberships V1"
        ],
        "summary": "Revoke Incident Memberships V1",
        "description": "Revoke a user's membership of a private incident",
        "operationId": "Incident Memberships V1#Revoke",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody5"
              },
              "example": {
                "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "user_id": "01FCQSP07Z74QMMYPDDGQB9FTG"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      }
    },
    "/v1/incident_roles": {
      "get": {
        "description": "List all incident roles for an organisation.",
        "operationId": "Incident Roles V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_roles": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": false,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody8"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "deprecated": true
      },
      "post": {
        "description": "Create a new incident role",
        "operationId": "Incident Roles V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "shortform": "lead"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody7"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "deprecated": true
      }
    },
    "/v1/incident_roles/{id}": {
      "delete": {
        "description": "Removes an existing role",
        "operationId": "Incident Roles V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "deprecated": true
      },
      "get": {
        "description": "Get a single incident role.",
        "operationId": "Incident Roles V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody7"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "deprecated": true
      },
      "put": {
        "description": "Update an existing incident role",
        "operationId": "Incident Roles V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "shortform": "lead"
              },
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody7"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ],
        "deprecated": true
      }
    },
    "/v1/incident_statuses": {
      "get": {
        "tags": [
          "Incident Statuses V1"
        ],
        "summary": "List Incident Statuses V1",
        "description": "List all incident statuses for an organisation.",
        "operationId": "Incident Statuses V1#List",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody10"
                },
                "example": {
                  "incident_statuses": [
                    {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incident Statuses V1"
        ],
        "summary": "Create Incident Statuses V1",
        "description": "Create a new incident status",
        "operationId": "Incident Statuses V1#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody8"
              },
              "example": {
                "category": "live",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "name": "Closed"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody9"
                },
                "example": {
                  "incident_status": {
                    "category": "triage",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Closed",
                    "rank": 4,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/incident_statuses/{id}": {
      "delete": {
        "tags": [
          "Incident Statuses V1"
        ],
        "summary": "Delete Incident Statuses V1",
        "description": "Delete an incident status",
        "operationId": "Incident Statuses V1#Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of this incident status",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique ID of this incident status",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          }
        }
      },
      "get": {
        "tags": [
          "Incident Statuses V1"
        ],
        "summary": "Show Incident Statuses V1",
        "description": "Get a single incident status.",
        "operationId": "Incident Statuses V1#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of this incident status",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique ID of this incident status",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody9"
                },
                "example": {
                  "incident_status": {
                    "category": "triage",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Closed",
                    "rank": 4,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incident Statuses V1"
        ],
        "summary": "Update Incident Statuses V1",
        "description": "Update an existing incident status",
        "operationId": "Incident Statuses V1#Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of this incident status",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique ID of this incident status",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody6"
              },
              "example": {
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "name": "Closed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody9"
                },
                "example": {
                  "incident_status": {
                    "category": "triage",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Closed",
                    "rank": 4,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/incident_types": {
      "get": {
        "tags": [
          "Incident Types V1"
        ],
        "summary": "List Incident Types V1",
        "description": "List all incident types for an organisation.",
        "operationId": "Incident Types V1#List",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody12"
                },
                "example": {
                  "incident_types": [
                    {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/incident_types/{id}": {
      "get": {
        "tags": [
          "Incident Types V1"
        ],
        "summary": "Show Incident Types V1",
        "description": "Get a single incident type.",
        "operationId": "Incident Types V1#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for this Incident Type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for this Incident Type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody11"
                },
                "example": {
                  "incident_type": {
                    "create_in_triage": "always",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Customer facing production outages",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_default": false,
                    "name": "Production Outage",
                    "private_incidents_only": false,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/incidents": {
      "get": {
        "description": "List all incidents for an organisation.",
        "operationId": "Incidents V1#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Integer number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "Integer number of records to return",
              "example": 25,
              "format": "int64",
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter for incidents in these statuses",
            "examples": {
              "default": {
                "summary": "default",
                "value": [
                  "declined"
                ]
              }
            },
            "in": "query",
            "name": "status",
            "schema": {
              "description": "Filter for incidents in these statuses",
              "example": [
                "declined"
              ],
              "items": {
                "example": "declined",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incidents": [
                    {
                      "call_url": "https://zoom.us/foo",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "creator": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      },
                      "custom_field_entries": [
                        {
                          "custom_field": {
                            "description": "Which team is impacted by this issue",
                            "field_type": "single_select",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Affected Team",
                            "options": [
                              {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              }
                            ]
                          },
                          "values": [
                            {
                              "value_catalog_entry": {
                                "aliases": [
                                  "lawrence@incident.io",
                                  "lawrence"
                                ],
                                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Primary On-call"
                              },
                              "value_link": "https://google.com/",
                              "value_numeric": "123.456",
                              "value_option": {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              },
                              "value_text": "This is my text field, I hope you like it"
                            }
                          ]
                        }
                      ],
                      "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                      "incident_role_assignments": [
                        {
                          "assignee": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          },
                          "role": {
                            "created_at": "2021-08-17T13:28:57.801578Z",
                            "description": "The person currently coordinating the incident",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                            "name": "Incident Lead",
                            "required": false,
                            "role_type": "lead",
                            "shortform": "lead",
                            "updated_at": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_type": {
                        "create_in_triage": "always",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Customer facing production outages",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "is_default": false,
                        "name": "Production Outage",
                        "private_incidents_only": false,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "mode": "real",
                      "name": "Our database is sad",
                      "permalink": "https://app.incident.io/incidents/123",
                      "postmortem_document_url": "https://docs.google.com/my_doc_id",
                      "reference": "INC-123",
                      "severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "slack_channel_id": "C02AW36C1M5",
                      "slack_channel_name": "inc-165-green-parrot",
                      "slack_team_id": "T02A1FSLE8J",
                      "status": "triage",
                      "summary": "Our database is really really sad, and we don't know why yet.",
                      "timestamps": [
                        {
                          "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                          "name": "last_activity"
                        }
                      ],
                      "updated_at": "2021-08-17T13:28:57.801578Z",
                      "visibility": "public"
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25,
                    "total_record_count": 238
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody14"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incidents V1",
        "tags": [
          "Incidents V1"
        ],
        "deprecated": true
      },
      "post": {
        "description": "Create a new incident.",
        "operationId": "Incidents V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "custom_field_entries": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "values": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_text": "This is my text field, I hope you like it",
                        "value_timestamp": ""
                      }
                    ]
                  }
                ],
                "idempotency_key": "alert-uuid",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    },
                    "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
                  }
                ],
                "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "mode": "real",
                "name": "Our database is sad",
                "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "slack_team_id": "T02A1FSLE8J",
                "source_message_channel_id": "C02AW36C1M5",
                "source_message_timestamp": "1653650280.526509",
                "status": "triage",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "visibility": "public"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody9"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "real",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "status": "triage",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "timestamps": [
                      {
                        "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                        "name": "last_activity"
                      }
                    ],
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody12"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Create Incidents V1",
        "tags": [
          "Incidents V1"
        ],
        "deprecated": true
      }
    },
    "/v1/incidents/{id}": {
      "get": {
        "description": "Get a single incident.",
        "operationId": "Incidents V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the incident",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "real",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "status": "triage",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "timestamps": [
                      {
                        "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                        "name": "last_activity"
                      }
                    ],
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody12"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incidents V1",
        "tags": [
          "Incidents V1"
        ],
        "deprecated": true
      }
    },
    "/v1/openapi.json": {
      "get": {
        "tags": [
          "Utilities V1"
        ],
        "summary": "OpenAPI Utilities V1",
        "description": "Get the OpenAPI (v2) definition.",
        "operationId": "Utilities V1#OpenAPI",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{}",
                  "format": "binary"
                },
                "example": "{}"
              }
            }
          }
        }
      }
    },
    "/v1/openapiV3.json": {
      "get": {
        "tags": [
          "Utilities V1"
        ],
        "summary": "OpenAPIV3 Utilities V1",
        "description": "Get the OpenAPI (v3) definition.",
        "operationId": "Utilities V1#OpenAPIV3",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{}",
                  "format": "binary"
                },
                "example": "{}"
              }
            }
          }
        }
      }
    },
    "/v1/severities": {
      "get": {
        "tags": [
          "Severities V1"
        ],
        "summary": "List Severities V1",
        "description": "List all incident severities for an organisation.",
        "operationId": "Severities V1#List",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody17"
                },
                "example": {
                  "severities": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Severities V1"
        ],
        "summary": "Create Severities V1",
        "description": "Create a new severity",
        "operationId": "Severities V1#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody12"
              },
              "example": {
                "description": "Issues with **low impact**.",
                "name": "Minor",
                "rank": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody15"
                },
                "example": {
                  "severity": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Issues with **low impact**.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Minor",
                    "rank": 1,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/severities/{id}": {
      "delete": {
        "tags": [
          "Severities V1"
        ],
        "summary": "Delete Severities V1",
        "description": "Delete a severity",
        "operationId": "Severities V1#Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the severity",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier of the severity",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          }
        }
      },
      "get": {
        "tags": [
          "Severities V1"
        ],
        "summary": "Show Severities V1",
        "description": "Get a single incident severity.",
        "operationId": "Severities V1#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the severity",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier of the severity",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody15"
                },
                "example": {
                  "severity": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Issues with **low impact**.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Minor",
                    "rank": 1,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Severities V1"
        ],
        "summary": "Update Severities V1",
        "description": "Update an existing severity",
        "operationId": "Severities V1#Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the severity",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier of the severity",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody12"
              },
              "example": {
                "description": "Issues with **low impact**.",
                "name": "Minor",
                "rank": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody15"
                },
                "example": {
                  "severity": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Issues with **low impact**.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Minor",
                    "rank": 1,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/actions": {
      "get": {
        "tags": [
          "Actions V2"
        ],
        "summary": "List Actions V2",
        "description": "List all actions for an organisation.",
        "operationId": "Actions V2#List",
        "parameters": [
          {
            "name": "incident_id",
            "in": "query",
            "description": "Find actions related to this incident",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Find actions related to this incident",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          {
            "name": "incident_mode",
            "in": "query",
            "description": "Filter to actions from incidents of the given mode. If not set, only actions from `standard` and `retrospective` incidents are returned",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Filter to actions from incidents of the given mode. If not set, only actions from `standard` and `retrospective` incidents are returned",
              "example": "standard",
              "enum": [
                "standard",
                "retrospective",
                "test",
                "tutorial",
                "stream"
              ]
            },
            "examples": {
              "default": {
                "summary": "default",
                "value": "standard"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody2"
                },
                "example": {
                  "actions": [
                    {
                      "assignee": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      },
                      "completed_at": "2021-08-17T13:28:57.801578Z",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Call the fire brigade",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "status": "outstanding",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/actions/{id}": {
      "get": {
        "tags": [
          "Actions V2"
        ],
        "summary": "Show Actions V2",
        "description": "Get a single incident action.",
        "operationId": "Actions V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the action",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the action",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody2"
                },
                "example": {
                  "action": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/alert_events/http/{alert_source_config_id}": {
      "post": {
        "tags": [
          "Alert Events V2"
        ],
        "summary": "CreateHTTP Alert Events V2",
        "description": "Create an alert event using an HTTP source.",
        "operationId": "Alert Events V2#CreateHTTP",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Token used to authenticate the request, generated when configuring the alert source. Will be consumed via a URL query string parameter",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Token used to authenticate the request, generated when configuring the alert source. Will be consumed via a URL query string parameter",
              "example": "some-random-string"
            },
            "example": "some-random-string"
          },
          {
            "name": "alert_source_config_id",
            "in": "path",
            "description": "Which alert source config produced this alert",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Which alert source config produced this alert",
              "example": "01GW2G3V0S59R238FAHPDS1R66"
            },
            "example": "01GW2G3V0S59R238FAHPDS1R66"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHTTPRequestBody"
              },
              "example": {
                "deduplication_key": "4293868629",
                "description": "We've detected a number of timeouts on hello.world.com, the service may be down. To fix...",
                "metadata": {
                  "service": "hello.world.com",
                  "team": [
                    "my-team"
                  ]
                },
                "source_url": "https://www.my-alerting-platform.com/alerts/my-alert-123",
                "status": "firing",
                "title": "*errors.withMessage: PG::Error failed to connect"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertResult"
                },
                "example": {
                  "deduplication_key": "unique-key",
                  "message": "Event accepted for processing",
                  "status": "success"
                }
              }
            }
          }
        }
      }
    },
    "/v2/catalog_entries": {
      "get": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "ListEntries Catalog V2",
        "description": "List entries for a catalog type.",
        "operationId": "Catalog V2#ListEntries",
        "parameters": [
          {
            "name": "catalog_type_id",
            "in": "query",
            "description": "ID of this catalog type",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Integer number of records to return",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "Integer number of records to return",
              "default": 25,
              "example": 25,
              "format": "int64",
              "maximum": 250
            },
            "example": 25
          },
          {
            "name": "after",
            "in": "query",
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEntriesResponseBody"
                },
                "example": {
                  "catalog_entries": [
                    {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "attribute_values": {
                        "abc123": {
                          "array_value": [
                            {
                              "catalog_entry": {
                                "archived_at": "2021-08-17T14:28:57.801578Z",
                                "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "catalog_entry_name": "Primary escalation",
                                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                              },
                              "helptext": "Collection of standalone automations like auto-closing incidents.",
                              "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                              "is_image_slack_icon": false,
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity",
                              "sort_key": "000020",
                              "unavailable": false,
                              "value": "abc123"
                            }
                          ],
                          "value": {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "Collection of standalone automations like auto-closing incidents.",
                            "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "000020",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        }
                      },
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call",
                      "rank": 3,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ],
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "CreateEntry Catalog V2",
        "description": "Create an entry within the catalog. We support a maximum of 50,000 entries per type.",
        "operationId": "Catalog V2#CreateEntry",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntryRequestBody"
              },
              "example": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "name": "Primary On-call",
                "rank": 3
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEntryResponseBody"
                },
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "Collection of standalone automations like auto-closing incidents.",
                            "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "000020",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        ],
                        "value": {
                          "catalog_entry": {
                            "archived_at": "2021-08-17T14:28:57.801578Z",
                            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "catalog_entry_name": "Primary escalation",
                            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                          },
                          "helptext": "Collection of standalone automations like auto-closing incidents.",
                          "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                          "is_image_slack_icon": false,
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity",
                          "sort_key": "000020",
                          "unavailable": false,
                          "value": "abc123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/catalog_entries/{id}": {
      "delete": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "DestroyEntry Catalog V2",
        "description": "Archives a catalog entry.",
        "operationId": "Catalog V2#DestroyEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog entry",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "ShowEntry Catalog V2",
        "description": "Show a single catalog entry.",
        "operationId": "Catalog V2#ShowEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog entry",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowEntryResponseBody"
                },
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "Collection of standalone automations like auto-closing incidents.",
                            "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "000020",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        ],
                        "value": {
                          "catalog_entry": {
                            "archived_at": "2021-08-17T14:28:57.801578Z",
                            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "catalog_entry_name": "Primary escalation",
                            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                          },
                          "helptext": "Collection of standalone automations like auto-closing incidents.",
                          "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                          "is_image_slack_icon": false,
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity",
                          "sort_key": "000020",
                          "unavailable": false,
                          "value": "abc123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "UpdateEntry Catalog V2",
        "description": "Updates an existing catalog entry.",
        "operationId": "Catalog V2#UpdateEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog entry",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEntryRequestBody"
              },
              "example": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "name": "Primary On-call",
                "rank": 3
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowEntryResponseBody"
                },
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "Collection of standalone automations like auto-closing incidents.",
                            "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "000020",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        ],
                        "value": {
                          "catalog_entry": {
                            "archived_at": "2021-08-17T14:28:57.801578Z",
                            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "catalog_entry_name": "Primary escalation",
                            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                          },
                          "helptext": "Collection of standalone automations like auto-closing incidents.",
                          "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                          "is_image_slack_icon": false,
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity",
                          "sort_key": "000020",
                          "unavailable": false,
                          "value": "abc123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/catalog_resources": {
      "get": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "ListResources Catalog V2",
        "description": "List available engine resources for the catalog.\n\nA resource represents a type of data that can be held within the catalog, so this\nendpoint can be used to see what attribute types can be used when updating the\nschema of a catalog type.\n",
        "operationId": "Catalog V2#ListResources",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResourcesResponseBody"
                },
                "example": {
                  "resources": [
                    {
                      "category": "custom",
                      "description": "Boolean true or false value",
                      "label": "GitHub Repository",
                      "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                      "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/catalog_types": {
      "get": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "ListTypes Catalog V2",
        "description": "List all catalog types for an organisation, including those synced from external resources.",
        "operationId": "Catalog V2#ListTypes",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTypesResponseBody"
                },
                "example": {
                  "catalog_types": [
                    {
                      "annotations": {
                        "incident.io/catalog-importer/id": "id-of-config"
                      },
                      "categories": [
                        "issue-tracker"
                      ],
                      "color": "yellow",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Represents Kubernetes clusters that we run inside of GKE.",
                      "dynamic_resource_parameter": "abc123",
                      "estimated_count": 7,
                      "icon": "bolt",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_editable": false,
                      "last_synced_at": "2021-08-17T13:28:57.801578Z",
                      "name": "Kubernetes Cluster",
                      "ranked": true,
                      "registry_type": "PagerDutyService",
                      "required_integrations": [
                        "pager_duty"
                      ],
                      "schema": {
                        "attributes": [
                          {
                            "array": false,
                            "backlink_attribute": "abc123",
                            "id": "01GW2G3V0S59R238FAHPDS1R66",
                            "mode": "manual",
                            "name": "tier",
                            "path": [
                              {
                                "attribute_id": "abc123",
                                "attribute_name": "abc123"
                              }
                            ],
                            "type": "Custom[\"Service\"]"
                          }
                        ],
                        "version": 1
                      },
                      "semantic_type": "custom",
                      "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                      "type_name": "Custom[\"BackstageGroup\"]",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "CreateType Catalog V2",
        "description": "Create a catalog type. The schema must be updated using the UpdateTypeSchema endpoint.",
        "operationId": "Catalog V2#CreateType",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTypeRequestBody"
              },
              "example": {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "icon": "bolt",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                "type_name": "Custom[\"BackstageGroup\"]"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTypeResponseBody"
                },
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/catalog_types/{id}": {
      "delete": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "DestroyType Catalog V2",
        "description": "Archives a catalog type and associated entries.",
        "operationId": "Catalog V2#DestroyType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "ShowType Catalog V2",
        "description": "Show a single catalog type.",
        "operationId": "Catalog V2#ShowType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTypeResponseBody"
                },
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "UpdateType Catalog V2",
        "description": "Updates an existing catalog type. The schema must be updated using the UpdateTypeSchema endpoint.",
        "operationId": "Catalog V2#UpdateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTypeRequestBody"
              },
              "example": {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "icon": "bolt",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "source_repo_url": "https://github.com/my-company/incident-io-catalog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTypeResponseBody"
                },
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/catalog_types/{id}/actions/update_schema": {
      "post": {
        "tags": [
          "Catalog V2"
        ],
        "summary": "UpdateTypeSchema Catalog V2",
        "description": "Update an existing catalog types schema, adding or removing attributes.\n\nUpdating the schema is handled separately from creating and updating types, so that you don't\nhave to worry about dependencies between types. For example, if type A has an attribute that\nrelies on type B, you would have to create type B first.\n\nBy allowing the creation of types without a schema, they can be created in any order, but it\nmeans that you need to make a separate call to this endpoint to update the schema.",
        "operationId": "Catalog V2#UpdateTypeSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of this catalog type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTypeSchemaRequestBody"
              },
              "example": {
                "attributes": [
                  {
                    "array": false,
                    "backlink_attribute": "abc123",
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "manual",
                    "name": "tier",
                    "path": [
                      {
                        "attribute_id": "abc123"
                      }
                    ],
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTypeResponseBody"
                },
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "bolt",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/custom_fields": {
      "get": {
        "tags": [
          "Custom Fields V2"
        ],
        "summary": "List Custom Fields V2",
        "description": "List all custom fields for an organisation.",
        "operationId": "Custom Fields V2#List",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody5"
                },
                "example": {
                  "custom_fields": [
                    {
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Fields V2"
        ],
        "summary": "Create Custom Fields V2",
        "description": "Create a new custom field",
        "operationId": "Custom Fields V2#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody3"
              },
              "example": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "name": "Affected Team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody5"
                },
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/custom_fields/{id}": {
      "delete": {
        "tags": [
          "Custom Fields V2"
        ],
        "summary": "Delete Custom Fields V2",
        "description": "Delete a custom field",
        "operationId": "Custom Fields V2#Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the custom field",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Custom Fields V2"
        ],
        "summary": "Show Custom Fields V2",
        "description": "Get a single custom field.",
        "operationId": "Custom Fields V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the custom field",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody5"
                },
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Custom Fields V2"
        ],
        "summary": "Update Custom Fields V2",
        "description": "Update the details of a custom field",
        "operationId": "Custom Fields V2#Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the custom field",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody3"
              },
              "example": {
                "description": "Which team is impacted by this issue",
                "name": "Affected Team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody5"
                },
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/escalation_paths": {
      "post": {
        "tags": [
          "Escalations V2"
        ],
        "summary": "CreatePath Escalations V2",
        "description": "Create an escalation path.\n\nAn escalation path is a series of steps that describe how a page should be escalated,\nrepresented as graph, supporting conditional branches based on alert priority and working\nintervals.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#CreatePath",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePathRequestBody"
              },
              "example": {
                "name": "Urgent Support",
                "path": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "if_else": {
                      "conditions": [
                        {
                          "operation": "one_of",
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": "incident.severity"
                        }
                      ],
                      "else_path": [
                        {}
                      ],
                      "then_path": [
                        {}
                      ]
                    },
                    "level": {
                      "targets": [
                        {
                          "id": "lawrencejones",
                          "type": "user",
                          "urgency": "high"
                        }
                      ],
                      "time_to_ack_interval_condition": "active",
                      "time_to_ack_seconds": 1800,
                      "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "repeat": {
                      "repeat_times": 3,
                      "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "type": "if_else"
                  }
                ],
                "working_hours": [
                  {
                    "id": "abc123",
                    "name": "abc123",
                    "timezone": "abc123",
                    "weekday_intervals": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "abc123"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePathResponseBody"
                },
                "example": {
                  "escalation_path": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Urgent Support",
                    "path": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "if_else": {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "else_path": [
                            {}
                          ],
                          "then_path": [
                            {}
                          ]
                        },
                        "level": {
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "repeat": {
                          "repeat_times": 3,
                          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "type": "if_else"
                      }
                    ],
                    "working_hours": [
                      {
                        "id": "abc123",
                        "name": "abc123",
                        "timezone": "abc123",
                        "weekday_intervals": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "abc123"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/escalation_paths/{id}": {
      "delete": {
        "tags": [
          "Escalations V2"
        ],
        "summary": "DestroyPath Escalations V2",
        "description": "Archives an escalation path.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#DestroyPath",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for this escalation path.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for this escalation path.",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Escalations V2"
        ],
        "summary": "ShowPath Escalations V2",
        "description": "Show an escalation path.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#ShowPath",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for this escalation path.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for this escalation path.",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePathResponseBody"
                },
                "example": {
                  "escalation_path": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Urgent Support",
                    "path": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "if_else": {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "else_path": [
                            {}
                          ],
                          "then_path": [
                            {}
                          ]
                        },
                        "level": {
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "repeat": {
                          "repeat_times": 3,
                          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "type": "if_else"
                      }
                    ],
                    "working_hours": [
                      {
                        "id": "abc123",
                        "name": "abc123",
                        "timezone": "abc123",
                        "weekday_intervals": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "abc123"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Escalations V2"
        ],
        "summary": "UpdatePath Escalations V2",
        "description": "Updates an escalation path.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#UpdatePath",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for this escalation path.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for this escalation path.",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePathRequestBody"
              },
              "example": {
                "name": "Urgent Support",
                "path": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "if_else": {
                      "conditions": [
                        {
                          "operation": "one_of",
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": "incident.severity"
                        }
                      ],
                      "else_path": [
                        {}
                      ],
                      "then_path": [
                        {}
                      ]
                    },
                    "level": {
                      "targets": [
                        {
                          "id": "lawrencejones",
                          "type": "user",
                          "urgency": "high"
                        }
                      ],
                      "time_to_ack_interval_condition": "active",
                      "time_to_ack_seconds": 1800,
                      "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "repeat": {
                      "repeat_times": 3,
                      "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "type": "if_else"
                  }
                ],
                "working_hours": [
                  {
                    "id": "abc123",
                    "name": "abc123",
                    "timezone": "abc123",
                    "weekday_intervals": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "abc123"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePathResponseBody"
                },
                "example": {
                  "escalation_path": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Urgent Support",
                    "path": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "if_else": {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "else_path": [
                            {}
                          ],
                          "then_path": [
                            {}
                          ]
                        },
                        "level": {
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "repeat": {
                          "repeat_times": 3,
                          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "type": "if_else"
                      }
                    ],
                    "working_hours": [
                      {
                        "id": "abc123",
                        "name": "abc123",
                        "timezone": "abc123",
                        "weekday_intervals": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "abc123"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/follow_ups": {
      "get": {
        "tags": [
          "Follow-ups V2"
        ],
        "summary": "List Follow-ups V2",
        "description": "List all follow-ups for an organisation.",
        "operationId": "Follow-ups V2#List",
        "parameters": [
          {
            "name": "incident_id",
            "in": "query",
            "description": "Find follow-ups related to this incident",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Find follow-ups related to this incident",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          {
            "name": "incident_mode",
            "in": "query",
            "description": "Filter to follow-ups from incidents of the given mode. If not set, only follow-ups from `standard` and `retrospective` incidents are returned",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Filter to follow-ups from incidents of the given mode. If not set, only follow-ups from `standard` and `retrospective` incidents are returned",
              "example": "standard",
              "enum": [
                "standard",
                "retrospective",
                "test",
                "tutorial",
                "stream"
              ]
            },
            "example": "standard"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody6"
                },
                "example": {
                  "follow_ups": [
                    {
                      "assignee": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      },
                      "completed_at": "2021-08-17T13:28:57.801578Z",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Call the fire brigade",
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "priority": {
                        "description": "A follow-up that requires immediate attention.",
                        "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                        "name": "Urgent",
                        "rank": 10
                      },
                      "status": "outstanding",
                      "title": "Cat is stuck in the tree",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/follow_ups/{id}": {
      "get": {
        "tags": [
          "Follow-ups V2"
        ],
        "summary": "Show Follow-ups V2",
        "description": "Get a single incident follow-up.",
        "operationId": "Follow-ups V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the follow-up",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the follow-up",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody6"
                },
                "example": {
                  "follow_up": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "priority": {
                      "description": "A follow-up that requires immediate attention.",
                      "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                      "name": "Urgent",
                      "rank": 10
                    },
                    "status": "outstanding",
                    "title": "Cat is stuck in the tree",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incident_roles": {
      "get": {
        "tags": [
          "Incident Roles V2"
        ],
        "summary": "List Incident Roles V2",
        "description": "List all incident roles for an organisation.",
        "operationId": "Incident Roles V2#List",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody9"
                },
                "example": {
                  "incident_roles": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incident Roles V2"
        ],
        "summary": "Create Incident Roles V2",
        "description": "Create a new incident role",
        "operationId": "Incident Roles V2#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody7"
              },
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "shortform": "lead"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody8"
                },
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incident_roles/{id}": {
      "delete": {
        "tags": [
          "Incident Roles V2"
        ],
        "summary": "Delete Incident Roles V2",
        "description": "Removes an existing role",
        "operationId": "Incident Roles V2#Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Incident Roles V2"
        ],
        "summary": "Show Incident Roles V2",
        "description": "Get a single incident role.",
        "operationId": "Incident Roles V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody8"
                },
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incident Roles V2"
        ],
        "summary": "Update Incident Roles V2",
        "description": "Update an existing incident role",
        "operationId": "Incident Roles V2#Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody5"
              },
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "shortform": "lead"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody8"
                },
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incident_timestamps": {
      "get": {
        "tags": [
          "Incident Timestamps V2"
        ],
        "summary": "List Incident Timestamps V2",
        "description": "List all incident timestamps for an organisation.",
        "operationId": "Incident Timestamps V2#List",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody11"
                },
                "example": {
                  "incident_timestamps": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Impact started",
                      "rank": 1
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/incident_timestamps/{id}": {
      "get": {
        "tags": [
          "Incident Timestamps V2"
        ],
        "summary": "Show Incident Timestamps V2",
        "description": "Get a single incident timestamp.",
        "operationId": "Incident Timestamps V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of this incident timestamp",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique ID of this incident timestamp",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody10"
                },
                "example": {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incident_updates": {
      "get": {
        "tags": [
          "Incident Updates V2"
        ],
        "summary": "List Incident Updates V2",
        "description": "List all incident updates for an organisation, or for a specific incident.",
        "operationId": "Incident Updates V2#List",
        "parameters": [
          {
            "name": "incident_id",
            "in": "query",
            "description": "Incident whose updates you want to list",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Incident whose updates you want to list",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
            },
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Integer number of records to return",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "Integer number of records to return",
              "default": 25,
              "example": 25,
              "format": "int64",
              "maximum": 500
            },
            "example": 25
          },
          {
            "name": "after",
            "in": "query",
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody13"
                },
                "example": {
                  "incident_updates": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "merged_into_incident_id": "abc123",
                      "message": "We're working on a fix, hoping to ship in the next 30 minutes",
                      "new_incident_status": {
                        "category": "triage",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                        "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                        "name": "Closed",
                        "rank": 4,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "new_severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "updater": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incidents": {
      "get": {
        "tags": [
          "Incidents V2"
        ],
        "summary": "List Incidents V2",
        "description": "List all incidents for an organisation.\n\nThis endpoint supports a number of filters, which can help find incidents matching certain\ncriteria.\n\nFilters are provided as query parameters, but due to the dynamic nature of what you can\nquery by (different accounts have different custom fields, statuses, etc) they are more\ncomplex than most.\n\nTo help, here are some exemplar curl requests with a human description of what they search\nfor.\n\nNote that:\n- Filters may be used together, and the result will be incidents that match all filters.\n- IDs are normally in UUID format, but have been replaced with shorter strings to improve\nreadability.\n- All query parameters must be URI encoded.\n\n### By status\n\nWith status of id=ABC, find all incidents that are set to that status:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status[one_of]=ABC'\n\nOr all incidents that are not set to status with id=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status[not_in]=ABC'\n\n### By created_at\n\nFind all incidents created_at before or after a given date.\nPossible values are \"gte\" (greater than or equal to) and \"lte\" (less than or equal to). The\nfollowing example finds all incidents created before or on 2021-01-02:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'created_at[lte]=2021-01-02'\n\n### By status category\n\nFind all incidents that are in a status category. Possible values are \"triage\",\n\"declined\", \"merged\", \"canceled\", \"live\", \"learning\" and \"closed\":\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status_category[one_of]=live'\n\nOr all incidents that are not in a status category:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status_category[not_in]=live'\n\n\n### By severity\n\nWith severity of id=ABC, find all incidents that are set to that severity:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[one_of]=ABC'\n\nOr all incidents where severity rank is greater-than-or-equal-to the rank of severity\nid=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[gte]=ABC'\n\nOr all incidents where severity rank is less-than-or-equal-to the rank of severity id=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[lte]=ABC'\n\n### By incident type\n\nWith incident type of id=ABC, find all incidents that are of that type:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_type[one_of]=ABC'\n\nOr all incidents not of that type:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_type[not_in]=ABC'\n\n### By incident mode\n\nBy default, we return standard and retrospective incidents. This means that test and\ntutorial incidents are filtered out. To override this behaviour, you can use the\nmode filter to specify which modes you want to get.\n\nTo find incidents of all modes:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'mode[one_of]=standard&mode[one_of]=retrospective&mode[one_of]=test&mode[one_of]=tutorial'\n\nTo find just test incidents:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'mode[one_of]=test'\n\n\n### By incident role\n\nRoles and custom fields have another nested layer in the query parameter, to account for\noperations against any of the roles or custom fields created in the account.\n\nWith incident role id=ABC, find all incidents where that role is unset:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_role[ABC][is_blank]=true'\n\nOr where the role has been set:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_role[ABC][is_blank]=false'\n\n### By option custom fields\n\nWith an option custom field id=ABC, all incidents that have field ABC set to the custom\nfield option of id=XYZ:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'custom_field[ABC][one_of]=XYZ'\n\nOr all incidents that do not have custom field id=ABC set to option id=XYZ:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'custom_field[ABC][not_in]=XYZ'\n",
        "operationId": "Incidents V2#List",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "number of records to return",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "number of records to return",
              "default": 25,
              "example": 25,
              "format": "int64"
            },
            "example": 25
          },
          {
            "name": "after",
            "in": "query",
            "description": "An incident's ID. This endpoint will return a list of incidents after this ID in relation to the API response order.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "An incident's ID. This endpoint will return a list of incidents after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter on incident status. The accepted operators are 'one_of', or 'not_in'.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on incident status. The accepted operators are 'one_of', or 'not_in'.",
              "example": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "some_value"
                },
                "example": [
                  "some_value"
                ]
              }
            },
            "example": {
              "one_of": [
                "01GBSQF3FHF7FWZQNWGHAVQ804"
              ]
            }
          },
          {
            "name": "status_category",
            "in": "query",
            "description": "Filter on the category of the incidents status. The accepted operators are 'one_of', or 'not_in'. If this is not provided, this value defaults to `{\"one_of\": [\"triage\", \"active\", \"post-incident\", \"closed\"] }`, meaning that canceled, declined and merged incidents are not included.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on the category of the incidents status. The accepted operators are 'one_of', or 'not_in'. If this is not provided, this value defaults to `{\"one_of\": [\"triage\", \"active\", \"post-incident\", \"closed\"] }`, meaning that canceled, declined and merged incidents are not included.",
              "example": {
                "one_of": [
                  "active"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "some_value"
                },
                "example": [
                  "some_value"
                ]
              }
            },
            "example": {
              "one_of": [
                "active"
              ]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "Filter on incident created at timestamp. The accepted operators are 'gte', 'lte' and 'date_range'.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on incident created at timestamp. The accepted operators are 'gte', 'lte' and 'date_range'.",
              "example": {
                "created_at[gte]": [
                  "2024-05-01"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "some_value"
                },
                "example": [
                  "some_value"
                ]
              }
            },
            "example": {
              "created_at[gte]": [
                "2024-05-01"
              ]
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Filter on incident severity. The accepted operators are 'one_of', 'not_in', 'gte', 'lte'.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on incident severity. The accepted operators are 'one_of', 'not_in', 'gte', 'lte'.",
              "example": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "some_value"
                },
                "example": [
                  "some_value"
                ]
              }
            },
            "example": {
              "one_of": [
                "01GBSQF3FHF7FWZQNWGHAVQ804"
              ]
            }
          },
          {
            "name": "incident_type",
            "in": "query",
            "description": "Filter on incident type. The accepted operators are 'one_of, or 'not_in'.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on incident type. The accepted operators are 'one_of, or 'not_in'.",
              "example": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "some_value"
                },
                "example": [
                  "some_value"
                ]
              }
            },
            "example": {
              "one_of": [
                "01GBSQF3FHF7FWZQNWGHAVQ804"
              ]
            }
          },
          {
            "name": "incident_role",
            "in": "query",
            "description": "Filter on an incident role. Role ID should be sent, followed by the operator and values. The accepted operators are 'one_of', 'is_blank'.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on an incident role. Role ID should be sent, followed by the operator and values. The accepted operators are 'one_of', 'is_blank'.",
              "example": {
                "01GBSQF3FHF7FWZQNWGHAVQ804": {
                  "one_of": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "01ET65M7ZARSFZ6TFDFVQDN9AA"
                  ]
                }
              },
              "additionalProperties": {
                "type": "object",
                "example": {
                  "abc123": [
                    "value"
                  ]
                },
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "value"
                  },
                  "example": [
                    "value"
                  ]
                }
              }
            },
            "example": {
              "01GBSQF3FHF7FWZQNWGHAVQ804": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804",
                  "01ET65M7ZARSFZ6TFDFVQDN9AA"
                ]
              }
            }
          },
          {
            "name": "custom_field",
            "in": "query",
            "description": "Filter on an incident custom field. Custom field ID should be sent, followed by the operator and values. Accepted operator will depend on the custom field type.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on an incident custom field. Custom field ID should be sent, followed by the operator and values. Accepted operator will depend on the custom field type.",
              "example": {
                "01GBSQF3FHF7FWZQNWGHAVQ804": {
                  "one_of": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "01ET65M7ZARSFZ6TFDFVQDN9AA"
                  ]
                }
              },
              "additionalProperties": {
                "type": "object",
                "example": {
                  "abc123": [
                    "value"
                  ]
                },
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "value"
                  },
                  "example": [
                    "value"
                  ]
                }
              }
            },
            "example": {
              "01GBSQF3FHF7FWZQNWGHAVQ804": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804",
                  "01ET65M7ZARSFZ6TFDFVQDN9AA"
                ]
              }
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Filter on incident mode. The accepted operator is 'one_of'.  If this is not provided, this value defaults to `{\"one_of\": [\"standard\", \"retrospective\"] }`, meaning that test and tutorial incidents are not included.",
            "allowEmptyValue": true,
            "schema": {
              "type": "object",
              "description": "Filter on incident mode. The accepted operator is 'one_of'.  If this is not provided, this value defaults to `{\"one_of\": [\"standard\", \"retrospective\"] }`, meaning that test and tutorial incidents are not included.",
              "example": {
                "one_of": [
                  "retrospective"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "some_value"
                },
                "example": [
                  "some_value"
                ]
              }
            },
            "example": {
              "one_of": [
                "retrospective"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody15"
                },
                "example": {
                  "incidents": [
                    {
                      "call_url": "https://zoom.us/foo",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "creator": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      },
                      "custom_field_entries": [
                        {
                          "custom_field": {
                            "description": "Which team is impacted by this issue",
                            "field_type": "single_select",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Affected Team",
                            "options": [
                              {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              }
                            ]
                          },
                          "values": [
                            {
                              "value_catalog_entry": {
                                "aliases": [
                                  "lawrence@incident.io",
                                  "lawrence"
                                ],
                                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Primary On-call"
                              },
                              "value_link": "https://google.com/",
                              "value_numeric": "123.456",
                              "value_option": {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              },
                              "value_text": "This is my text field, I hope you like it"
                            }
                          ]
                        }
                      ],
                      "duration_metrics": [
                        {
                          "duration_metric": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Lasted"
                          },
                          "value_seconds": 1
                        }
                      ],
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                      "incident_role_assignments": [
                        {
                          "assignee": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          },
                          "role": {
                            "created_at": "2021-08-17T13:28:57.801578Z",
                            "description": "The person currently coordinating the incident",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                            "name": "Incident Lead",
                            "required": false,
                            "role_type": "lead",
                            "shortform": "lead",
                            "updated_at": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_status": {
                        "category": "triage",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                        "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                        "name": "Closed",
                        "rank": 4,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "incident_timestamp_values": [
                        {
                          "incident_timestamp": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Impact started",
                            "rank": 1
                          },
                          "value": {
                            "value": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_type": {
                        "create_in_triage": "always",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Customer facing production outages",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "is_default": false,
                        "name": "Production Outage",
                        "private_incidents_only": false,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "mode": "standard",
                      "name": "Our database is sad",
                      "permalink": "https://app.incident.io/incidents/123",
                      "postmortem_document_url": "https://docs.google.com/my_doc_id",
                      "reference": "INC-123",
                      "severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "slack_channel_id": "C02AW36C1M5",
                      "slack_channel_name": "inc-165-green-parrot",
                      "slack_team_id": "T02A1FSLE8J",
                      "summary": "Our database is really really sad, and we don't know why yet.",
                      "updated_at": "2021-08-17T13:28:57.801578Z",
                      "visibility": "public",
                      "workload_minutes_late": 40.7,
                      "workload_minutes_sleeping": 0,
                      "workload_minutes_total": 60.7,
                      "workload_minutes_working": 20
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25,
                    "total_record_count": 238
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incidents V2"
        ],
        "summary": "Create Incidents V2",
        "description": "Create a new incident.\n\nNote that if the incident mode is set to \"retrospective\" then the new incident\nwill not be announced in Slack.\n",
        "operationId": "Incidents V2#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody10"
              },
              "example": {
                "custom_field_entries": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "values": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_text": "This is my text field, I hope you like it",
                        "value_timestamp": ""
                      }
                    ]
                  }
                ],
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "idempotency_key": "alert-uuid",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    },
                    "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
                  }
                ],
                "incident_status_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "incident_timestamp_values": [
                  {
                    "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                ],
                "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "mode": "standard",
                "name": "Our database is sad",
                "retrospective_incident_options": {
                  "postmortem_document_url": "https://docs.google.com/my_doc_id",
                  "slack_channel_id": "abc123"
                },
                "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "slack_channel_name_override": "inc-123-database-down",
                "slack_team_id": "T02A1FSLE8J",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "visibility": "public"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody13"
                },
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incidents/{id}": {
      "get": {
        "tags": [
          "Incidents V2"
        ],
        "summary": "Show Incidents V2",
        "description": "Get a single incident.\n\nThe ID supplied can be either the incident's full ID, or the numeric part of its\nreference. For example, to get INC-123, you could use either its full ID or:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents/123\n",
        "operationId": "Incidents V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the incident",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the incident",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody13"
                },
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/incidents/{id}/actions/edit": {
      "post": {
        "tags": [
          "Incidents V2"
        ],
        "summary": "Edit Incidents V2",
        "description": "Edit an existing incident.\n\nThis endpoint allows you to edit the properties of an existing incident: e.g. set the severity or update custom fields.\n\nWhen using this endpoint, only fields that are provided will be edited (omitted fields\nwill be ignored).\n",
        "operationId": "Incidents V2#Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the incident that you want to edit",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the incident that you want to edit",
              "example": "01G18REBY9AYH6CMWCJ2CVCYCH"
            },
            "example": "01G18REBY9AYH6CMWCJ2CVCYCH"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRequestBody"
              },
              "example": {
                "incident": {
                  "call_url": "https://zoom.us/foo",
                  "custom_field_entries": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "values": [
                        {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "value_link": "https://google.com/",
                          "value_numeric": "123.456",
                          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "value_text": "This is my text field, I hope you like it",
                          "value_timestamp": ""
                        }
                      ]
                    }
                  ],
                  "incident_role_assignments": [
                    {
                      "assignee": {
                        "email": "bob@example.com",
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "slack_user_id": "USER123"
                      },
                      "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
                    }
                  ],
                  "incident_status_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                  "incident_timestamp_values": [
                    {
                      "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "value": "2021-08-17T13:28:57.801578Z"
                    }
                  ],
                  "name": "Our database is sad",
                  "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                  "summary": "Our database is really really sad, and we don't know why yet."
                },
                "notify_incident_channel": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody13"
                },
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/managed_resources": {
      "post": {
        "tags": [
          "Managed Resources V2"
        ],
        "summary": "CreateManagedResource Managed Resources V2",
        "description": "Called by external providers such as Terraform, this can 'claim' an incident.io resource as being managed externally.",
        "operationId": "Managed Resources V2#CreateManagedResource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManagedResourceRequestBody"
              },
              "example": {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "resource_id": "abc123",
                "resource_type": "schedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateManagedResourceResponseBody"
                },
                "example": {
                  "managed_resource": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "resource_id": "abc123",
                    "resource_type": "schedule",
                    "source_url": "https://github.com/my-company/infrastructure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/schedule_entries": {
      "get": {
        "tags": [
          "Schedules V2"
        ],
        "summary": "ListScheduleEntries Schedules V2",
        "description": "Get a list of schedule entries.",
        "operationId": "Schedules V2#ListScheduleEntries",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "query",
            "description": "The ID of the schedule to get entries for.",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the schedule to get entries for.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          {
            "name": "entry_window_start",
            "in": "query",
            "description": "The start of the window to get entries for.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The start of the window to get entries for.",
              "example": "2021-01-01T00:00:00Z",
              "format": "date-time"
            },
            "example": "2021-01-01T00:00:00Z"
          },
          {
            "name": "entry_window_end",
            "in": "query",
            "description": "The end of the window to get entries for.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "The end of the window to get entries for.",
              "example": "2021-01-01T00:00:00Z",
              "format": "date-time"
            },
            "example": "2021-01-01T00:00:00Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListScheduleEntriesResponseBody"
                },
                "example": {
                  "pagination_meta": {
                    "after": "abc123",
                    "after_url": "abc123"
                  },
                  "schedule_entries": {
                    "final": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "overrides": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "scheduled": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/schedules": {
      "get": {
        "tags": [
          "Schedules V2"
        ],
        "summary": "List Schedules V2",
        "description": "List configured schedules.",
        "operationId": "Schedules V2#List",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "number of records to return",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "number of records to return",
              "default": 25,
              "example": 25,
              "format": "int64"
            },
            "example": 25
          },
          {
            "name": "after",
            "in": "query",
            "description": "A schedule's ID. This endpoint will return a list of schedules after this ID in relation to the API response order.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "A schedule's ID. This endpoint will return a list of schedules after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody16"
                },
                "example": {
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25,
                    "total_record_count": 238
                  },
                  "schedules": [
                    {
                      "annotations": {
                        "incident.io/terraform/version": "3.0.0"
                      },
                      "config": {
                        "rotations": [
                          {
                            "effective_from": "2021-08-17T13:28:57.801578Z",
                            "handover_start_at": "2021-08-17T13:28:57.801578Z",
                            "handovers": [
                              {
                                "interval": 1,
                                "interval_type": "daily"
                              }
                            ],
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "layers": [
                              {
                                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                                "name": "Layer 1"
                              }
                            ],
                            "name": "Primary On-Call Schedule",
                            "users": [
                              {
                                "email": "lisa@incident.io",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Lisa Karlin Curtis",
                                "role": "viewer",
                                "slack_user_id": "U02AYNF2XJM"
                              }
                            ],
                            "working_interval": [
                              {
                                "end_time": "17:00",
                                "start_time": "09:00",
                                "weekday": "tuesday"
                              }
                            ]
                          }
                        ]
                      },
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "current_shifts": [
                        {
                          "end_at": "2021-08-17T13:28:57.801578Z",
                          "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                          "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "start_at": "2021-08-17T13:28:57.801578Z",
                          "user": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          }
                        }
                      ],
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Primary On-Call Schedule",
                      "timezone": "Europe/London",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedules V2"
        ],
        "summary": "Create Schedules V2",
        "description": "Create a new schedule.",
        "operationId": "Schedules V2#Create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody11"
              },
              "example": {
                "schedule": {
                  "annotations": {
                    "incident.io/terraform/version": "version-of-terraform"
                  },
                  "config": {
                    "rotations": [
                      {
                        "effective_from": "2021-08-17T13:28:57.801578Z",
                        "handover_start_at": "2021-08-17T13:28:57.801578Z",
                        "handovers": [
                          {
                            "interval": 1,
                            "interval_type": "daily"
                          }
                        ],
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layers": [
                          {
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "name": "Layer 1"
                          }
                        ],
                        "name": "My Rotation",
                        "users": [
                          {
                            "email": "bob@example.com",
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "slack_user_id": "USER123"
                          }
                        ],
                        "working_interval": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "My Schedule",
                  "timezone": "America/Los_Angeles"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody14"
                },
                "example": {
                  "schedule": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "config": {
                      "rotations": [
                        {
                          "effective_from": "2021-08-17T13:28:57.801578Z",
                          "handover_start_at": "2021-08-17T13:28:57.801578Z",
                          "handovers": [
                            {
                              "interval": 1,
                              "interval_type": "daily"
                            }
                          ],
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layers": [
                            {
                              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                              "name": "Layer 1"
                            }
                          ],
                          "name": "Primary On-Call Schedule",
                          "users": [
                            {
                              "email": "lisa@incident.io",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Lisa Karlin Curtis",
                              "role": "viewer",
                              "slack_user_id": "U02AYNF2XJM"
                            }
                          ],
                          "working_interval": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ]
                        }
                      ]
                    },
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "current_shifts": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Primary On-Call Schedule",
                    "timezone": "Europe/London",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/schedules/{id}": {
      "delete": {
        "tags": [
          "Schedules V2"
        ],
        "summary": "Destroy Schedules V2",
        "description": "Archives a single schedule.",
        "operationId": "Schedules V2#Destroy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique internal ID of the schedule",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique internal ID of the schedule",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
            },
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          }
        }
      },
      "get": {
        "tags": [
          "Schedules V2"
        ],
        "summary": "Show Schedules V2",
        "description": "Get a single schedule.",
        "operationId": "Schedules V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique internal ID of the schedule",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique internal ID of the schedule",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
            },
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody14"
                },
                "example": {
                  "schedule": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "config": {
                      "rotations": [
                        {
                          "effective_from": "2021-08-17T13:28:57.801578Z",
                          "handover_start_at": "2021-08-17T13:28:57.801578Z",
                          "handovers": [
                            {
                              "interval": 1,
                              "interval_type": "daily"
                            }
                          ],
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layers": [
                            {
                              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                              "name": "Layer 1"
                            }
                          ],
                          "name": "Primary On-Call Schedule",
                          "users": [
                            {
                              "email": "lisa@incident.io",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Lisa Karlin Curtis",
                              "role": "viewer",
                              "slack_user_id": "U02AYNF2XJM"
                            }
                          ],
                          "working_interval": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ]
                        }
                      ]
                    },
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "current_shifts": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Primary On-Call Schedule",
                    "timezone": "Europe/London",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedules V2"
        ],
        "summary": "Update Schedules V2",
        "description": "Update a schedule.",
        "operationId": "Schedules V2#Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The schedule ID to update.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The schedule ID to update.",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
            },
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody7"
              },
              "example": {
                "schedule": {
                  "annotations": {
                    "incident.io/terraform/version": "version-of-terraform"
                  },
                  "config": {
                    "rotations": [
                      {
                        "effective_from": "2021-08-17T13:28:57.801578Z",
                        "handover_start_at": "2021-08-17T13:28:57.801578Z",
                        "handovers": [
                          {
                            "interval": 1,
                            "interval_type": "daily"
                          }
                        ],
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layers": [
                          {
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "name": "Layer 1"
                          }
                        ],
                        "name": "My Rotation",
                        "users": [
                          {
                            "email": "bob@example.com",
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "slack_user_id": "USER123"
                          }
                        ],
                        "working_interval": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "My Schedule",
                  "timezone": "America/Los_Angeles"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody14"
                },
                "example": {
                  "schedule": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "config": {
                      "rotations": [
                        {
                          "effective_from": "2021-08-17T13:28:57.801578Z",
                          "handover_start_at": "2021-08-17T13:28:57.801578Z",
                          "handovers": [
                            {
                              "interval": 1,
                              "interval_type": "daily"
                            }
                          ],
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layers": [
                            {
                              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                              "name": "Layer 1"
                            }
                          ],
                          "name": "Primary On-Call Schedule",
                          "users": [
                            {
                              "email": "lisa@incident.io",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Lisa Karlin Curtis",
                              "role": "viewer",
                              "slack_user_id": "U02AYNF2XJM"
                            }
                          ],
                          "working_interval": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ]
                        }
                      ]
                    },
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "current_shifts": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Primary On-Call Schedule",
                    "timezone": "Europe/London",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/users": {
      "get": {
        "tags": [
          "Users V2"
        ],
        "summary": "List Users V2",
        "description": "List users for an organisation.",
        "operationId": "Users V2#List",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Filter by email address",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Filter by email address",
              "example": "john.doe@incident.io"
            },
            "example": "john.doe@incident.io"
          },
          {
            "name": "slack_user_id",
            "in": "query",
            "description": "Filter by Slack user ID",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "Filter by Slack user ID",
              "example": "U12345678"
            },
            "example": "U12345678"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Integer number of records to return",
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "description": "Integer number of records to return",
              "default": 25,
              "example": 25,
              "format": "int64",
              "maximum": 500
            },
            "example": 25
          },
          {
            "name": "after",
            "in": "query",
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91"
            },
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody18"
                },
                "example": {
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  },
                  "users": [
                    {
                      "base_role": {
                        "description": "Elevated permissions for the customer success team.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Customer Success",
                        "slug": "customer-success"
                      },
                      "custom_roles": [
                        {
                          "description": "Elevated permissions for the customer success team.",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Customer Success",
                          "slug": "customer-success"
                        }
                      ],
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/users/{id}": {
      "get": {
        "tags": [
          "Users V2"
        ],
        "summary": "Show Users V2",
        "description": "Get a single user.",
        "operationId": "Users V2#Show",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the user",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier of the user",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody16"
                },
                "example": {
                  "user": {
                    "base_role": {
                      "description": "Elevated permissions for the customer success team.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Customer Success",
                      "slug": "customer-success"
                    },
                    "custom_roles": [
                      {
                        "description": "Elevated permissions for the customer success team.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Customer Success",
                        "slug": "customer-success"
                      }
                    ],
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/workflows": {
      "get": {
        "tags": [
          "Workflows V2"
        ],
        "summary": "ListWorkflows Workflows V2",
        "description": "List all workflows",
        "operationId": "Workflows V2#ListWorkflows",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWorkflowsResponseBody"
                },
                "example": {
                  "workflows": [
                    {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ],
                      "continue_on_step_error": true,
                      "delay": {
                        "conditions_apply_over_delay": false,
                        "for_seconds": 60
                      },
                      "expressions": [
                        {
                          "else_branch": {
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          },
                          "label": "Team Slack channel",
                          "operations": [
                            {
                              "branches": {
                                "branches": [
                                  {
                                    "condition_groups": [
                                      {
                                        "conditions": [
                                          {
                                            "operation": {
                                              "label": "Lawrence Jones",
                                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                            },
                                            "param_bindings": [
                                              {
                                                "array_value": [
                                                  {
                                                    "label": "Lawrence Jones",
                                                    "literal": "SEV123",
                                                    "reference": "incident.severity"
                                                  }
                                                ],
                                                "value": {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              }
                                            ],
                                            "subject": {
                                              "label": "Incident Severity",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "result": {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  }
                                ],
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                }
                              },
                              "filter": {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": {
                                          "label": "Lawrence Jones",
                                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                        },
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": {
                                          "label": "Incident Severity",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "navigate": {
                                "reference": "1235",
                                "reference_label": "Teams"
                              },
                              "operation_type": "navigate",
                              "parse": {
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                },
                                "source": "metadata.annotations[\"github.com/repo\"]"
                              },
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            }
                          ],
                          "reference": "abc123",
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "root_reference": "incident.status"
                        }
                      ],
                      "folder": "My folder 01",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "include_private_incidents": true,
                      "name": "My workflow",
                      "once_for": [
                        {
                          "array": false,
                          "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                          "label": "Incident -> Affected Team",
                          "type": "IncidentSeverity"
                        }
                      ],
                      "runs_from": "2021-08-17T13:28:57.801578Z",
                      "runs_on_incident_modes": [
                        "standard",
                        "retrospective"
                      ],
                      "runs_on_incidents": "newly_created",
                      "state": "active",
                      "steps": [
                        {
                          "label": "PagerDuty Escalate",
                          "name": "pagerduty.escalate"
                        }
                      ],
                      "trigger": {
                        "label": "Incident Updated",
                        "name": "incident.updated"
                      },
                      "version": 3
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workflows V2"
        ],
        "summary": "CreateWorkflow Workflows V2",
        "description": "Create a new workflow",
        "operationId": "Workflows V2#CreateWorkflow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowRequestBody"
              },
              "example": {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "continue_on_step_error": true,
                "delay": {
                  "conditions_apply_over_delay": false,
                  "for_seconds": 60
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": "one_of",
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": "incident.severity"
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "root_reference": "incident.status"
                  }
                ],
                "folder": "My folder 01",
                "include_private_incidents": true,
                "name": "My workflow",
                "once_for": [
                  "incident.url"
                ],
                "runs_on_incident_modes": [
                  "standard",
                  "retrospective"
                ],
                "runs_on_incidents": "newly_created",
                "state": "active",
                "steps": [
                  {
                    "for_each": "abc123",
                    "id": "abc123",
                    "name": "pagerduty.escalate",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "trigger": "incident.updated"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowWorkflowResponseBody"
                },
                "example": {
                  "management_meta": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "source_url": "https://github.com/my-company/infrastructure"
                  },
                  "workflow": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "continue_on_step_error": true,
                    "delay": {
                      "conditions_apply_over_delay": false,
                      "for_seconds": 60
                    },
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "folder": "My folder 01",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "include_private_incidents": true,
                    "name": "My workflow",
                    "once_for": [
                      {
                        "array": false,
                        "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                        "label": "Incident -> Affected Team",
                        "type": "IncidentSeverity"
                      }
                    ],
                    "runs_from": "2021-08-17T13:28:57.801578Z",
                    "runs_on_incident_modes": [
                      "standard",
                      "retrospective"
                    ],
                    "runs_on_incidents": "newly_created",
                    "state": "active",
                    "steps": [
                      {
                        "for_each": "abc123",
                        "id": "abc123",
                        "label": "PagerDuty Escalate",
                        "name": "pagerduty.escalate",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "trigger": {
                      "label": "Incident Updated",
                      "name": "incident.updated"
                    },
                    "version": 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/workflows/{id}": {
      "delete": {
        "tags": [
          "Workflows V2"
        ],
        "summary": "DestroyWorkflow Workflows V2",
        "description": "Archives a workflow",
        "operationId": "Workflows V2#DestroyWorkflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the workflow",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the workflow",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        }
      },
      "get": {
        "tags": [
          "Workflows V2"
        ],
        "summary": "ShowWorkflow Workflows V2",
        "description": "Show a workflow by ID",
        "operationId": "Workflows V2#ShowWorkflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the workflow",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier for the workflow",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowWorkflowResponseBody"
                },
                "example": {
                  "management_meta": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "source_url": "https://github.com/my-company/infrastructure"
                  },
                  "workflow": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "continue_on_step_error": true,
                    "delay": {
                      "conditions_apply_over_delay": false,
                      "for_seconds": 60
                    },
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "folder": "My folder 01",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "include_private_incidents": true,
                    "name": "My workflow",
                    "once_for": [
                      {
                        "array": false,
                        "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                        "label": "Incident -> Affected Team",
                        "type": "IncidentSeverity"
                      }
                    ],
                    "runs_from": "2021-08-17T13:28:57.801578Z",
                    "runs_on_incident_modes": [
                      "standard",
                      "retrospective"
                    ],
                    "runs_on_incidents": "newly_created",
                    "state": "active",
                    "steps": [
                      {
                        "for_each": "abc123",
                        "id": "abc123",
                        "label": "PagerDuty Escalate",
                        "name": "pagerduty.escalate",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "trigger": {
                      "label": "Incident Updated",
                      "name": "incident.updated"
                    },
                    "version": 3
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workflows V2"
        ],
        "summary": "UpdateWorkflow Workflows V2",
        "description": "Updates a workflow",
        "operationId": "Workflows V2#UpdateWorkflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the workflow to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the workflow to update",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "examples": {
              "default": {
                "summary": "default",
                "value": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkflowRequestBody"
              },
              "example": {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "continue_on_step_error": true,
                "delay": {
                  "conditions_apply_over_delay": false,
                  "for_seconds": 60
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": "one_of",
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": "incident.severity"
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "root_reference": "incident.status"
                  }
                ],
                "folder": "My folder 01",
                "include_private_incidents": true,
                "name": "My workflow",
                "once_for": [
                  "incident.url"
                ],
                "runs_on_incident_modes": [
                  "standard",
                  "retrospective"
                ],
                "runs_on_incidents": "newly_created",
                "state": "active",
                "steps": [
                  {
                    "for_each": "abc123",
                    "id": "abc123",
                    "name": "pagerduty.escalate",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowWorkflowResponseBody"
                },
                "example": {
                  "management_meta": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "source_url": "https://github.com/my-company/infrastructure"
                  },
                  "workflow": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "continue_on_step_error": true,
                    "delay": {
                      "conditions_apply_over_delay": false,
                      "for_seconds": 60
                    },
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "folder": "My folder 01",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "include_private_incidents": true,
                    "name": "My workflow",
                    "once_for": [
                      {
                        "array": false,
                        "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                        "label": "Incident -> Affected Team",
                        "type": "IncidentSeverity"
                      }
                    ],
                    "runs_from": "2021-08-17T13:28:57.801578Z",
                    "runs_on_incident_modes": [
                      "standard",
                      "retrospective"
                    ],
                    "runs_on_incidents": "newly_created",
                    "state": "active",
                    "steps": [
                      {
                        "for_each": "abc123",
                        "id": "abc123",
                        "label": "PagerDuty Escalate",
                        "name": "pagerduty.escalate",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "trigger": {
                      "label": "Incident Updated",
                      "name": "incident.updated"
                    },
                    "version": 3
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIKeyCreatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The type of log entry that this is",
            "example": "api_key.created"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "type": "string",
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Development API Key",
                "type": "api_key"
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "Which version the event is",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "action": "api_key.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Development API Key",
              "type": "api_key"
            }
          ],
          "version": 1
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ]
      },
      "APIKeyV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this API key",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "The name of the API key, for the user's reference",
            "example": "My test API key"
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "My test API key"
        },
        "required": [
          "id",
          "name",
          "roles",
          "created_by"
        ]
      },
      "ActionV1": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1"
          },
          "completed_at": {
            "type": "string",
            "description": "When the action was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the action",
            "example": "Call the fire brigade"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV1"
          },
          "follow_up": {
            "type": "boolean",
            "description": "Whether an action is marked as follow-up",
            "example": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "incident_id": {
            "type": "string",
            "description": "Unique identifier of the incident the action belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "status": {
            "type": "string",
            "description": "Status of the action",
            "example": "outstanding",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ]
          },
          "updated_at": {
            "type": "string",
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "follow_up": true,
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "status": "outstanding",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "incident_id",
          "status",
          "follow_up",
          "created_at",
          "updated_at"
        ]
      },
      "ActionV2": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1"
          },
          "completed_at": {
            "type": "string",
            "description": "When the action was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the action",
            "example": "Call the fire brigade"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "incident_id": {
            "type": "string",
            "description": "Unique identifier of the incident the action belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "status": {
            "type": "string",
            "description": "Status of the action",
            "example": "outstanding",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ]
          },
          "updated_at": {
            "type": "string",
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "status": "outstanding",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "incident_id",
          "description",
          "status",
          "created_at",
          "updated_at"
        ]
      },
      "ActorV2": {
        "type": "object",
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/APIKeyV2"
          },
          "user": {
            "$ref": "#/components/schemas/UserV1"
          }
        },
        "example": {
          "api_key": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "My test API key"
          },
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        }
      },
      "AfterPaginationMetaResultV2": {
        "type": "object",
        "properties": {
          "after": {
            "type": "string",
            "description": "The time, if it exists, of the last entry's end time",
            "example": "abc123"
          },
          "after_url": {
            "type": "string",
            "description": "The URL to fetch the next page of entries",
            "example": "abc123"
          }
        },
        "example": {
          "after": "abc123",
          "after_url": "abc123"
        },
        "required": [
          "after",
          "after_url"
        ]
      },
      "AlertResult": {
        "type": "object",
        "properties": {
          "deduplication_key": {
            "type": "string",
            "description": "The deduplication key that the event has been processed with",
            "example": "unique-key",
            "enum": [
              "unique-key"
            ]
          },
          "message": {
            "type": "string",
            "description": "Human readable message giving detail about the event",
            "example": "Event accepted for processing",
            "enum": [
              "Event accepted for processing"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the event",
            "example": "success",
            "enum": [
              "success"
            ]
          }
        },
        "example": {
          "deduplication_key": "unique-key",
          "message": "Event accepted for processing",
          "status": "success"
        },
        "required": [
          "status",
          "message",
          "deduplication_key"
        ]
      },
      "AllResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.incident_created_v2",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.action_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.action_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.membership_granted_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          },
          "private_incident.membership_revoked_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          },
          "public_incident.action_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.action_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          },
          "public_incident.incident_status_updated_v2": {
            "$ref": "#/components/schemas/IncidentWithStatusChangeV2"
          },
          "public_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          }
        },
        "example": {
          "event_type": "public_incident.incident_created_v2",
          "private_incident.action_created_v1": {
            "id": "abc123"
          },
          "private_incident.action_updated_v1": {
            "id": "abc123"
          },
          "private_incident.follow_up_created_v1": {
            "id": "abc123"
          },
          "private_incident.follow_up_updated_v1": {
            "id": "abc123"
          },
          "private_incident.incident_created_v2": {
            "id": "abc123"
          },
          "private_incident.incident_updated_v2": {
            "id": "abc123"
          },
          "private_incident.membership_granted_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          },
          "private_incident.membership_revoked_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          },
          "public_incident.action_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.action_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.follow_up_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.follow_up_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.incident_created_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          },
          "public_incident.incident_status_updated_v2": {
            "incident": {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "duration_metrics": [
                {
                  "duration_metric": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Lasted"
                  },
                  "value_seconds": 1
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            },
            "new_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "previous_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          },
          "public_incident.incident_updated_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "required": [
          "event_type"
        ]
      },
      "AuditLogActorMetadataV2": {
        "type": "object",
        "properties": {
          "api_key_roles": {
            "type": "string",
            "description": "The roles that the API key has, separated by commas (if it's an API key actor)",
            "example": "abc123"
          },
          "external_resource_external_id": {
            "type": "string",
            "description": "The ID of the external resource in the 3rd party system (if it's an external resource actor)",
            "example": "q1234"
          },
          "external_resource_type": {
            "type": "string",
            "description": "The type of the external resource (if it's an external resource actor)",
            "example": "pager_duty_incident"
          },
          "user_base_role_slug": {
            "type": "string",
            "description": "The base role slug of the user (if it's a user actor)",
            "example": "admin"
          },
          "user_custom_role_slugs": {
            "type": "string",
            "description": "The custom role slugs of the user, separated by commas (if it's a user actor)",
            "example": "engineering,security"
          }
        },
        "example": {
          "api_key_roles": "abc123",
          "external_resource_external_id": "q1234",
          "external_resource_type": "pager_duty_incident",
          "user_base_role_slug": "admin",
          "user_custom_role_slugs": "engineering,security"
        }
      },
      "AuditLogActorV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the actor",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogActorMetadataV2"
          },
          "name": {
            "type": "string",
            "description": "The name of the actor",
            "example": "John Doe"
          },
          "type": {
            "type": "string",
            "description": "The type of actor",
            "example": "user",
            "enum": [
              "user",
              "system",
              "api_key",
              "workflow",
              "external_resource"
            ]
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "metadata": {
            "user_base_role_slug": "admin",
            "user_custom_role_slugs": "engineering,security"
          },
          "name": "John Doe",
          "type": "user"
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AuditLogEntryContextV2": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "The location of the actor that performed this action",
            "example": "1.2.3.4"
          },
          "user_agent": {
            "type": "string",
            "description": "The user agent of the actor that performed this action",
            "example": "Chrome/91.0.4472.114"
          }
        },
        "example": {
          "location": "1.2.3.4",
          "user_agent": "Chrome/91.0.4472.114"
        },
        "required": [
          "location"
        ]
      },
      "AuditLogPrivateIncidentAccessAttemptedMetadataV2": {
        "type": "object",
        "properties": {
          "outcome": {
            "type": "string",
            "description": "Whether or not the user was able to access the private incident",
            "example": "granted",
            "enum": [
              "granted",
              "denied"
            ]
          }
        },
        "example": {
          "outcome": "granted"
        }
      },
      "AuditLogTargetV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the target",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "The name of the target",
            "example": "John Doe"
          },
          "type": {
            "type": "string",
            "description": "The type of target",
            "example": "user",
            "enum": [
              "api_key",
              "alert_route",
              "alert_schema",
              "alert_source",
              "announcement_rule",
              "catalog_type",
              "custom_field",
              "debrief_invite_rule",
              "escalation_path",
              "follow_up_priority",
              "incident",
              "incident_duration_metric",
              "incident_role",
              "incident_status",
              "incident_timestamp",
              "incident_type",
              "integration",
              "internal_status_page",
              "nudge",
              "policy",
              "private_incident_membership",
              "rbac_role",
              "schedule",
              "scim_group",
              "severity",
              "status_page",
              "status_page_sub_page",
              "status_page_template",
              "user",
              "workflow"
            ]
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "John Doe",
          "type": "user"
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AuditLogUserRoleMembershipChangedMetadataV2": {
        "type": "object",
        "properties": {
          "after_base_role_slug": {
            "type": "string",
            "description": "The base role slug of the user after their role memberships changed",
            "example": "owner"
          },
          "after_custom_role_slugs": {
            "type": "string",
            "description": "The custom role slugs of the user after their role memberships changed, separated by commas",
            "example": "engineering,data"
          },
          "before_base_role_slug": {
            "type": "string",
            "description": "The base role slug of the user before their role memberships changed",
            "example": "admin"
          },
          "before_custom_role_slugs": {
            "type": "string",
            "description": "The custom role slugs of the user before their role memberships changed, separated by commas",
            "example": "engineering,security"
          }
        },
        "example": {
          "after_base_role_slug": "owner",
          "after_custom_role_slugs": "engineering,data",
          "before_base_role_slug": "admin",
          "before_custom_role_slugs": "engineering,security"
        },
        "required": [
          "before_base_role_slug",
          "before_custom_role_slugs",
          "after_base_role_slug",
          "after_custom_role_slugs"
        ]
      },
      "AuditLogUserSCIMGroupMappingChangedMetadataV2": {
        "type": "object",
        "properties": {
          "after_base_role_slug": {
            "type": "string",
            "description": "The base role slug of this SCIM group after the mapping was changed (if any)",
            "example": "owner"
          },
          "after_custom_role_slugs": {
            "type": "string",
            "description": "The custom role slugs of this SCIM group after the mapping was changed (if any), separated by commas",
            "example": "engineering,data"
          },
          "before_base_role_slug": {
            "type": "string",
            "description": "The base role slug assigned to this SCIM group before the mapping was changed (if any)",
            "example": "admin"
          },
          "before_custom_role_slugs": {
            "type": "string",
            "description": "The custom role slugs of this SCIM group before the mapping was changed (if any), separated by commas",
            "example": "engineering,security"
          }
        },
        "example": {
          "after_base_role_slug": "owner",
          "after_custom_role_slugs": "engineering,data",
          "before_base_role_slug": "admin",
          "before_custom_role_slugs": "engineering,security"
        }
      },
      "CatalogEntryEngineParamBindingV2": {
        "type": "object",
        "properties": {
          "array_value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogEntryEngineParamBindingValueV2"
            },
            "description": "If array_value is set, this helps render the values",
            "example": [
              {
                "catalog_entry": {
                  "archived_at": "2021-08-17T14:28:57.801578Z",
                  "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "catalog_entry_name": "Primary escalation",
                  "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "helptext": "Collection of standalone automations like auto-closing incidents.",
                "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                "is_image_slack_icon": false,
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity",
                "sort_key": "000020",
                "unavailable": false,
                "value": "abc123"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/CatalogEntryEngineParamBindingValueV2"
          }
        },
        "example": {
          "array_value": [
            {
              "catalog_entry": {
                "archived_at": "2021-08-17T14:28:57.801578Z",
                "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "catalog_entry_name": "Primary escalation",
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "helptext": "Collection of standalone automations like auto-closing incidents.",
              "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
              "is_image_slack_icon": false,
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity",
              "sort_key": "000020",
              "unavailable": false,
              "value": "abc123"
            }
          ],
          "value": {
            "catalog_entry": {
              "archived_at": "2021-08-17T14:28:57.801578Z",
              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "catalog_entry_name": "Primary escalation",
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "helptext": "Collection of standalone automations like auto-closing incidents.",
            "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
            "is_image_slack_icon": false,
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity",
            "sort_key": "000020",
            "unavailable": false,
            "value": "abc123"
          }
        }
      },
      "CatalogEntryEngineParamBindingValueV2": {
        "type": "object",
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryReferenceV2"
          },
          "helptext": {
            "type": "string",
            "description": "Gives a description of the option to the user",
            "example": "Collection of standalone automations like auto-closing incidents."
          },
          "image_url": {
            "type": "string",
            "description": "If appropriate, URL to an image that can be displayed alongside the option",
            "example": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg"
          },
          "is_image_slack_icon": {
            "type": "boolean",
            "description": "If true, the image_url is a Slack icon and should be displayed as such",
            "example": false
          },
          "label": {
            "type": "string",
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones"
          },
          "literal": {
            "type": "string",
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123"
          },
          "reference": {
            "type": "string",
            "description": "If set, this is the reference into the trigger scope that is the value of this parameter",
            "example": "incident.severity"
          },
          "sort_key": {
            "type": "string",
            "description": "Gives an indication of how to sort the options when displayed to the user",
            "example": "000020"
          },
          "unavailable": {
            "type": "boolean",
            "description": "Unavailable is true if we've failed to build the value for this binding",
            "example": false
          },
          "value": {
            "type": "string",
            "description": "Either the reference or the literal: this field is designed purely to make working with react-select easier",
            "example": "abc123"
          }
        },
        "example": {
          "catalog_entry": {
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "catalog_entry_name": "Primary escalation",
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "helptext": "Collection of standalone automations like auto-closing incidents.",
          "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
          "is_image_slack_icon": false,
          "label": "Lawrence Jones",
          "literal": "SEV123",
          "reference": "incident.severity",
          "sort_key": "000020",
          "unavailable": false,
          "value": "abc123"
        },
        "required": [
          "label",
          "sort_key"
        ]
      },
      "CatalogEntryReferenceV2": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "description": "When this entry was archived",
            "example": "2021-08-17T14:28:57.801578Z",
            "format": "date-time"
          },
          "catalog_entry_id": {
            "type": "string",
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "catalog_entry_name": {
            "type": "string",
            "description": "The name of this entry",
            "example": "Primary escalation"
          },
          "catalog_type_id": {
            "type": "string",
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        },
        "example": {
          "archived_at": "2021-08-17T14:28:57.801578Z",
          "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "catalog_entry_name": "Primary escalation",
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "required": [
          "catalog_type_id",
          "catalog_entry_id",
          "catalog_entry_name"
        ]
      },
      "CatalogEntryV2": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abc123"
            },
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ]
          },
          "archived_at": {
            "type": "string",
            "description": "When this entry was archived",
            "example": "2021-08-17T14:28:57.801578Z",
            "format": "date-time"
          },
          "attribute_values": {
            "type": "object",
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "Collection of standalone automations like auto-closing incidents.",
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "000020",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "Collection of standalone automations like auto-closing incidents.",
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "000020",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogEntryEngineParamBindingV2"
            }
          },
          "catalog_type_id": {
            "type": "string",
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "created_at": {
            "type": "string",
            "description": "When this entry was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "external_id": {
            "type": "string",
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33"
          },
          "id": {
            "type": "string",
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call"
          },
          "rank": {
            "type": "integer",
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "description": "When this entry was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "archived_at": "2021-08-17T14:28:57.801578Z",
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "Collection of standalone automations like auto-closing incidents.",
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "000020",
                  "unavailable": false,
                  "value": "abc123"
                }
              ],
              "value": {
                "catalog_entry": {
                  "archived_at": "2021-08-17T14:28:57.801578Z",
                  "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "catalog_entry_name": "Primary escalation",
                  "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "helptext": "Collection of standalone automations like auto-closing incidents.",
                "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                "is_image_slack_icon": false,
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity",
                "sort_key": "000020",
                "unavailable": false,
                "value": "abc123"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call",
          "rank": 3,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "catalog_type_id",
          "name",
          "aliases",
          "rank",
          "attribute_values",
          "created_at",
          "updated_at"
        ]
      },
      "CatalogResourceV2": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Which category of resource",
            "example": "custom",
            "enum": [
              "primitive",
              "custom",
              "external"
            ]
          },
          "description": {
            "type": "string",
            "description": "Human readable description for this resource",
            "example": "Boolean true or false value"
          },
          "label": {
            "type": "string",
            "description": "Label for this catalog resource type",
            "example": "GitHub Repository"
          },
          "type": {
            "type": "string",
            "description": "Catalog type name for this resource",
            "example": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]"
          },
          "value_docstring": {
            "type": "string",
            "description": "Documentation for the literal string value of this resource",
            "example": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
          }
        },
        "example": {
          "category": "custom",
          "description": "Boolean true or false value",
          "label": "GitHub Repository",
          "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
          "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
        },
        "required": [
          "type",
          "label",
          "description",
          "value_docstring",
          "category",
          "config",
          "is_user_link"
        ]
      },
      "CatalogTypeAttributePathItemPayloadV2": {
        "type": "object",
        "properties": {
          "attribute_id": {
            "type": "string",
            "description": "the ID of the attribute to use",
            "example": "abc123"
          }
        },
        "example": {
          "attribute_id": "abc123"
        },
        "required": [
          "attribute_id"
        ]
      },
      "CatalogTypeAttributePathItemV2": {
        "type": "object",
        "properties": {
          "attribute_id": {
            "type": "string",
            "description": "the ID of the attribute to use",
            "example": "abc123"
          },
          "attribute_name": {
            "type": "string",
            "description": "the name of the attribute to use",
            "example": "abc123"
          }
        },
        "example": {
          "attribute_id": "abc123",
          "attribute_name": "abc123"
        },
        "required": [
          "attribute_id",
          "attribute_name"
        ]
      },
      "CatalogTypeAttributePayloadV2": {
        "type": "object",
        "properties": {
          "array": {
            "type": "boolean",
            "description": "Whether this attribute is an array",
            "example": false
          },
          "backlink_attribute": {
            "type": "string",
            "description": "The attribute to use (if this is a backlink)",
            "example": "abc123"
          },
          "id": {
            "type": "string",
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66"
          },
          "mode": {
            "type": "string",
            "description": "Controls how this attribute is modified",
            "example": "manual",
            "enum": [
              "",
              "manual",
              "external",
              "internal",
              "dynamic",
              "backlink",
              "path"
            ]
          },
          "name": {
            "type": "string",
            "description": "Unique name of this attribute",
            "example": "tier"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePathItemPayloadV2"
            },
            "description": "The path to use (if this is an path)",
            "example": [
              {
                "attribute_id": "abc123"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]"
          }
        },
        "example": {
          "array": false,
          "backlink_attribute": "abc123",
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "manual",
          "name": "tier",
          "path": [
            {
              "attribute_id": "abc123"
            }
          ],
          "type": "Custom[\"Service\"]"
        },
        "required": [
          "name",
          "type",
          "array"
        ]
      },
      "CatalogTypeAttributeV2": {
        "type": "object",
        "properties": {
          "array": {
            "type": "boolean",
            "description": "Whether this attribute is an array",
            "example": false
          },
          "backlink_attribute": {
            "type": "string",
            "description": "The attribute to use (if this is a backlink)",
            "example": "abc123"
          },
          "id": {
            "type": "string",
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66"
          },
          "mode": {
            "type": "string",
            "description": "Controls how this attribute is modified",
            "example": "manual",
            "enum": [
              "",
              "manual",
              "external",
              "internal",
              "dynamic",
              "backlink",
              "path"
            ]
          },
          "name": {
            "type": "string",
            "description": "Unique name of this attribute",
            "example": "tier"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePathItemV2"
            },
            "description": "The path to use (if this is a path attribute)",
            "example": [
              {
                "attribute_id": "abc123",
                "attribute_name": "abc123"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]"
          }
        },
        "example": {
          "array": false,
          "backlink_attribute": "abc123",
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "manual",
          "name": "tier",
          "path": [
            {
              "attribute_id": "abc123",
              "attribute_name": "abc123"
            }
          ],
          "type": "Custom[\"Service\"]"
        },
        "required": [
          "id",
          "mode",
          "name",
          "type",
          "array"
        ]
      },
      "CatalogTypeSchemaV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributeV2"
            },
            "description": "Attributes of this catalog type",
            "example": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123",
                    "attribute_name": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "The version number of this schema",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "attributes": [
            {
              "array": false,
              "backlink_attribute": "abc123",
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "manual",
              "name": "tier",
              "path": [
                {
                  "attribute_id": "abc123",
                  "attribute_name": "abc123"
                }
              ],
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "required": [
          "attributes",
          "version"
        ]
      },
      "CatalogTypeV2": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "issue-tracker",
              "enum": [
                "customer",
                "issue-tracker",
                "product-features",
                "service",
                "on-call",
                "team",
                "user"
              ]
            },
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ]
          },
          "color": {
            "type": "string",
            "description": "Sets the display color of this type in the dashboard",
            "example": "yellow",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ]
          },
          "created_at": {
            "type": "string",
            "description": "When this type was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE."
          },
          "dynamic_resource_parameter": {
            "type": "string",
            "description": "If this is a dynamic catalog type, this will be the unique parameter for identitfying this resource externally.",
            "example": "abc123"
          },
          "estimated_count": {
            "type": "integer",
            "description": "If populated, gives an estimated count of entries for this type",
            "example": 7,
            "format": "int64"
          },
          "icon": {
            "type": "string",
            "description": "Sets the display icon of this type in the dashboard",
            "example": "bolt",
            "enum": [
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ]
          },
          "id": {
            "type": "string",
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "is_editable": {
            "type": "boolean",
            "description": "Catalog types that are synced with external resources can't be edited",
            "example": false
          },
          "last_synced_at": {
            "type": "string",
            "description": "When this type was last synced (if it's ever been sync'd)",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster"
          },
          "ranked": {
            "type": "boolean",
            "description": "If this type should be ranked",
            "example": true
          },
          "registry_type": {
            "type": "string",
            "description": "The registry resource this type is synced from, if any",
            "example": "PagerDutyService"
          },
          "required_integrations": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abc123"
            },
            "description": "If populated, the integrations required for this type",
            "example": [
              "pager_duty"
            ]
          },
          "schema": {
            "$ref": "#/components/schemas/CatalogTypeSchemaV2"
          },
          "semantic_type": {
            "type": "string",
            "description": "Semantic type of this resource (unused)",
            "example": "custom"
          },
          "source_repo_url": {
            "type": "string",
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog"
          },
          "type_name": {
            "type": "string",
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName \"]",
            "example": "Custom[\"BackstageGroup\"]"
          },
          "updated_at": {
            "type": "string",
            "description": "When this type was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "dynamic_resource_parameter": "abc123",
          "estimated_count": 7,
          "icon": "bolt",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_editable": false,
          "last_synced_at": "2021-08-17T13:28:57.801578Z",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "registry_type": "PagerDutyService",
          "required_integrations": [
            "pager_duty"
          ],
          "schema": {
            "attributes": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123",
                    "attribute_name": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "version": 1
          },
          "semantic_type": "custom",
          "source_repo_url": "https://github.com/my-company/incident-io-catalog",
          "type_name": "Custom[\"BackstageGroup\"]",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "name",
          "description",
          "type_name",
          "semantic_type",
          "ranked",
          "schema",
          "icon",
          "categories",
          "color",
          "is_editable",
          "annotations",
          "created_at",
          "updated_at",
          "engine_resource_type",
          "mode",
          "use_name_as_identifier"
        ]
      },
      "ConditionGroupPayloadV2": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionPayloadV2"
            },
            "description": "All conditions in this list must be satisfied for the group to be satisfied",
            "example": [
              {
                "operation": "one_of",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": "incident.severity"
              }
            ]
          }
        },
        "example": {
          "conditions": [
            {
              "operation": "one_of",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": "incident.severity"
            }
          ]
        },
        "required": [
          "conditions"
        ]
      },
      "ConditionGroupV2": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionV3"
            },
            "description": "All conditions in this list must be satisfied for the group to be satisfied",
            "example": [
              {
                "operation": {
                  "label": "Lawrence Jones",
                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                },
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": {
                  "label": "Incident Severity",
                  "reference": "incident.severity"
                }
              }
            ]
          }
        },
        "example": {
          "conditions": [
            {
              "operation": {
                "label": "Lawrence Jones",
                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
              },
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": {
                "label": "Incident Severity",
                "reference": "incident.severity"
              }
            }
          ]
        },
        "required": [
          "conditions"
        ]
      },
      "ConditionOperationV2": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones"
          },
          "value": {
            "type": "string",
            "description": "Unique identifier for this option",
            "example": "01FCQSP07Z74QMMYPDDGQB9FTG"
          }
        },
        "example": {
          "label": "Lawrence Jones",
          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
        },
        "required": [
          "label",
          "value",
          "sort_key"
        ]
      },
      "ConditionOperationV3": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones"
          },
          "value": {
            "type": "string",
            "description": "Unique identifier for this option",
            "example": "01FCQSP07Z74QMMYPDDGQB9FTG"
          }
        },
        "example": {
          "label": "Lawrence Jones",
          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
        },
        "required": [
          "label",
          "value"
        ]
      },
      "ConditionPayloadV2": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "description": "The name of the operation on the subject",
            "example": "one_of"
          },
          "param_bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "description": "List of parameter bindings",
            "example": [
              {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ]
          },
          "subject": {
            "type": "string",
            "description": "The reference of the subject in the trigger scope",
            "example": "incident.severity"
          }
        },
        "example": {
          "operation": "one_of",
          "param_bindings": [
            {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ],
          "subject": "incident.severity"
        },
        "required": [
          "subject",
          "operation",
          "param_bindings"
        ]
      },
      "ConditionSubjectV2": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable identifier for the subject",
            "example": "Incident Severity"
          },
          "reference": {
            "type": "string",
            "description": "Reference into the scope for the value of the subject",
            "example": "incident.severity"
          }
        },
        "example": {
          "label": "Incident Severity",
          "reference": "incident.severity"
        },
        "required": [
          "label",
          "reference",
          "icon"
        ]
      },
      "ConditionSubjectV3": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable identifier for the subject",
            "example": "Incident Severity"
          },
          "reference": {
            "type": "string",
            "description": "Reference into the scope for the value of the subject",
            "example": "incident.severity"
          }
        },
        "example": {
          "label": "Incident Severity",
          "reference": "incident.severity"
        },
        "required": [
          "label",
          "reference"
        ]
      },
      "ConditionV2": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/ConditionOperationV2"
          },
          "param_bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingV2"
            },
            "description": "Bindings for the operation parameters",
            "example": [
              {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ]
          },
          "subject": {
            "$ref": "#/components/schemas/ConditionSubjectV2"
          }
        },
        "example": {
          "operation": {
            "label": "Lawrence Jones",
            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
          },
          "param_bindings": [
            {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ],
          "subject": {
            "label": "Incident Severity",
            "reference": "incident.severity"
          }
        },
        "required": [
          "subject",
          "operation",
          "param_bindings",
          "params"
        ]
      },
      "ConditionV3": {
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/ConditionOperationV3"
          },
          "param_bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingV3"
            },
            "description": "Bindings for the operation parameters",
            "example": [
              {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ]
          },
          "subject": {
            "$ref": "#/components/schemas/ConditionSubjectV3"
          }
        },
        "example": {
          "operation": {
            "label": "Lawrence Jones",
            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
          },
          "param_bindings": [
            {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ],
          "subject": {
            "label": "Incident Severity",
            "reference": "incident.severity"
          }
        },
        "required": [
          "subject",
          "operation",
          "param_bindings"
        ]
      },
      "CreateEntryRequestBody": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abc123"
            },
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ]
          },
          "attribute_values": {
            "type": "object",
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            }
          },
          "catalog_type_id": {
            "type": "string",
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "external_id": {
            "type": "string",
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33"
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call"
          },
          "rank": {
            "type": "integer",
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32"
          }
        },
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "required": [
          "catalog_type_id",
          "name",
          "attribute_values"
        ]
      },
      "CreateEntryResponseBody": {
        "type": "object",
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2"
          }
        },
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "Collection of standalone automations like auto-closing incidents.",
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "000020",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "Collection of standalone automations like auto-closing incidents.",
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "000020",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "catalog_entry"
        ]
      },
      "CreateHTTPRequestBody": {
        "type": "object",
        "properties": {
          "deduplication_key": {
            "type": "string",
            "description": "A deduplication key can be provided to uniquely reference this alert from your alert source. If you send an event with the same deduplication_key multiple times, only one alert will be created in incident.io for this alert source config.",
            "example": "4293868629"
          },
          "description": {
            "type": "string",
            "description": "Description that optionally adds more detail to title. Supports markdown.",
            "example": "We've detected a number of timeouts on hello.world.com, the service may be down. To fix..."
          },
          "metadata": {
            "type": "object",
            "description": "Any additional metadata that you've configured your alert source to parse",
            "example": {
              "service": "hello.world.com",
              "team": [
                "my-team"
              ]
            },
            "additionalProperties": true
          },
          "source_url": {
            "type": "string",
            "description": "If applicable, a link to the alert in the upstream system",
            "example": "https://www.my-alerting-platform.com/alerts/my-alert-123"
          },
          "status": {
            "type": "string",
            "description": "Current status of this alert",
            "example": "firing",
            "enum": [
              "firing",
              "resolved"
            ]
          },
          "title": {
            "type": "string",
            "description": "Alert title which is used when summarising the alert",
            "example": "*errors.withMessage: PG::Error failed to connect"
          }
        },
        "example": {
          "deduplication_key": "4293868629",
          "description": "We've detected a number of timeouts on hello.world.com, the service may be down. To fix...",
          "metadata": {
            "service": "hello.world.com",
            "team": [
              "my-team"
            ]
          },
          "source_url": "https://www.my-alerting-platform.com/alerts/my-alert-123",
          "status": "firing",
          "title": "*errors.withMessage: PG::Error failed to connect"
        },
        "required": [
          "title",
          "status"
        ]
      },
      "CreateManagedResourceRequestBody": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "resource_id": {
            "type": "string",
            "description": "The ID of the related resource",
            "example": "abc123"
          },
          "resource_type": {
            "type": "string",
            "description": "The type of the related resource",
            "example": "schedule",
            "enum": [
              "workflow",
              "schedule"
            ]
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "resource_id": "abc123",
          "resource_type": "schedule"
        },
        "required": [
          "annotations",
          "resource_type",
          "resource_id",
          "managed_by"
        ]
      },
      "CreateManagedResourceResponseBody": {
        "type": "object",
        "properties": {
          "managed_resource": {
            "$ref": "#/components/schemas/ManagedResourceV2"
          }
        },
        "example": {
          "managed_resource": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "managed_by": "dashboard",
            "resource_id": "abc123",
            "resource_type": "schedule",
            "source_url": "https://github.com/my-company/infrastructure"
          }
        },
        "required": [
          "managed_resource"
        ]
      },
      "CreatePathRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this escalation path, for the user's reference.",
            "example": "Urgent Support"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodePayloadV2"
            },
            "description": "The nodes that form the levels and branches of this escalation path.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ]
          },
          "working_hours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalConfigV2"
            },
            "description": "The working hours for this escalation path.",
            "example": [
              {
                "id": "abc123",
                "name": "abc123",
                "timezone": "abc123",
                "weekday_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "abc123"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "name": "Urgent Support",
          "path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "type": "user",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "working_hours": [
            {
              "id": "abc123",
              "name": "abc123",
              "timezone": "abc123",
              "weekday_intervals": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "abc123"
                }
              ]
            }
          ]
        },
        "required": [
          "name",
          "path"
        ]
      },
      "CreatePathResponseBody": {
        "type": "object",
        "properties": {
          "escalation_path": {
            "$ref": "#/components/schemas/EscalationPathV2"
          }
        },
        "example": {
          "escalation_path": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Urgent Support",
            "path": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "working_hours": [
              {
                "id": "abc123",
                "name": "abc123",
                "timezone": "abc123",
                "weekday_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "abc123"
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "escalation_path"
        ]
      },
      "CreateRequestBody": {
        "type": "object",
        "properties": {
          "custom_field_id": {
            "type": "string",
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "sort_key": {
            "type": "integer",
            "description": "Sort key used to order the custom field options correctly",
            "default": 1000,
            "example": 10,
            "format": "int64"
          },
          "value": {
            "type": "string",
            "description": "Human readable name for the custom field option",
            "example": "Product"
          }
        },
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "required": [
          "custom_field_id",
          "value"
        ]
      },
      "CreateRequestBody10": {
        "type": "object",
        "properties": {
          "custom_field_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV1"
            },
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          "idempotency_key": {
            "type": "string",
            "description": "Unique string used to de-duplicate incident create requests",
            "example": "alert-uuid"
          },
          "incident_role_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV2"
            },
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ]
          },
          "incident_status_id": {
            "type": "string",
            "description": "Incident status to assign to the incident",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "incident_timestamp_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampValuePayloadV2"
            },
            "description": "Assign the incident's timestamps to these values",
            "example": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ]
          },
          "incident_type_id": {
            "type": "string",
            "description": "Incident type to create this incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          },
          "mode": {
            "type": "string",
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "example": "standard",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ]
          },
          "name": {
            "type": "string",
            "description": "Explanation of the incident",
            "example": "Our database is sad"
          },
          "retrospective_incident_options": {
            "$ref": "#/components/schemas/RetrospectiveIncidentOptionsV2"
          },
          "severity_id": {
            "type": "string",
            "description": "Severity to create incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          },
          "slack_channel_name_override": {
            "type": "string",
            "description": "Name of the Slack channel to create for this incident",
            "example": "inc-123-database-down"
          },
          "slack_team_id": {
            "type": "string",
            "description": "Slack Team to create the incident in",
            "example": "T02A1FSLE8J"
          },
          "summary": {
            "type": "string",
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet."
          },
          "visibility": {
            "type": "string",
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "example": "public",
            "enum": [
              "public",
              "private"
            ]
          }
        },
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "idempotency_key": "alert-uuid",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_status_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "incident_timestamp_values": [
            {
              "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "value": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "mode": "standard",
          "name": "Our database is sad",
          "retrospective_incident_options": {
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "slack_channel_id": "abc123"
          },
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_channel_name_override": "inc-123-database-down",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "visibility": "public"
        },
        "required": [
          "idempotency_key",
          "visibility"
        ]
      },
      "CreateRequestBody11": {
        "type": "object",
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleCreatePayloadV2"
          }
        },
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "My Rotation",
                  "users": [
                    {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "name": "My Schedule",
            "timezone": "America/Los_Angeles"
          }
        },
        "required": [
          "schedule"
        ]
      },
      "CreateRequestBody12": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the severity",
            "example": "Issues with **low impact**."
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50
          },
          "rank": {
            "type": "integer",
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "description": "Issues with **low impact**.",
          "name": "Minor",
          "rank": 1
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateRequestBody2": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "field_type": {
            "type": "string",
            "description": "Type of custom field",
            "example": "single_select",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ]
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          },
          "required": {
            "type": "string",
            "description": "When this custom field must be set during the incident lifecycle. [DEPRECATED: please use required_v2 instead].",
            "example": "never",
            "enum": [
              "never",
              "before_closure",
              "always"
            ]
          },
          "required_v2": {
            "type": "string",
            "description": "When this custom field must be set during the incident lifecycle.",
            "example": "never",
            "enum": [
              "never",
              "before_resolution",
              "always"
            ]
          },
          "show_before_closure": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident resolve modal. If this custom field is required before resolution, but no value has been set for it, the field will be shown in the resolve modal whatever the value of this setting.",
            "example": true
          },
          "show_before_creation": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true
          },
          "show_before_update": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true
          },
          "show_in_announcement_post": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true
          }
        },
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "name": "Affected Team",
          "required": "never",
          "required_v2": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "show_before_creation",
          "show_before_closure",
          "show_before_update",
          "options",
          "created_at",
          "updated_at"
        ]
      },
      "CreateRequestBody3": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "field_type": {
            "type": "string",
            "description": "Type of custom field",
            "example": "single_select",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ]
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          }
        },
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "name": "Affected Team"
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "cannot_be_unset",
          "created_at",
          "updated_at"
        ]
      },
      "CreateRequestBody4": {
        "type": "object",
        "properties": {
          "incident_id": {
            "type": "string",
            "description": "ID of the incident to add an attachment to",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          "resource": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "description": "ID of the resource in the external system",
                "example": "123"
              },
              "resource_type": {
                "type": "string",
                "description": "E.g. PagerDuty: the external system that holds the resource",
                "example": "pager_duty_incident",
                "enum": [
                  "pager_duty_incident",
                  "opsgenie_alert",
                  "datadog_monitor_alert",
                  "github_pull_request",
                  "gitlab_merge_request",
                  "sentry_issue",
                  "jira_issue",
                  "atlassian_statuspage_incident",
                  "zendesk_ticket",
                  "google_calendar_event",
                  "scrubbed",
                  "statuspage_incident"
                ]
              }
            },
            "example": {
              "external_id": "123",
              "resource_type": "pager_duty_incident"
            },
            "required": [
              "id",
              "permalink",
              "external_id",
              "title",
              "resource_type",
              "resource_type_label",
              "created_at",
              "updated_at"
            ]
          }
        },
        "example": {
          "incident_id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "resource": {
            "external_id": "123",
            "resource_type": "pager_duty_incident"
          }
        },
        "required": [
          "incident_id",
          "resource"
        ]
      },
      "CreateRequestBody5": {
        "type": "object",
        "properties": {
          "incident_id": {
            "type": "string",
            "example": "01ET65M7ZADYFCKD4K1AE2QNMC"
          },
          "user_id": {
            "type": "string",
            "example": "01FCQSP07Z74QMMYPDDGQB9FTG"
          }
        },
        "example": {
          "incident_id": "01ET65M7ZADYFCKD4K1AE2QNMC",
          "user_id": "01FCQSP07Z74QMMYPDDGQB9FTG"
        },
        "required": [
          "user_id",
          "incident_id"
        ]
      },
      "CreateRequestBody6": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1
          },
          "instructions": {
            "type": "string",
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1
          },
          "required": {
            "type": "boolean",
            "description": "DEPRECATED: this will always be false.",
            "example": false
          },
          "shortform": {
            "type": "string",
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "minLength": 1
          }
        },
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "shortform": "lead"
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "required",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ]
      },
      "CreateRequestBody7": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1
          },
          "instructions": {
            "type": "string",
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1
          },
          "shortform": {
            "type": "string",
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "minLength": 1
          }
        },
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "shortform": "lead"
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ]
      },
      "CreateRequestBody8": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Whether the status should be considered 'live' (now renamed to active), 'learning' (now renamed to post-incident) or 'closed'. The triage and declined statuses cannot be created or modified.",
            "example": "live",
            "enum": [
              "live",
              "learning",
              "closed"
            ]
          },
          "description": {
            "type": "string",
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident."
          },
          "name": {
            "type": "string",
            "description": "Unique name of this status",
            "example": "Closed"
          }
        },
        "example": {
          "category": "live",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "name": "Closed"
        },
        "required": [
          "name",
          "description",
          "category",
          "id",
          "rank",
          "created_at",
          "updated_at"
        ]
      },
      "CreateRequestBody9": {
        "type": "object",
        "properties": {
          "custom_field_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV1"
            },
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ]
          },
          "idempotency_key": {
            "type": "string",
            "description": "Unique string used to de-duplicate incident create requests",
            "example": "alert-uuid"
          },
          "incident_role_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV1"
            },
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ]
          },
          "incident_type_id": {
            "type": "string",
            "description": "Incident type to create this incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          },
          "mode": {
            "type": "string",
            "description": "Whether the incident is real or test",
            "example": "real",
            "enum": [
              "real",
              "test"
            ]
          },
          "name": {
            "type": "string",
            "description": "Explanation of the incident",
            "example": "Our database is sad"
          },
          "severity_id": {
            "type": "string",
            "description": "Severity to create incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          },
          "slack_team_id": {
            "type": "string",
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J"
          },
          "source_message_channel_id": {
            "type": "string",
            "description": "Channel ID of the source message, if this incident was created from one",
            "example": "C02AW36C1M5"
          },
          "source_message_timestamp": {
            "type": "string",
            "description": "Timestamp of the source message, if this incident was created from one",
            "example": "1653650280.526509"
          },
          "status": {
            "type": "string",
            "description": "Current status of the incident",
            "example": "triage",
            "enum": [
              "triage",
              "investigating",
              "fixing",
              "monitoring",
              "closed",
              "declined"
            ]
          },
          "summary": {
            "type": "string",
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet."
          },
          "visibility": {
            "type": "string",
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "example": "public",
            "enum": [
              "public",
              "private"
            ]
          }
        },
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "idempotency_key": "alert-uuid",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "mode": "real",
          "name": "Our database is sad",
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_team_id": "T02A1FSLE8J",
          "source_message_channel_id": "C02AW36C1M5",
          "source_message_timestamp": "1653650280.526509",
          "status": "triage",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "visibility": "public"
        },
        "required": [
          "idempotency_key",
          "visibility"
        ]
      },
      "CreateResponseBody": {
        "type": "object",
        "properties": {
          "incident_attachment": {
            "$ref": "#/components/schemas/IncidentAttachmentV1"
          }
        },
        "example": {
          "incident_attachment": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "resource": {
              "external_id": "123",
              "permalink": "https://my.pagerduty.com/incidents/ABC",
              "resource_type": "pager_duty_incident",
              "title": "The database has gone down"
            }
          }
        },
        "required": [
          "incident_attachment"
        ]
      },
      "CreateResponseBody2": {
        "type": "object",
        "properties": {
          "incident_membership": {
            "$ref": "#/components/schemas/IncidentMembership"
          }
        },
        "example": {
          "incident_membership": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          }
        },
        "required": [
          "incident_membership"
        ]
      },
      "CreateTypeRequestBody": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "issue-tracker",
              "enum": [
                "customer",
                "issue-tracker",
                "product-features",
                "service",
                "on-call",
                "team",
                "user"
              ]
            },
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ]
          },
          "color": {
            "type": "string",
            "description": "Sets the display color of this type in the dashboard",
            "example": "yellow",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ]
          },
          "description": {
            "type": "string",
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE."
          },
          "icon": {
            "type": "string",
            "description": "Sets the display icon of this type in the dashboard",
            "example": "bolt",
            "enum": [
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster"
          },
          "ranked": {
            "type": "boolean",
            "description": "If this type should be ranked",
            "example": true
          },
          "source_repo_url": {
            "type": "string",
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog"
          },
          "type_name": {
            "type": "string",
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName \"]",
            "example": "Custom[\"BackstageGroup\"]"
          }
        },
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "bolt",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "source_repo_url": "https://github.com/my-company/incident-io-catalog",
          "type_name": "Custom[\"BackstageGroup\"]"
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateTypeResponseBody": {
        "type": "object",
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "catalog_type"
        ]
      },
      "CreateWorkflowRequestBody": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "description": "List of conditions to apply to the workflow",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ]
          },
          "continue_on_step_error": {
            "type": "boolean",
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelay"
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "description": "The expressions used in the workflow",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ]
          },
          "folder": {
            "type": "string",
            "description": "Folder to display the workflow in",
            "example": "My folder 01"
          },
          "include_private_incidents": {
            "type": "boolean",
            "description": "Whether to include private incidents",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "The human-readable name of the workflow",
            "example": "My workflow"
          },
          "once_for": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "incident.url"
            },
            "description": "Once For strategy to apply to this workflow",
            "example": [
              "incident.url"
            ]
          },
          "runs_on_incident_modes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "test",
              "enum": [
                "standard",
                "test",
                "retrospective"
              ]
            },
            "description": "Which modes of incident this should run on (defaults to just standard incidents)",
            "example": [
              "standard",
              "retrospective"
            ]
          },
          "runs_on_incidents": {
            "type": "string",
            "description": "Which incidents should the workflow be applied to? (newly_created or newly_created_and_active)",
            "example": "newly_created",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ]
          },
          "state": {
            "type": "string",
            "description": "The state of the workflow (e.g. is it draft, or disabled)",
            "example": "active",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepConfigPayload"
            },
            "description": "List of step to execute as part of the workflow",
            "example": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "trigger": {
            "type": "string",
            "description": "Trigger to set on the workflow",
            "example": "incident.updated"
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "include_private_incidents": true,
          "name": "My workflow",
          "once_for": [
            "incident.url"
          ],
          "runs_on_incident_modes": [
            "standard",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "state": "active",
          "steps": [
            {
              "for_each": "abc123",
              "id": "abc123",
              "name": "pagerduty.escalate",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "trigger": "incident.updated"
        },
        "required": [
          "name",
          "trigger",
          "once_for",
          "condition_groups",
          "steps",
          "expressions",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents"
        ]
      },
      "CustomFieldEntryPayloadV1": {
        "type": "object",
        "properties": {
          "custom_field_id": {
            "type": "string",
            "description": "ID of the custom field this entry is linked against",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValuePayloadV1"
            },
            "description": "List of values to associate with this entry. Use an empty array to unset the value of the custom field.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_text": "This is my text field, I hope you like it",
                "value_timestamp": ""
              }
            ]
          }
        },
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "values": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_text": "This is my text field, I hope you like it",
              "value_timestamp": ""
            }
          ]
        },
        "required": [
          "custom_field_id",
          "values"
        ]
      },
      "CustomFieldEntryV1": {
        "type": "object",
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldTypeInfoV1"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueV1"
            },
            "description": "List of custom field values set on this entry",
            "example": [
              {
                "value_catalog_entry": {
                  "aliases": [
                    "lawrence@incident.io",
                    "lawrence"
                  ],
                  "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Primary On-call"
                },
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option": {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                },
                "value_text": "This is my text field, I hope you like it"
              }
            ]
          }
        },
        "example": {
          "custom_field": {
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "values": [
            {
              "value_catalog_entry": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call"
              },
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              },
              "value_text": "This is my text field, I hope you like it"
            }
          ]
        },
        "required": [
          "custom_field",
          "values"
        ]
      },
      "CustomFieldOptionV1": {
        "type": "object",
        "properties": {
          "custom_field_id": {
            "type": "string",
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "sort_key": {
            "type": "integer",
            "description": "Sort key used to order the custom field options correctly",
            "default": 1000,
            "example": 10,
            "format": "int64"
          },
          "value": {
            "type": "string",
            "description": "Human readable name for the custom field option",
            "example": "Product"
          }
        },
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "required": [
          "id",
          "custom_field_id",
          "value",
          "sort_key"
        ]
      },
      "CustomFieldTypeInfoV1": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "field_type": {
            "type": "string",
            "description": "Type of custom field",
            "example": "single_select",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1"
            },
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          }
        },
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ]
        },
        "required": [
          "id",
          "organisation_id",
          "name",
          "description",
          "dynamic_options",
          "rank",
          "field_type",
          "cannot_be_unset",
          "options",
          "is_usable",
          "condition_groups",
          "field_mode",
          "created_at",
          "updated_at"
        ]
      },
      "CustomFieldV1": {
        "type": "object",
        "properties": {
          "catalog_type_id": {
            "type": "string",
            "description": "For catalog fields, the ID of the associated catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "created_at": {
            "type": "string",
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "field_type": {
            "type": "string",
            "description": "Type of custom field",
            "example": "single_select",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1"
            },
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "required": {
            "type": "string",
            "description": "When this custom field must be set during the incident lifecycle. [DEPRECATED: please use required_v2 instead].",
            "example": "never",
            "enum": [
              "never",
              "before_closure",
              "always"
            ]
          },
          "required_v2": {
            "type": "string",
            "description": "When this custom field must be set during the incident lifecycle.",
            "example": "never",
            "enum": [
              "never",
              "before_resolution",
              "always"
            ]
          },
          "show_before_closure": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident resolve modal. If this custom field is required before resolution, but no value has been set for it, the field will be shown in the resolve modal whatever the value of this setting.",
            "example": true
          },
          "show_before_creation": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true
          },
          "show_before_update": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true
          },
          "show_in_announcement_post": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true
          },
          "updated_at": {
            "type": "string",
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ],
          "required": "never",
          "required_v2": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "show_before_creation",
          "show_before_closure",
          "show_before_update",
          "options",
          "created_at",
          "updated_at"
        ]
      },
      "CustomFieldV2": {
        "type": "object",
        "properties": {
          "catalog_type_id": {
            "type": "string",
            "description": "For catalog fields, the ID of the associated catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "created_at": {
            "type": "string",
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "field_type": {
            "type": "string",
            "description": "Type of custom field",
            "example": "single_select",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          },
          "updated_at": {
            "type": "string",
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "cannot_be_unset",
          "created_at",
          "updated_at"
        ]
      },
      "CustomFieldValuePayloadV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the custom field value",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "value_catalog_entry_id": {
            "type": "string",
            "description": "ID of the catalog entry. You can also use an ExternalID or an Alias of the catalog entry.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "value_link": {
            "type": "string",
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/"
          },
          "value_numeric": {
            "type": "string",
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456"
          },
          "value_option_id": {
            "type": "string",
            "description": "ID of the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "value_text": {
            "type": "string",
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it"
          },
          "value_timestamp": {
            "type": "string",
            "description": "Deprecated: please use incident timestamp values instead",
            "example": ""
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_text": "This is my text field, I hope you like it",
          "value_timestamp": ""
        }
      },
      "CustomFieldValueV1": {
        "type": "object",
        "properties": {
          "value_catalog_entry": {
            "$ref": "#/components/schemas/EmbeddedCatalogEntryV1"
          },
          "value_link": {
            "type": "string",
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/"
          },
          "value_numeric": {
            "type": "string",
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456"
          },
          "value_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1"
          },
          "value_text": {
            "type": "string",
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it"
          }
        },
        "example": {
          "value_catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call"
          },
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          },
          "value_text": "This is my text field, I hope you like it"
        }
      },
      "EditRequestBody": {
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentEditPayloadV2"
          },
          "notify_incident_channel": {
            "type": "boolean",
            "description": "Should we send Slack channel notifications to inform responders of this update? Note that this won't work if the Slack channel has already been archived.",
            "example": true
          }
        },
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "custom_field_entries": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "incident_status_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "incident_timestamp_values": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "name": "Our database is sad",
            "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "summary": "Our database is really really sad, and we don't know why yet."
          },
          "notify_incident_channel": true
        },
        "required": [
          "incident",
          "notify_incident_channel"
        ]
      },
      "EmbeddedCatalogEntryV1": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abc123"
            },
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ]
          },
          "external_id": {
            "type": "string",
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33"
          },
          "id": {
            "type": "string",
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call"
          }
        },
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call"
        },
        "required": [
          "id",
          "name",
          "catalog_type_id"
        ]
      },
      "EngineParamBindingPayloadV2": {
        "type": "object",
        "properties": {
          "array_value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingValuePayloadV2"
            },
            "description": "If set, this is the array value of the step parameter",
            "example": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/EngineParamBindingValuePayloadV2"
          }
        },
        "example": {
          "array_value": [
            {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          ],
          "value": {
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        }
      },
      "EngineParamBindingV2": {
        "type": "object",
        "properties": {
          "array_value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingValueV2"
            },
            "description": "If array_value is set, this helps render the values",
            "example": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/EngineParamBindingValueV2"
          }
        },
        "example": {
          "array_value": [
            {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          ],
          "value": {
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        }
      },
      "EngineParamBindingV3": {
        "type": "object",
        "properties": {
          "array_value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingValueV3"
            },
            "description": "If array_value is set, this helps render the values",
            "example": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/EngineParamBindingValueV3"
          }
        },
        "example": {
          "array_value": [
            {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          ],
          "value": {
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        }
      },
      "EngineParamBindingValuePayloadV2": {
        "type": "object",
        "properties": {
          "literal": {
            "type": "string",
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123"
          },
          "reference": {
            "type": "string",
            "description": "If set, this is the reference into the trigger scope that is the value of this parameter",
            "example": "incident.severity"
          }
        },
        "example": {
          "literal": "SEV123",
          "reference": "incident.severity"
        }
      },
      "EngineParamBindingValueV2": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones"
          },
          "literal": {
            "type": "string",
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123"
          },
          "reference": {
            "type": "string",
            "description": "If set, this is the reference into the trigger scope that is the value of this parameter",
            "example": "incident.severity"
          }
        },
        "example": {
          "label": "Lawrence Jones",
          "literal": "SEV123",
          "reference": "incident.severity"
        },
        "required": [
          "label",
          "sort_key"
        ]
      },
      "EngineParamBindingValueV3": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones"
          },
          "literal": {
            "type": "string",
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123"
          },
          "reference": {
            "type": "string",
            "description": "If set, this is the reference into the trigger scope that is the value of this parameter",
            "example": "incident.severity"
          }
        },
        "example": {
          "label": "Lawrence Jones",
          "literal": "SEV123",
          "reference": "incident.severity"
        },
        "required": [
          "label"
        ]
      },
      "EngineReferenceV2": {
        "type": "object",
        "properties": {
          "array": {
            "type": "boolean",
            "description": "If true, the reference can refer to 0 to many items",
            "example": false
          },
          "key": {
            "type": "string",
            "description": "The key of the field this is a reference to",
            "example": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]"
          },
          "label": {
            "type": "string",
            "description": "Human readable label for the field (with context)",
            "example": "Incident -> Affected Team"
          },
          "type": {
            "type": "string",
            "description": "The type of this resource in the engine",
            "example": "IncidentSeverity"
          }
        },
        "example": {
          "array": false,
          "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
          "label": "Incident -> Affected Team",
          "type": "IncidentSeverity"
        },
        "required": [
          "key",
          "label",
          "type",
          "array",
          "node_label",
          "hide_filter"
        ]
      },
      "EscalationPathNodeIfElsePayloadV2": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionPayloadV2"
            },
            "description": "The condition that defines which branch to take",
            "example": [
              {
                "operation": "one_of",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": "incident.severity"
              }
            ]
          },
          "else_path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodePayloadV2"
            },
            "description": "The nodes that form the levels if our condition is not met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ]
          },
          "then_path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodePayloadV2"
            },
            "description": "The nodes that form the levels if our condition is met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ]
          }
        },
        "example": {
          "conditions": [
            {
              "operation": "one_of",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": "incident.severity"
            }
          ],
          "else_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "type": "user",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "then_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "type": "user",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ]
        },
        "required": [
          "then_path",
          "else_path"
        ]
      },
      "EscalationPathNodeIfElseV2": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionV2"
            },
            "description": "The condition that defines which branch to take",
            "example": [
              {
                "operation": {
                  "label": "Lawrence Jones",
                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                },
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": {
                  "label": "Incident Severity",
                  "reference": "incident.severity"
                }
              }
            ]
          },
          "else_path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodeV2"
            },
            "description": "The nodes that form the levels if our condition is not met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ]
          },
          "then_path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodeV2"
            },
            "description": "The nodes that form the levels if our condition is met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ]
          }
        },
        "example": {
          "conditions": [
            {
              "operation": {
                "label": "Lawrence Jones",
                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
              },
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": {
                "label": "Incident Severity",
                "reference": "incident.severity"
              }
            }
          ],
          "else_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "type": "user",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "then_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "type": "user",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ]
        },
        "required": [
          "conditions",
          "then_path",
          "else_path"
        ]
      },
      "EscalationPathNodeLevelV2": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathTargetV2"
            },
            "description": "The targets for this level",
            "example": [
              {
                "id": "lawrencejones",
                "type": "user",
                "urgency": "high"
              }
            ]
          },
          "time_to_ack_interval_condition": {
            "type": "string",
            "description": "If the time to ack is relative to a time window, this defines whether we move when the window is active or inactive",
            "example": "active",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "time_to_ack_seconds": {
            "type": "integer",
            "description": "How long should we wait for this level to acknowledge before escalating?",
            "example": 1800,
            "format": "int64"
          },
          "time_to_ack_weekday_interval_config_id": {
            "type": "string",
            "description": "If the time to ack is relative to a time window, this identifies which window it is relative to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        },
        "example": {
          "targets": [
            {
              "id": "lawrencejones",
              "type": "user",
              "urgency": "high"
            }
          ],
          "time_to_ack_interval_condition": "active",
          "time_to_ack_seconds": 1800,
          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "required": [
          "targets"
        ]
      },
      "EscalationPathNodePayloadV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique internal ID of the escalation path node",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "if_else": {
            "$ref": "#/components/schemas/EscalationPathNodeIfElsePayloadV2"
          },
          "level": {
            "$ref": "#/components/schemas/EscalationPathNodeLevelV2"
          },
          "repeat": {
            "$ref": "#/components/schemas/EscalationPathNodeRepeatV2"
          },
          "type": {
            "type": "string",
            "description": "The type of this node: level or branch",
            "example": "if_else",
            "enum": [
              "if_else",
              "repeat",
              "level",
              "notify_channel"
            ]
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "if_else": {
            "conditions": [
              {
                "operation": "one_of",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": "incident.severity"
              }
            ],
            "else_path": [
              {}
            ],
            "then_path": [
              {}
            ]
          },
          "level": {
            "targets": [
              {
                "id": "lawrencejones",
                "type": "user",
                "urgency": "high"
              }
            ],
            "time_to_ack_interval_condition": "active",
            "time_to_ack_seconds": 1800,
            "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "repeat": {
            "repeat_times": 3,
            "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "type": "if_else"
        },
        "required": [
          "id",
          "type"
        ]
      },
      "EscalationPathNodeRepeatV2": {
        "type": "object",
        "properties": {
          "repeat_times": {
            "type": "integer",
            "description": "How many times to repeat these steps",
            "example": 3,
            "format": "int64"
          },
          "to_node": {
            "type": "string",
            "description": "Which node ID we begin repeating from",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          }
        },
        "example": {
          "repeat_times": 3,
          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "required": [
          "to_node",
          "repeat_times"
        ]
      },
      "EscalationPathNodeV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique internal ID of the escalation path node",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "if_else": {
            "$ref": "#/components/schemas/EscalationPathNodeIfElseV2"
          },
          "level": {
            "$ref": "#/components/schemas/EscalationPathNodeLevelV2"
          },
          "repeat": {
            "$ref": "#/components/schemas/EscalationPathNodeRepeatV2"
          },
          "type": {
            "type": "string",
            "description": "The type of this node: level or branch",
            "example": "if_else",
            "enum": [
              "if_else",
              "repeat",
              "level",
              "notify_channel"
            ]
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "if_else": {
            "conditions": [
              {
                "operation": {
                  "label": "Lawrence Jones",
                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                },
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": {
                  "label": "Incident Severity",
                  "reference": "incident.severity"
                }
              }
            ],
            "else_path": [
              {}
            ],
            "then_path": [
              {}
            ]
          },
          "level": {
            "targets": [
              {
                "id": "lawrencejones",
                "type": "user",
                "urgency": "high"
              }
            ],
            "time_to_ack_interval_condition": "active",
            "time_to_ack_seconds": 1800,
            "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "repeat": {
            "repeat_times": 3,
            "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "type": "if_else"
        },
        "required": [
          "id",
          "type"
        ]
      },
      "EscalationPathTargetV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Uniquely identifies an entity of this type",
            "example": "lawrencejones"
          },
          "type": {
            "type": "string",
            "description": "Controls what type of entity this target identifies, such as EscalationPolicy or User",
            "example": "user",
            "enum": [
              "schedule",
              "user",
              "slack_channel"
            ]
          },
          "urgency": {
            "type": "string",
            "description": "The urgency of this escalation path target",
            "example": "high",
            "enum": [
              "high",
              "low"
            ]
          }
        },
        "example": {
          "id": "lawrencejones",
          "type": "user",
          "urgency": "high"
        },
        "required": [
          "type",
          "id",
          "urgency"
        ]
      },
      "EscalationPathV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this escalation path.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "The name of this escalation path, for the user's reference.",
            "example": "Urgent Support"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodeV2"
            },
            "description": "The nodes that form the levels and branches of this escalation path.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ]
          },
          "working_hours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalConfigV2"
            },
            "description": "The working hours for this escalation path.",
            "example": [
              {
                "id": "abc123",
                "name": "abc123",
                "timezone": "abc123",
                "weekday_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "abc123"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Urgent Support",
          "path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "type": "user",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "working_hours": [
            {
              "id": "abc123",
              "name": "abc123",
              "timezone": "abc123",
              "weekday_intervals": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "abc123"
                }
              ]
            }
          ]
        },
        "required": [
          "id",
          "name",
          "path",
          "levels",
          "repeat_times"
        ]
      },
      "ExpressionBranchPayloadV2": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "description": "When one of these condition groups are satisfied, this branch will be evaluated",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ]
          },
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "result": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "required": [
          "condition_groups",
          "result"
        ]
      },
      "ExpressionBranchV2": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "description": "When one of these condition groups are satisfied, this branch will be evaluated",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingV3"
          }
        },
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "result": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "required": [
          "condition_groups",
          "result"
        ]
      },
      "ExpressionBranchesOptsPayloadV2": {
        "type": "object",
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionBranchPayloadV2"
            },
            "description": "The branches to apply for this operation",
            "example": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ]
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          }
        },
        "example": {
          "branches": [
            {
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ]
                }
              ],
              "result": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          }
        },
        "required": [
          "branches",
          "returns"
        ]
      },
      "ExpressionBranchesOptsV2": {
        "type": "object",
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionBranchV2"
            },
            "description": "The branches to apply for this operation",
            "example": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ]
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          }
        },
        "example": {
          "branches": [
            {
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ]
                }
              ],
              "result": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          }
        },
        "required": [
          "branches",
          "returns"
        ]
      },
      "ExpressionElseBranchPayloadV2": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "example": {
          "result": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "required": [
          "result"
        ]
      },
      "ExpressionElseBranchV2": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingV3"
          }
        },
        "example": {
          "result": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "required": [
          "result"
        ]
      },
      "ExpressionFilterOptsPayloadV2": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "description": "The condition groups to apply in this filter. Only one group needs to be satisfied for the filter to pass.",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ]
        },
        "required": [
          "condition_groups"
        ]
      },
      "ExpressionFilterOptsV2": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "description": "The condition groups to apply in this filter. Only one group needs to be satisfied for the filter to pass.",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ]
        },
        "required": [
          "condition_groups"
        ]
      },
      "ExpressionNavigateOptsPayloadV2": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "description": "The reference that you want to navigate to",
            "example": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
          }
        },
        "example": {
          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
        },
        "required": [
          "reference"
        ]
      },
      "ExpressionNavigateOptsV2": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "description": "The reference within the scope to navigate to",
            "example": "1235"
          },
          "reference_label": {
            "type": "string",
            "description": "The name of the reference to navigate to",
            "example": "Teams"
          }
        },
        "example": {
          "reference": "1235",
          "reference_label": "Teams"
        },
        "required": [
          "reference",
          "reference_label"
        ]
      },
      "ExpressionOperationPayloadV2": {
        "type": "object",
        "properties": {
          "branches": {
            "$ref": "#/components/schemas/ExpressionBranchesOptsPayloadV2"
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionFilterOptsPayloadV2"
          },
          "navigate": {
            "$ref": "#/components/schemas/ExpressionNavigateOptsPayloadV2"
          },
          "operation_type": {
            "type": "string",
            "description": "The type of the operation",
            "example": "navigate",
            "enum": [
              "navigate",
              "filter",
              "count",
              "min",
              "max",
              "random",
              "first",
              "parse",
              "branches"
            ]
          },
          "parse": {
            "$ref": "#/components/schemas/ExpressionParseOptsV2"
          }
        },
        "example": {
          "branches": {
            "branches": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            }
          },
          "filter": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ]
          },
          "navigate": {
            "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
          },
          "operation_type": "navigate",
          "parse": {
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            },
            "source": "metadata.annotations[\"github.com/repo\"]"
          }
        },
        "required": [
          "operation_type",
          "returns"
        ]
      },
      "ExpressionOperationV2": {
        "type": "object",
        "properties": {
          "branches": {
            "$ref": "#/components/schemas/ExpressionBranchesOptsV2"
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionFilterOptsV2"
          },
          "navigate": {
            "$ref": "#/components/schemas/ExpressionNavigateOptsV2"
          },
          "operation_type": {
            "type": "string",
            "description": "The type of the operation",
            "example": "navigate",
            "enum": [
              "navigate",
              "filter",
              "count",
              "min",
              "max",
              "random",
              "first",
              "parse",
              "branches"
            ]
          },
          "parse": {
            "$ref": "#/components/schemas/ExpressionParseOptsV2"
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          }
        },
        "example": {
          "branches": {
            "branches": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            }
          },
          "filter": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "navigate": {
            "reference": "1235",
            "reference_label": "Teams"
          },
          "operation_type": "navigate",
          "parse": {
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            },
            "source": "metadata.annotations[\"github.com/repo\"]"
          },
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          }
        },
        "required": [
          "operation_type",
          "returns"
        ]
      },
      "ExpressionParseOptsV2": {
        "type": "object",
        "properties": {
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          },
          "source": {
            "type": "string",
            "description": "Source expression that is evaluated to a result",
            "example": "metadata.annotations[\"github.com/repo\"]"
          }
        },
        "example": {
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          },
          "source": "metadata.annotations[\"github.com/repo\"]"
        },
        "required": [
          "source",
          "returns"
        ]
      },
      "ExpressionPayloadV2": {
        "type": "object",
        "properties": {
          "else_branch": {
            "$ref": "#/components/schemas/ExpressionElseBranchPayloadV2"
          },
          "label": {
            "type": "string",
            "description": "The human readable label of the expression",
            "example": "Team Slack channel"
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionOperationPayloadV2"
            },
            "example": [
              {
                "branches": {
                  "branches": [
                    {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ],
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                },
                "filter": {
                  "condition_groups": [
                    {
                      "conditions": [
                        {
                          "operation": "one_of",
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": "incident.severity"
                        }
                      ]
                    }
                  ]
                },
                "navigate": {
                  "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                },
                "operation_type": "navigate",
                "parse": {
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "source": "metadata.annotations[\"github.com/repo\"]"
                }
              }
            ]
          },
          "reference": {
            "type": "string",
            "description": "A short ID that can be used to reference the expression",
            "example": "abc123"
          },
          "root_reference": {
            "type": "string",
            "description": "The root reference for this expression (i.e. where the expression starts)",
            "example": "incident.status"
          }
        },
        "example": {
          "else_branch": {
            "result": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "label": "Team Slack channel",
          "operations": [
            {
              "branches": {
                "branches": [
                  {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ],
                    "result": {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                }
              },
              "filter": {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ]
              },
              "navigate": {
                "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
              },
              "operation_type": "navigate",
              "parse": {
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "source": "metadata.annotations[\"github.com/repo\"]"
              }
            }
          ],
          "reference": "abc123",
          "root_reference": "incident.status"
        },
        "required": [
          "label",
          "reference",
          "root_reference",
          "operations"
        ]
      },
      "ExpressionV2": {
        "type": "object",
        "properties": {
          "else_branch": {
            "$ref": "#/components/schemas/ExpressionElseBranchV2"
          },
          "label": {
            "type": "string",
            "description": "The human readable label of the expression",
            "example": "Team Slack channel"
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionOperationV2"
            },
            "example": [
              {
                "branches": {
                  "branches": [
                    {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ],
                      "result": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                },
                "filter": {
                  "condition_groups": [
                    {
                      "conditions": [
                        {
                          "operation": {
                            "label": "Lawrence Jones",
                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                          },
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": {
                            "label": "Incident Severity",
                            "reference": "incident.severity"
                          }
                        }
                      ]
                    }
                  ]
                },
                "navigate": {
                  "reference": "1235",
                  "reference_label": "Teams"
                },
                "operation_type": "navigate",
                "parse": {
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "source": "metadata.annotations[\"github.com/repo\"]"
                },
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                }
              }
            ]
          },
          "reference": {
            "type": "string",
            "description": "A short ID that can be used to reference the expression",
            "example": "abc123"
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          },
          "root_reference": {
            "type": "string",
            "description": "The root reference for this expression (i.e. where the expression starts)",
            "example": "incident.status"
          }
        },
        "example": {
          "else_branch": {
            "result": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "label": "Team Slack channel",
          "operations": [
            {
              "branches": {
                "branches": [
                  {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                }
              },
              "filter": {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ]
              },
              "navigate": {
                "reference": "1235",
                "reference_label": "Teams"
              },
              "operation_type": "navigate",
              "parse": {
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "source": "metadata.annotations[\"github.com/repo\"]"
              },
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              }
            }
          ],
          "reference": "abc123",
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          },
          "root_reference": "incident.status"
        },
        "required": [
          "label",
          "reference",
          "returns",
          "root_reference",
          "operations",
          "id"
        ]
      },
      "ExternalIssueReferenceV1": {
        "type": "object",
        "properties": {
          "issue_name": {
            "type": "string",
            "description": "Human readable ID for the issue",
            "example": "INC-123"
          },
          "issue_permalink": {
            "type": "string",
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up"
          },
          "provider": {
            "type": "string",
            "description": "ID of the issue tracker provider",
            "example": "asana",
            "enum": [
              "asana",
              "click_up",
              "linear",
              "jira",
              "jira_server",
              "github",
              "gitlab",
              "shortcut"
            ]
          }
        },
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        }
      },
      "ExternalIssueReferenceV2": {
        "type": "object",
        "properties": {
          "issue_name": {
            "type": "string",
            "description": "Human readable ID for the issue",
            "example": "INC-123"
          },
          "issue_permalink": {
            "type": "string",
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up"
          },
          "provider": {
            "type": "string",
            "description": "ID of the issue tracker provider",
            "example": "asana",
            "enum": [
              "asana",
              "click_up",
              "linear",
              "jira",
              "jira_server",
              "github",
              "gitlab",
              "shortcut"
            ]
          }
        },
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "required": [
          "provider",
          "provider_instance_id",
          "issue_name",
          "issue_permalink",
          "issue_id"
        ]
      },
      "ExternalResourceV1": {
        "type": "object",
        "properties": {
          "external_id": {
            "type": "string",
            "description": "ID of the resource in the external system",
            "example": "123"
          },
          "permalink": {
            "type": "string",
            "description": "URL of the resource",
            "example": "https://my.pagerduty.com/incidents/ABC"
          },
          "resource_type": {
            "type": "string",
            "description": "E.g. PagerDuty: the external system that holds the resource",
            "example": "pager_duty_incident",
            "enum": [
              "pager_duty_incident",
              "opsgenie_alert",
              "datadog_monitor_alert",
              "github_pull_request",
              "gitlab_merge_request",
              "sentry_issue",
              "jira_issue",
              "atlassian_statuspage_incident",
              "zendesk_ticket",
              "google_calendar_event",
              "scrubbed",
              "statuspage_incident"
            ]
          },
          "title": {
            "type": "string",
            "description": "Title of resource",
            "example": "The database has gone down"
          }
        },
        "example": {
          "external_id": "123",
          "permalink": "https://my.pagerduty.com/incidents/ABC",
          "resource_type": "pager_duty_incident",
          "title": "The database has gone down"
        },
        "required": [
          "id",
          "permalink",
          "external_id",
          "title",
          "resource_type",
          "resource_type_label",
          "created_at",
          "updated_at"
        ]
      },
      "FollowUpPriorityV2": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the follow-up priority option",
            "example": "A follow-up that requires immediate attention."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the follow-up priority option",
            "example": "01GNW4BAQ7XRMFF6FHKNXDFPRW"
          },
          "name": {
            "type": "string",
            "description": "Name of the follow-up priority option",
            "example": "Urgent"
          },
          "rank": {
            "type": "integer",
            "description": "Rank is used to order the follow-up priority options correctly",
            "example": 10,
            "format": "int64"
          }
        },
        "example": {
          "description": "A follow-up that requires immediate attention.",
          "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
          "name": "Urgent",
          "rank": 10
        },
        "required": [
          "id",
          "name",
          "rank"
        ]
      },
      "FollowUpV2": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1"
          },
          "completed_at": {
            "type": "string",
            "description": "When the follow-up was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "description": "When the follow-up was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the follow-up",
            "example": "Call the fire brigade"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV2"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the follow-up",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "incident_id": {
            "type": "string",
            "description": "Unique identifier of the incident the follow-up belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "priority": {
            "$ref": "#/components/schemas/FollowUpPriorityV2"
          },
          "status": {
            "type": "string",
            "description": "Status of the follow-up",
            "example": "outstanding",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ]
          },
          "title": {
            "type": "string",
            "description": "Title of the follow-up",
            "example": "Cat is stuck in the tree"
          },
          "updated_at": {
            "type": "string",
            "description": "When the follow-up was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "priority": {
            "description": "A follow-up that requires immediate attention.",
            "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
            "name": "Urgent",
            "rank": 10
          },
          "status": "outstanding",
          "title": "Cat is stuck in the tree",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "incident_id",
          "title",
          "status",
          "created_at",
          "updated_at"
        ]
      },
      "IdentityResponseBody": {
        "type": "object",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/IdentityV1"
          }
        },
        "example": {
          "identity": {
            "dashboard_url": "https://app.incident.io/my-org",
            "name": "Alertmanager token",
            "roles": [
              "incident_creator"
            ]
          }
        },
        "required": [
          "identity"
        ]
      },
      "IdentityV1": {
        "type": "object",
        "properties": {
          "dashboard_url": {
            "type": "string",
            "description": "The dashboard URL for this organisation",
            "example": "https://app.incident.io/my-org"
          },
          "name": {
            "type": "string",
            "description": "The name assigned to the current API Key",
            "example": "Alertmanager token"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "incident_creator",
              "enum": [
                "viewer",
                "incident_creator",
                "incident_editor",
                "manage_settings",
                "global_access",
                "catalog_viewer",
                "catalog_editor",
                "incident_memberships_editor",
                "schedules_editor",
                "schedules_reader",
                "workflows_editor",
                "private_workflows_editor",
                "on_call_editor"
              ]
            },
            "description": "Which roles have been enabled for this key",
            "example": [
              "incident_creator"
            ]
          }
        },
        "example": {
          "dashboard_url": "https://app.incident.io/my-org",
          "name": "Alertmanager token",
          "roles": [
            "incident_creator"
          ]
        },
        "required": [
          "name",
          "roles",
          "dashboard_url"
        ]
      },
      "IncidentAttachmentV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of this incident membership",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "incident_id": {
            "type": "string",
            "description": "Unique identifier of the incident",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "resource": {
            "$ref": "#/components/schemas/ExternalResourceV1"
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "resource": {
            "external_id": "123",
            "permalink": "https://my.pagerduty.com/incidents/ABC",
            "resource_type": "pager_duty_incident",
            "title": "The database has gone down"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "incident_id",
          "resource",
          "creator",
          "created_at"
        ]
      },
      "IncidentDurationMetricV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of this incident duration metric",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "name": {
            "type": "string",
            "description": "Unique name of this duration metric",
            "example": "Lasted"
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Lasted"
        },
        "required": [
          "id",
          "name",
          "rank",
          "from_timestamp_id",
          "to_timestamp_id",
          "metric_type",
          "calculation_mode",
          "created_at",
          "updated_at",
          "validate"
        ]
      },
      "IncidentDurationMetricWithValueV2": {
        "type": "object",
        "properties": {
          "duration_metric": {
            "$ref": "#/components/schemas/IncidentDurationMetricV2"
          },
          "value_seconds": {
            "type": "integer",
            "description": "The calculated durations for this metric",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "duration_metric": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Lasted"
          },
          "value_seconds": 1
        },
        "required": [
          "duration_metric"
        ]
      },
      "IncidentEditPayloadV2": {
        "type": "object",
        "properties": {
          "call_url": {
            "type": "string",
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo"
          },
          "custom_field_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV1"
            },
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ]
          },
          "incident_role_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV2"
            },
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ]
          },
          "incident_status_id": {
            "type": "string",
            "description": "Incident status to change incident to (you can only change an incident from one active status to another, any other lifecycle changes must be taken via the app.)",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          },
          "incident_timestamp_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampValuePayloadV2"
            },
            "description": "Assign the incident's timestamps to these values",
            "example": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Explanation of the incident",
            "example": "Our database is sad"
          },
          "severity_id": {
            "type": "string",
            "description": "Severity to change incident to",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          },
          "summary": {
            "type": "string",
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet."
          }
        },
        "example": {
          "call_url": "https://zoom.us/foo",
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_status_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "incident_timestamp_values": [
            {
              "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "value": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "name": "Our database is sad",
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "summary": "Our database is really really sad, and we don't know why yet."
        }
      },
      "IncidentMembership": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "When the membership was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this incident membership",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "incident_id": {
            "type": "string",
            "description": "Unique identifier of the incident",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "updated_at": {
            "type": "string",
            "description": "When the membership was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserV1"
          }
        },
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "required": [
          "id",
          "user",
          "incident_id",
          "created_at",
          "updated_at"
        ]
      },
      "IncidentRoleAssignmentPayloadV1": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserReferencePayloadV1"
          },
          "incident_role_id": {
            "type": "string",
            "description": "Unique ID of an incident role. Note that the 'reporter' role can only be assigned when creating an incident.",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          }
        },
        "example": {
          "assignee": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          },
          "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
        },
        "required": [
          "incident_role_id",
          "assignee"
        ]
      },
      "IncidentRoleAssignmentPayloadV2": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserReferencePayloadV1"
          },
          "incident_role_id": {
            "type": "string",
            "description": "Unique ID of an incident role",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96"
          }
        },
        "example": {
          "assignee": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          },
          "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
        },
        "required": [
          "incident_role_id"
        ]
      },
      "IncidentRoleAssignmentV1": {
        "type": "object",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1"
          },
          "role": {
            "$ref": "#/components/schemas/IncidentRoleV1"
          }
        },
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": false,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "role"
        ]
      },
      "IncidentRoleV1": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "When the role was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "instructions": {
            "type": "string",
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1
          },
          "required": {
            "type": "boolean",
            "description": "DEPRECATED: this will always be false.",
            "example": false
          },
          "role_type": {
            "type": "string",
            "description": "Type of incident role",
            "example": "lead",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ]
          },
          "shortform": {
            "type": "string",
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "minLength": 1
          },
          "updated_at": {
            "type": "string",
            "description": "When the role was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "condition_groups",
          "id",
          "name",
          "description",
          "instructions",
          "shortform",
          "role_type",
          "created_at",
          "updated_at"
        ]
      },
      "IncidentRoleV2": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "When the role was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "instructions": {
            "type": "string",
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1
          },
          "role_type": {
            "type": "string",
            "description": "Type of incident role",
            "example": "lead",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ]
          },
          "shortform": {
            "type": "string",
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "minLength": 1
          },
          "updated_at": {
            "type": "string",
            "description": "When the role was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "condition_groups",
          "id",
          "name",
          "description",
          "instructions",
          "shortform",
          "role_type",
          "created_at",
          "updated_at"
        ]
      },
      "IncidentStatusV1": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "What category of status it is. All statuses apart from live (renamed in the app to Active) and learning (renamed in the app to Post-incident) are managed by incident.io and cannot be configured",
            "example": "triage",
            "enum": [
              "triage",
              "declined",
              "merged",
              "canceled",
              "live",
              "learning",
              "closed",
              "paused"
            ]
          },
          "created_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident."
          },
          "id": {
            "type": "string",
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "name": {
            "type": "string",
            "description": "Unique name of this status",
            "example": "Closed"
          },
          "rank": {
            "type": "integer",
            "description": "Order of this incident status",
            "example": 4,
            "format": "int64"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "category": "triage",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Closed",
          "rank": 4,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "category",
          "created_at",
          "updated_at"
        ]
      },
      "IncidentTimestampV1": {
        "type": "object",
        "properties": {
          "last_occurred_at": {
            "type": "string",
            "description": "When this last occurred, if it did",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the lifecycle event",
            "example": "last_activity"
          }
        },
        "example": {
          "last_occurred_at": "2021-08-17T13:28:57.801578Z",
          "name": "last_activity"
        },
        "required": [
          "name"
        ]
      },
      "IncidentTimestampV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of this incident timestamp",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "name": {
            "type": "string",
            "description": "Unique name of this timestamp",
            "example": "Impact started"
          },
          "rank": {
            "type": "integer",
            "description": "Order in which this timestamp should be shown",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Impact started",
          "rank": 1
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "set_on_creation",
          "set_on_acceptance",
          "set_on_resolution",
          "set_by_rules",
          "timestamp_type",
          "created_at",
          "updated_at"
        ]
      },
      "IncidentTimestampValuePayloadV2": {
        "type": "object",
        "properties": {
          "incident_timestamp_id": {
            "type": "string",
            "description": "The id of the incident timestamp that this incident timestamp value is associated with.",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H"
          },
          "value": {
            "type": "string",
            "description": "The current value of this timestamp, for this incident",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "value": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "incident_timestamp_id",
          "id",
          "incident_id",
          "created_at"
        ]
      },
      "IncidentTimestampValueV2": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The current value of this timestamp, for this incident",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "value": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "incident_id",
          "incident_timestamp_id",
          "created_at"
        ]
      },
      "IncidentTimestampWithValueV2": {
        "type": "object",
        "properties": {
          "incident_timestamp": {
            "$ref": "#/components/schemas/IncidentTimestampV2"
          },
          "value": {
            "$ref": "#/components/schemas/IncidentTimestampValueV2"
          }
        },
        "example": {
          "incident_timestamp": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Impact started",
            "rank": 1
          },
          "value": {
            "value": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "incident_timestamp"
        ]
      },
      "IncidentTypeV1": {
        "type": "object",
        "properties": {
          "create_in_triage": {
            "type": "string",
            "description": "Whether incidents of this must always, or can optionally, be created in triage",
            "example": "always",
            "enum": [
              "always",
              "optional"
            ]
          },
          "created_at": {
            "type": "string",
            "description": "When this resource was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "What is this incident type for?",
            "example": "Customer facing production outages"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for this Incident Type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "is_default": {
            "type": "boolean",
            "description": "The default Incident Type is used when no other type is explicitly specified",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "The name of this Incident Type",
            "example": "Production Outage"
          },
          "private_incidents_only": {
            "type": "boolean",
            "description": "Should all incidents created with this Incident Type be private?",
            "example": false
          },
          "updated_at": {
            "type": "string",
            "description": "When this resource was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "create_in_triage": "always",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Customer facing production outages",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_default": false,
          "name": "Production Outage",
          "private_incidents_only": false,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "name",
          "is_default",
          "description",
          "private_incidents_only",
          "created_at",
          "updated_at",
          "create_in_triage",
          "severity_aliases",
          "rank",
          "override_auto_close_incidents",
          "auto_close_incidents",
          "auto_close_incidents_delay_days",
          "override_auto_archive_slack_channels",
          "auto_archive_slack_channels",
          "auto_archive_slack_channels_delay_days"
        ]
      },
      "IncidentUpdateV2": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "When the update was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for this incident update",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "incident_id": {
            "type": "string",
            "description": "The incident this update relates to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "merged_into_incident_id": {
            "type": "string",
            "description": "The ID of the incident that this incident was merged into, if it was merged in to another incident",
            "example": "abc123"
          },
          "message": {
            "type": "string",
            "description": "Message that explains the context behind the update",
            "example": "We're working on a fix, hoping to ship in the next 30 minutes"
          },
          "new_incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          },
          "new_severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "updater": {
            "$ref": "#/components/schemas/ActorV2"
          }
        },
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "merged_into_incident_id": "abc123",
          "message": "We're working on a fix, hoping to ship in the next 30 minutes",
          "new_incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "new_severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "updater": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          }
        },
        "required": [
          "id",
          "incident_id",
          "new_incident_status",
          "updater",
          "created_at",
          "next_update_in_minutes"
        ]
      },
      "IncidentV1": {
        "type": "object",
        "properties": {
          "call_url": {
            "type": "string",
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo"
          },
          "created_at": {
            "type": "string",
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV2"
          },
          "custom_field_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV1"
            },
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          "incident_role_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV1"
            },
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ]
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1"
          },
          "mode": {
            "type": "string",
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "example": "real",
            "enum": [
              "real",
              "test",
              "tutorial"
            ]
          },
          "name": {
            "type": "string",
            "description": "Explanation of the incident",
            "example": "Our database is sad"
          },
          "permalink": {
            "type": "string",
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123"
          },
          "postmortem_document_url": {
            "type": "string",
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id"
          },
          "reference": {
            "type": "string",
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "slack_channel_id": {
            "type": "string",
            "description": "ID of the Slack channel in the organisation Slack workspace. Note that the channel is sometimes created asynchronously, so may not be present when the incident is just created.",
            "example": "C02AW36C1M5"
          },
          "slack_channel_name": {
            "type": "string",
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot"
          },
          "slack_team_id": {
            "type": "string",
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J"
          },
          "status": {
            "type": "string",
            "description": "Current status of the incident",
            "example": "triage",
            "enum": [
              "triage",
              "investigating",
              "fixing",
              "monitoring",
              "closed",
              "declined"
            ]
          },
          "summary": {
            "type": "string",
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet."
          },
          "timestamps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampV1"
            },
            "description": "Incident lifecycle events and when they last occurred",
            "example": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ]
          },
          "updated_at": {
            "type": "string",
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "visibility": {
            "type": "string",
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "example": "public",
            "enum": [
              "public",
              "private"
            ]
          }
        },
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "real",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "status": "triage",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "timestamps": [
            {
              "last_occurred_at": "2021-08-17T13:28:57.801578Z",
              "name": "last_activity"
            }
          ],
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public"
        },
        "required": [
          "status",
          "id",
          "external_id",
          "reference",
          "name",
          "incident_status",
          "idempotency_key",
          "did_opt_out_of_post_incident_flow",
          "visibility",
          "mode",
          "organisation_id",
          "creator",
          "last_activity_at",
          "incident_role_assignments",
          "custom_field_entries",
          "slack_team_id",
          "slack_channel_id",
          "created_at",
          "updated_at",
          "reported_at"
        ]
      },
      "IncidentV2": {
        "type": "object",
        "properties": {
          "call_url": {
            "type": "string",
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo"
          },
          "created_at": {
            "type": "string",
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV2"
          },
          "custom_field_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV1"
            },
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ]
          },
          "duration_metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentDurationMetricWithValueV2"
            },
            "description": "Incident duration metrics and their measurements for this incident",
            "example": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ]
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV2"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          "incident_role_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV1"
            },
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ]
          },
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          },
          "incident_timestamp_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampWithValueV2"
            },
            "description": "Incident lifecycle events and when they occurred",
            "example": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ]
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1"
          },
          "mode": {
            "type": "string",
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "example": "standard",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ]
          },
          "name": {
            "type": "string",
            "description": "Explanation of the incident",
            "example": "Our database is sad"
          },
          "permalink": {
            "type": "string",
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123"
          },
          "postmortem_document_url": {
            "type": "string",
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id"
          },
          "reference": {
            "type": "string",
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "slack_channel_id": {
            "type": "string",
            "description": "ID of the Slack channel in the organisation Slack workspace. Note that the channel is sometimes created asynchronously, so may not be present when the incident is just created.",
            "example": "C02AW36C1M5"
          },
          "slack_channel_name": {
            "type": "string",
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot"
          },
          "slack_team_id": {
            "type": "string",
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J"
          },
          "summary": {
            "type": "string",
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet."
          },
          "updated_at": {
            "type": "string",
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "visibility": {
            "type": "string",
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "example": "public",
            "enum": [
              "public",
              "private"
            ]
          },
          "workload_minutes_late": {
            "type": "number",
            "description": "Amount of time spent on the incident in late hours",
            "example": 40.7,
            "format": "double"
          },
          "workload_minutes_sleeping": {
            "type": "number",
            "description": "Amount of time spent on the incident in sleeping hours",
            "example": 0,
            "format": "double"
          },
          "workload_minutes_total": {
            "type": "number",
            "description": "Amount of time spent on the incident in total",
            "example": 60.7,
            "format": "double"
          },
          "workload_minutes_working": {
            "type": "number",
            "description": "Amount of time spent on the incident in working hours",
            "example": 20,
            "format": "double"
          }
        },
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "duration_metrics": [
            {
              "duration_metric": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Lasted"
              },
              "value_seconds": 1
            }
          ],
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "incident_timestamp_values": [
            {
              "incident_timestamp": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              },
              "value": {
                "value": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "standard",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public",
          "workload_minutes_late": 40.7,
          "workload_minutes_sleeping": 0,
          "workload_minutes_total": 60.7,
          "workload_minutes_working": 20
        },
        "required": [
          "incident_status",
          "id",
          "external_id",
          "reference",
          "name",
          "idempotency_key",
          "did_opt_out_of_post_incident_flow",
          "visibility",
          "mode",
          "organisation_id",
          "creator",
          "last_activity_at",
          "incident_role_assignments",
          "custom_field_entries",
          "slack_team_id",
          "slack_channel_id",
          "created_at",
          "updated_at",
          "reported_at"
        ]
      },
      "IncidentWithStatusChangeV2": {
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2"
          },
          "new_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          },
          "previous_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          }
        },
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          },
          "new_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "previous_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "incident",
          "previous_status",
          "new_status"
        ]
      },
      "ListEntriesResponseBody": {
        "type": "object",
        "properties": {
          "catalog_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogEntryV2"
            },
            "example": [
              {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "archived_at": "2021-08-17T14:28:57.801578Z",
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "catalog_entry": {
                          "archived_at": "2021-08-17T14:28:57.801578Z",
                          "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "catalog_entry_name": "Primary escalation",
                          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "helptext": "Collection of standalone automations like auto-closing incidents.",
                        "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                        "is_image_slack_icon": false,
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity",
                        "sort_key": "000020",
                        "unavailable": false,
                        "value": "abc123"
                      }
                    ],
                    "value": {
                      "catalog_entry": {
                        "archived_at": "2021-08-17T14:28:57.801578Z",
                        "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "catalog_entry_name": "Primary escalation",
                        "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      },
                      "helptext": "Collection of standalone automations like auto-closing incidents.",
                      "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                      "is_image_slack_icon": false,
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity",
                      "sort_key": "000020",
                      "unavailable": false,
                      "value": "abc123"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call",
                "rank": 3,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResult"
          }
        },
        "example": {
          "catalog_entries": [
            {
              "aliases": [
                "lawrence@incident.io",
                "lawrence"
              ],
              "archived_at": "2021-08-17T14:28:57.801578Z",
              "attribute_values": {
                "abc123": {
                  "array_value": [
                    {
                      "catalog_entry": {
                        "archived_at": "2021-08-17T14:28:57.801578Z",
                        "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "catalog_entry_name": "Primary escalation",
                        "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      },
                      "helptext": "Collection of standalone automations like auto-closing incidents.",
                      "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                      "is_image_slack_icon": false,
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity",
                      "sort_key": "000020",
                      "unavailable": false,
                      "value": "abc123"
                    }
                  ],
                  "value": {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "Collection of standalone automations like auto-closing incidents.",
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "000020",
                    "unavailable": false,
                    "value": "abc123"
                  }
                }
              },
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Primary On-call",
              "rank": 3,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "required": [
          "catalog_type",
          "catalog_entries",
          "pagination_meta"
        ]
      },
      "ListResourcesResponseBody": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogResourceV2"
            },
            "example": [
              {
                "category": "custom",
                "description": "Boolean true or false value",
                "label": "GitHub Repository",
                "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
              }
            ]
          }
        },
        "example": {
          "resources": [
            {
              "category": "custom",
              "description": "Boolean true or false value",
              "label": "GitHub Repository",
              "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
              "value_docstring": "Either the GraphQL node ID of the repository or a string of <owner>/<repo>, e.g. incident-io/website"
            }
          ]
        },
        "required": [
          "resources"
        ]
      },
      "ListResponseBody": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionV1"
            },
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "follow_up": true,
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "status": "outstanding",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "actions": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "follow_up": true,
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "status": "outstanding",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "actions"
        ]
      },
      "ListResponseBody10": {
        "type": "object",
        "properties": {
          "incident_statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentStatusV1"
            },
            "example": [
              {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "incident_statuses": [
            {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "incident_statuses"
        ]
      },
      "ListResponseBody11": {
        "type": "object",
        "properties": {
          "incident_timestamps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampV2"
            },
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              }
            ]
          }
        },
        "example": {
          "incident_timestamps": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Impact started",
              "rank": 1
            }
          ]
        },
        "required": [
          "incident_timestamps"
        ]
      },
      "ListResponseBody12": {
        "type": "object",
        "properties": {
          "incident_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTypeV1"
            },
            "example": [
              {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "incident_types": [
            {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "incident_types"
        ]
      },
      "ListResponseBody13": {
        "type": "object",
        "properties": {
          "incident_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentUpdateV2"
            },
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "merged_into_incident_id": "abc123",
                "message": "We're working on a fix, hoping to ship in the next 30 minutes",
                "new_incident_status": {
                  "category": "triage",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Closed",
                  "rank": 4,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "new_severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "updater": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                }
              }
            ]
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResult"
          }
        },
        "example": {
          "incident_updates": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "merged_into_incident_id": "abc123",
              "message": "We're working on a fix, hoping to ship in the next 30 minutes",
              "new_incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "new_severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "updater": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "required": [
          "incident_updates"
        ]
      },
      "ListResponseBody14": {
        "type": "object",
        "properties": {
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentV1"
            },
            "example": [
              {
                "call_url": "https://zoom.us/foo",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "creator": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "custom_field_entries": [
                  {
                    "custom_field": {
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ]
                    },
                    "values": [
                      {
                        "value_catalog_entry": {
                          "aliases": [
                            "lawrence@incident.io",
                            "lawrence"
                          ],
                          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Primary On-call"
                        },
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option": {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        },
                        "value_text": "This is my text field, I hope you like it"
                      }
                    ]
                  }
                ],
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "role": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": false,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_type": {
                  "create_in_triage": "always",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Customer facing production outages",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "is_default": false,
                  "name": "Production Outage",
                  "private_incidents_only": false,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "mode": "real",
                "name": "Our database is sad",
                "permalink": "https://app.incident.io/incidents/123",
                "postmortem_document_url": "https://docs.google.com/my_doc_id",
                "reference": "INC-123",
                "severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "slack_channel_id": "C02AW36C1M5",
                "slack_channel_name": "inc-165-green-parrot",
                "slack_team_id": "T02A1FSLE8J",
                "status": "triage",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "timestamps": [
                  {
                    "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                    "name": "last_activity"
                  }
                ],
                "updated_at": "2021-08-17T13:28:57.801578Z",
                "visibility": "public"
              }
            ]
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotal"
          }
        },
        "example": {
          "incidents": [
            {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "real",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "status": "triage",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "timestamps": [
                {
                  "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                  "name": "last_activity"
                }
              ],
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public"
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          }
        },
        "required": [
          "incidents"
        ]
      },
      "ListResponseBody15": {
        "type": "object",
        "properties": {
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentV2"
            },
            "example": [
              {
                "call_url": "https://zoom.us/foo",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "creator": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "custom_field_entries": [
                  {
                    "custom_field": {
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ]
                    },
                    "values": [
                      {
                        "value_catalog_entry": {
                          "aliases": [
                            "lawrence@incident.io",
                            "lawrence"
                          ],
                          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Primary On-call"
                        },
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option": {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        },
                        "value_text": "This is my text field, I hope you like it"
                      }
                    ]
                  }
                ],
                "duration_metrics": [
                  {
                    "duration_metric": {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Lasted"
                    },
                    "value_seconds": 1
                  }
                ],
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "role": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": false,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_status": {
                  "category": "triage",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Closed",
                  "rank": 4,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "incident_timestamp_values": [
                  {
                    "incident_timestamp": {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Impact started",
                      "rank": 1
                    },
                    "value": {
                      "value": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_type": {
                  "create_in_triage": "always",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Customer facing production outages",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "is_default": false,
                  "name": "Production Outage",
                  "private_incidents_only": false,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "mode": "standard",
                "name": "Our database is sad",
                "permalink": "https://app.incident.io/incidents/123",
                "postmortem_document_url": "https://docs.google.com/my_doc_id",
                "reference": "INC-123",
                "severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "slack_channel_id": "C02AW36C1M5",
                "slack_channel_name": "inc-165-green-parrot",
                "slack_team_id": "T02A1FSLE8J",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "updated_at": "2021-08-17T13:28:57.801578Z",
                "visibility": "public",
                "workload_minutes_late": 40.7,
                "workload_minutes_sleeping": 0,
                "workload_minutes_total": 60.7,
                "workload_minutes_working": 20
              }
            ]
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotal"
          }
        },
        "example": {
          "incidents": [
            {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "duration_metrics": [
                {
                  "duration_metric": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Lasted"
                  },
                  "value_seconds": 1
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          }
        },
        "required": [
          "incidents"
        ]
      },
      "ListResponseBody16": {
        "type": "object",
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotal"
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleV2"
            },
            "example": [
              {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "config": {
                  "rotations": [
                    {
                      "effective_from": "2021-08-17T13:28:57.801578Z",
                      "handover_start_at": "2021-08-17T13:28:57.801578Z",
                      "handovers": [
                        {
                          "interval": 1,
                          "interval_type": "daily"
                        }
                      ],
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "layers": [
                        {
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "name": "Layer 1"
                        }
                      ],
                      "name": "Primary On-Call Schedule",
                      "users": [
                        {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      ],
                      "working_interval": [
                        {
                          "end_time": "17:00",
                          "start_time": "09:00",
                          "weekday": "tuesday"
                        }
                      ]
                    }
                  ]
                },
                "created_at": "2021-08-17T13:28:57.801578Z",
                "current_shifts": [
                  {
                    "end_at": "2021-08-17T13:28:57.801578Z",
                    "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                    "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "start_at": "2021-08-17T13:28:57.801578Z",
                    "user": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Primary On-Call Schedule",
                "timezone": "Europe/London",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          },
          "schedules": [
            {
              "annotations": {
                "incident.io/terraform/version": "3.0.0"
              },
              "config": {
                "rotations": [
                  {
                    "effective_from": "2021-08-17T13:28:57.801578Z",
                    "handover_start_at": "2021-08-17T13:28:57.801578Z",
                    "handovers": [
                      {
                        "interval": 1,
                        "interval_type": "daily"
                      }
                    ],
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "layers": [
                      {
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "name": "Layer 1"
                      }
                    ],
                    "name": "Primary On-Call Schedule",
                    "users": [
                      {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    ],
                    "working_interval": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "tuesday"
                      }
                    ]
                  }
                ]
              },
              "created_at": "2021-08-17T13:28:57.801578Z",
              "current_shifts": [
                {
                  "end_at": "2021-08-17T13:28:57.801578Z",
                  "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                  "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "start_at": "2021-08-17T13:28:57.801578Z",
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Primary On-Call Schedule",
              "timezone": "Europe/London",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "schedules"
        ]
      },
      "ListResponseBody17": {
        "type": "object",
        "properties": {
          "severities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeverityV2"
            },
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "severities": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "severities"
        ]
      },
      "ListResponseBody18": {
        "type": "object",
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResult"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWithRolesV2"
            },
            "example": [
              {
                "base_role": {
                  "description": "Elevated permissions for the customer success team.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Customer Success",
                  "slug": "customer-success"
                },
                "custom_roles": [
                  {
                    "description": "Elevated permissions for the customer success team.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Customer Success",
                    "slug": "customer-success"
                  }
                ],
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            ]
          }
        },
        "example": {
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          },
          "users": [
            {
              "base_role": {
                "description": "Elevated permissions for the customer success team.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Customer Success",
                "slug": "customer-success"
              },
              "custom_roles": [
                {
                  "description": "Elevated permissions for the customer success team.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Customer Success",
                  "slug": "customer-success"
                }
              ],
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          ]
        },
        "required": [
          "users",
          "pagination_meta"
        ]
      },
      "ListResponseBody2": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionV2"
            },
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "status": "outstanding",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "actions": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "status": "outstanding",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "actions"
        ]
      },
      "ListResponseBody3": {
        "type": "object",
        "properties": {
          "custom_field_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1"
            },
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResult"
          }
        },
        "example": {
          "custom_field_options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "required": [
          "custom_field_options",
          "pagination_meta"
        ]
      },
      "ListResponseBody4": {
        "type": "object",
        "properties": {
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldV1"
            },
            "example": [
              {
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ],
                "required": "never",
                "required_v2": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "custom_fields": [
            {
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Which team is impacted by this issue",
              "field_type": "single_select",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected Team",
              "options": [
                {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                }
              ],
              "required": "never",
              "required_v2": "never",
              "show_before_closure": true,
              "show_before_creation": true,
              "show_before_update": true,
              "show_in_announcement_post": true,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "custom_fields"
        ]
      },
      "ListResponseBody5": {
        "type": "object",
        "properties": {
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldV2"
            },
            "example": [
              {
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "custom_fields": [
            {
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Which team is impacted by this issue",
              "field_type": "single_select",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected Team",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "custom_fields"
        ]
      },
      "ListResponseBody6": {
        "type": "object",
        "properties": {
          "follow_ups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FollowUpV2"
            },
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "priority": {
                  "description": "A follow-up that requires immediate attention.",
                  "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                  "name": "Urgent",
                  "rank": 10
                },
                "status": "outstanding",
                "title": "Cat is stuck in the tree",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "follow_ups": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "priority": {
                "description": "A follow-up that requires immediate attention.",
                "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                "name": "Urgent",
                "rank": 10
              },
              "status": "outstanding",
              "title": "Cat is stuck in the tree",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "follow_ups"
        ]
      },
      "ListResponseBody7": {
        "type": "object",
        "properties": {
          "incident_attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentAttachmentV1"
            },
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "resource": {
                  "external_id": "123",
                  "permalink": "https://my.pagerduty.com/incidents/ABC",
                  "resource_type": "pager_duty_incident",
                  "title": "The database has gone down"
                }
              }
            ]
          }
        },
        "example": {
          "incident_attachments": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "resource": {
                "external_id": "123",
                "permalink": "https://my.pagerduty.com/incidents/ABC",
                "resource_type": "pager_duty_incident",
                "title": "The database has gone down"
              }
            }
          ]
        },
        "required": [
          "incident_attachments"
        ]
      },
      "ListResponseBody8": {
        "type": "object",
        "properties": {
          "incident_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleV1"
            },
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "incident_roles": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "The person currently coordinating the incident",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
              "name": "Incident Lead",
              "required": false,
              "role_type": "lead",
              "shortform": "lead",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "incident_roles"
        ]
      },
      "ListResponseBody9": {
        "type": "object",
        "properties": {
          "incident_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleV2"
            },
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "incident_roles": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "The person currently coordinating the incident",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
              "name": "Incident Lead",
              "role_type": "lead",
              "shortform": "lead",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "incident_roles"
        ]
      },
      "ListScheduleEntriesResponseBody": {
        "type": "object",
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/AfterPaginationMetaResultV2"
          },
          "schedule_entries": {
            "$ref": "#/components/schemas/ScheduleEntriesListPayloadV2"
          }
        },
        "example": {
          "pagination_meta": {
            "after": "abc123",
            "after_url": "abc123"
          },
          "schedule_entries": {
            "final": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "overrides": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "scheduled": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ]
          }
        },
        "required": [
          "schedule_entries"
        ]
      },
      "ListTypesResponseBody": {
        "type": "object",
        "properties": {
          "catalog_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogTypeV2"
            },
            "example": [
              {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "dynamic_resource_parameter": "abc123",
                "estimated_count": 7,
                "icon": "bolt",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_editable": false,
                "last_synced_at": "2021-08-17T13:28:57.801578Z",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "registry_type": "PagerDutyService",
                "required_integrations": [
                  "pager_duty"
                ],
                "schema": {
                  "attributes": [
                    {
                      "array": false,
                      "backlink_attribute": "abc123",
                      "id": "01GW2G3V0S59R238FAHPDS1R66",
                      "mode": "manual",
                      "name": "tier",
                      "path": [
                        {
                          "attribute_id": "abc123",
                          "attribute_name": "abc123"
                        }
                      ],
                      "type": "Custom[\"Service\"]"
                    }
                  ],
                  "version": 1
                },
                "semantic_type": "custom",
                "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                "type_name": "Custom[\"BackstageGroup\"]",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ]
          }
        },
        "example": {
          "catalog_types": [
            {
              "annotations": {
                "incident.io/catalog-importer/id": "id-of-config"
              },
              "categories": [
                "issue-tracker"
              ],
              "color": "yellow",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Represents Kubernetes clusters that we run inside of GKE.",
              "dynamic_resource_parameter": "abc123",
              "estimated_count": 7,
              "icon": "bolt",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_editable": false,
              "last_synced_at": "2021-08-17T13:28:57.801578Z",
              "name": "Kubernetes Cluster",
              "ranked": true,
              "registry_type": "PagerDutyService",
              "required_integrations": [
                "pager_duty"
              ],
              "schema": {
                "attributes": [
                  {
                    "array": false,
                    "backlink_attribute": "abc123",
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "manual",
                    "name": "tier",
                    "path": [
                      {
                        "attribute_id": "abc123",
                        "attribute_name": "abc123"
                      }
                    ],
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              },
              "semantic_type": "custom",
              "source_repo_url": "https://github.com/my-company/incident-io-catalog",
              "type_name": "Custom[\"BackstageGroup\"]",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "required": [
          "catalog_types"
        ]
      },
      "ListWorkflowsResponseBody": {
        "type": "object",
        "properties": {
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowSlim"
            },
            "example": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "continue_on_step_error": true,
                "delay": {
                  "conditions_apply_over_delay": false,
                  "for_seconds": 60
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "1235",
                          "reference_label": "Teams"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        },
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "root_reference": "incident.status"
                  }
                ],
                "folder": "My folder 01",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "include_private_incidents": true,
                "name": "My workflow",
                "once_for": [
                  {
                    "array": false,
                    "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                    "label": "Incident -> Affected Team",
                    "type": "IncidentSeverity"
                  }
                ],
                "runs_from": "2021-08-17T13:28:57.801578Z",
                "runs_on_incident_modes": [
                  "standard",
                  "retrospective"
                ],
                "runs_on_incidents": "newly_created",
                "state": "active",
                "steps": [
                  {
                    "label": "PagerDuty Escalate",
                    "name": "pagerduty.escalate"
                  }
                ],
                "trigger": {
                  "label": "Incident Updated",
                  "name": "incident.updated"
                },
                "version": 3
              }
            ]
          }
        },
        "example": {
          "workflows": [
            {
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ]
                }
              ],
              "continue_on_step_error": true,
              "delay": {
                "conditions_apply_over_delay": false,
                "for_seconds": 60
              },
              "expressions": [
                {
                  "else_branch": {
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "label": "Team Slack channel",
                  "operations": [
                    {
                      "branches": {
                        "branches": [
                          {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": {
                                      "label": "Lawrence Jones",
                                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                    },
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": {
                                      "label": "Incident Severity",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ]
                              }
                            ],
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          }
                        ],
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      },
                      "filter": {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "navigate": {
                        "reference": "1235",
                        "reference_label": "Teams"
                      },
                      "operation_type": "navigate",
                      "parse": {
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "source": "metadata.annotations[\"github.com/repo\"]"
                      },
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    }
                  ],
                  "reference": "abc123",
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "root_reference": "incident.status"
                }
              ],
              "folder": "My folder 01",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "include_private_incidents": true,
              "name": "My workflow",
              "once_for": [
                {
                  "array": false,
                  "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                  "label": "Incident -> Affected Team",
                  "type": "IncidentSeverity"
                }
              ],
              "runs_from": "2021-08-17T13:28:57.801578Z",
              "runs_on_incident_modes": [
                "standard",
                "retrospective"
              ],
              "runs_on_incidents": "newly_created",
              "state": "active",
              "steps": [
                {
                  "label": "PagerDuty Escalate",
                  "name": "pagerduty.escalate"
                }
              ],
              "trigger": {
                "label": "Incident Updated",
                "name": "incident.updated"
              },
              "version": 3
            }
          ]
        },
        "required": [
          "workflows"
        ]
      },
      "ManagedResourceV2": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "managed_by": {
            "type": "string",
            "description": "How is this resource managed",
            "example": "dashboard",
            "enum": [
              "dashboard",
              "terraform",
              "external"
            ]
          },
          "resource_id": {
            "type": "string",
            "description": "The ID of the related resource",
            "example": "abc123"
          },
          "resource_type": {
            "type": "string",
            "description": "The type of the related resource",
            "example": "schedule",
            "enum": [
              "workflow",
              "schedule"
            ]
          },
          "source_url": {
            "type": "string",
            "description": "The url of the external repository where this resource is managed (if there is one)",
            "example": "https://github.com/my-company/infrastructure"
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "managed_by": "dashboard",
          "resource_id": "abc123",
          "resource_type": "schedule",
          "source_url": "https://github.com/my-company/infrastructure"
        },
        "required": [
          "resource_type",
          "resource_id",
          "managed_by",
          "annotations"
        ]
      },
      "ManagementMetaV2": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "managed_by": {
            "type": "string",
            "description": "How is this resource managed",
            "example": "dashboard",
            "enum": [
              "dashboard",
              "terraform",
              "external"
            ]
          },
          "source_url": {
            "type": "string",
            "description": "The url of the external repository where this resource is managed (if there is one)",
            "example": "https://github.com/my-company/infrastructure"
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "managed_by": "dashboard",
          "source_url": "https://github.com/my-company/infrastructure"
        },
        "required": [
          "annotations",
          "managed_by"
        ]
      },
      "PaginationMetaResult": {
        "type": "object",
        "properties": {
          "after": {
            "type": "string",
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "page_size": {
            "type": "integer",
            "description": "What was the maximum number of results requested",
            "default": 25,
            "example": 25,
            "format": "int64"
          }
        },
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25
        },
        "required": [
          "page_size"
        ]
      },
      "PaginationMetaResultWithTotal": {
        "type": "object",
        "properties": {
          "after": {
            "type": "string",
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "page_size": {
            "type": "integer",
            "description": "What was the maximum number of results requested",
            "default": 25,
            "example": 25,
            "format": "int64"
          },
          "total_record_count": {
            "type": "integer",
            "description": "How many matching records were there in total, if known",
            "example": 238,
            "format": "int64"
          }
        },
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25,
          "total_record_count": 238
        },
        "required": [
          "page_size"
        ]
      },
      "PrivateIncidentAccessAttemptedV1ResponseBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The type of log entry that this is",
            "example": "private_incident.access_attempted"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogPrivateIncidentAccessAttemptedMetadataV2"
          },
          "occurred_at": {
            "type": "string",
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "Which version the event is",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "action": "private_incident.access_attempted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "outcome": "granted"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context",
          "metadata"
        ]
      },
      "PrivateIncidentActionCreatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.action_created_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.action_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "example": {
          "event_type": "private_incident.action_created_v1",
          "private_incident.action_created_v1": {
            "id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.action_created_v1"
        ]
      },
      "PrivateIncidentActionUpdatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.action_updated_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.action_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "example": {
          "event_type": "private_incident.action_updated_v1",
          "private_incident.action_updated_v1": {
            "id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.action_updated_v1"
        ]
      },
      "PrivateIncidentFollowUpCreatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.follow_up_created_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "example": {
          "event_type": "private_incident.follow_up_created_v1",
          "private_incident.follow_up_created_v1": {
            "id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.follow_up_created_v1"
        ]
      },
      "PrivateIncidentFollowUpUpdatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.follow_up_updated_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "example": {
          "event_type": "private_incident.follow_up_updated_v1",
          "private_incident.follow_up_updated_v1": {
            "id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.follow_up_updated_v1"
        ]
      },
      "PrivateIncidentIncidentCreatedV2ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.incident_created_v2",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "example": {
          "event_type": "private_incident.incident_created_v2",
          "private_incident.incident_created_v2": {
            "id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.incident_created_v2"
        ]
      },
      "PrivateIncidentIncidentUpdatedV2ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.incident_updated_v2",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "example": {
          "event_type": "private_incident.incident_updated_v2",
          "private_incident.incident_updated_v2": {
            "id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.incident_updated_v2"
        ]
      },
      "PrivateIncidentMembershipGrantedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.membership_granted_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.membership_granted_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          }
        },
        "example": {
          "event_type": "private_incident.membership_granted_v1",
          "private_incident.membership_granted_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.membership_granted_v1"
        ]
      },
      "PrivateIncidentMembershipRevokedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "private_incident.membership_revoked_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "private_incident.membership_revoked_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          }
        },
        "example": {
          "event_type": "private_incident.membership_revoked_v1",
          "private_incident.membership_revoked_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          }
        },
        "required": [
          "event_type",
          "private_incident.membership_revoked_v1"
        ]
      },
      "PublicIncidentActionCreatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.action_created_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.action_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "example": {
          "event_type": "public_incident.action_created_v1",
          "public_incident.action_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "event_type",
          "public_incident.action_created_v1"
        ]
      },
      "PublicIncidentActionUpdatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.action_updated_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.action_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "example": {
          "event_type": "public_incident.action_updated_v1",
          "public_incident.action_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "event_type",
          "public_incident.action_updated_v1"
        ]
      },
      "PublicIncidentFollowUpCreatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.follow_up_created_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "example": {
          "event_type": "public_incident.follow_up_created_v1",
          "public_incident.follow_up_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "event_type",
          "public_incident.follow_up_created_v1"
        ]
      },
      "PublicIncidentFollowUpUpdatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.follow_up_updated_v1",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "example": {
          "event_type": "public_incident.follow_up_updated_v1",
          "public_incident.follow_up_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "event_type",
          "public_incident.follow_up_updated_v1"
        ]
      },
      "PublicIncidentIncidentCreatedV2ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.incident_created_v2",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          }
        },
        "example": {
          "event_type": "public_incident.incident_created_v2",
          "public_incident.incident_created_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_created_v2"
        ]
      },
      "PublicIncidentIncidentStatusUpdatedV2ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.incident_status_updated_v2",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.incident_status_updated_v2": {
            "$ref": "#/components/schemas/IncidentWithStatusChangeV2"
          }
        },
        "example": {
          "event_type": "public_incident.incident_status_updated_v2",
          "public_incident.incident_status_updated_v2": {
            "incident": {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "duration_metrics": [
                {
                  "duration_metric": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Lasted"
                  },
                  "value_seconds": 1
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            },
            "new_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "previous_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_status_updated_v2"
        ]
      },
      "PublicIncidentIncidentUpdatedV2ResponseBody": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "What type of event is this webhook for?",
            "example": "public_incident.incident_updated_v2",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ]
          },
          "public_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          }
        },
        "example": {
          "event_type": "public_incident.incident_updated_v2",
          "public_incident.incident_updated_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_updated_v2"
        ]
      },
      "RBACRoleV2": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the purpose for the RBAC role",
            "example": "Elevated permissions for the customer success team."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the RBAC role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Name of the RBAC role",
            "example": "Customer Success"
          },
          "slug": {
            "type": "string",
            "description": "Unique human-readable slug for the RBAC role",
            "example": "customer-success"
          }
        },
        "example": {
          "description": "Elevated permissions for the customer success team.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Customer Success",
          "slug": "customer-success"
        },
        "required": [
          "id",
          "name",
          "slug"
        ]
      },
      "RetrospectiveIncidentOptionsV2": {
        "type": "object",
        "properties": {
          "postmortem_document_url": {
            "type": "string",
            "description": "If the incident mode is 'retrospective', pass the URL of the postmortem to attach it to the incident",
            "example": "https://docs.google.com/my_doc_id"
          },
          "slack_channel_id": {
            "type": "string",
            "description": "If the incident mode is 'retrospective', pass the ID of a Slack channel in your workspace to attach the incident to an existing channel, rather than creating a new one",
            "example": "abc123"
          }
        },
        "example": {
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "slack_channel_id": "abc123"
        }
      },
      "ReturnsMetaV2": {
        "type": "object",
        "properties": {
          "array": {
            "type": "boolean",
            "description": "Whether the return value should be single or multi-value",
            "example": true
          },
          "type": {
            "type": "string",
            "description": "Expected return type of this expression (what to try casting the result to)",
            "example": "IncidentStatus"
          }
        },
        "example": {
          "array": true,
          "type": "IncidentStatus"
        },
        "required": [
          "type",
          "array"
        ]
      },
      "ScheduleConfigCreatePayloadV2": {
        "type": "object",
        "properties": {
          "rotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationCreatePayloadV2"
            },
            "example": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "daily"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "rotations": [
            {
              "effective_from": "2021-08-17T13:28:57.801578Z",
              "handover_start_at": "2021-08-17T13:28:57.801578Z",
              "handovers": [
                {
                  "interval": 1,
                  "interval_type": "daily"
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layers": [
                {
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "name": "Layer 1"
                }
              ],
              "name": "My Rotation",
              "users": [
                {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                }
              ],
              "working_interval": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "tuesday"
                }
              ]
            }
          ]
        }
      },
      "ScheduleConfigUpdatePayloadV2": {
        "type": "object",
        "properties": {
          "rotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationUpdatePayloadV2"
            },
            "example": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "daily"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "rotations": [
            {
              "effective_from": "2021-08-17T13:28:57.801578Z",
              "handover_start_at": "2021-08-17T13:28:57.801578Z",
              "handovers": [
                {
                  "interval": 1,
                  "interval_type": "daily"
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layers": [
                {
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "name": "Layer 1"
                }
              ],
              "name": "My Rotation",
              "users": [
                {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                }
              ],
              "working_interval": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "tuesday"
                }
              ]
            }
          ]
        }
      },
      "ScheduleConfigV2": {
        "type": "object",
        "properties": {
          "rotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationV2"
            },
            "description": "Rotas in this schedule",
            "example": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "daily"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "Primary On-Call Schedule",
                "users": [
                  {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "rotations": [
            {
              "effective_from": "2021-08-17T13:28:57.801578Z",
              "handover_start_at": "2021-08-17T13:28:57.801578Z",
              "handovers": [
                {
                  "interval": 1,
                  "interval_type": "daily"
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layers": [
                {
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "name": "Layer 1"
                }
              ],
              "name": "Primary On-Call Schedule",
              "users": [
                {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              ],
              "working_interval": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "tuesday"
                }
              ]
            }
          ]
        },
        "required": [
          "rotations",
          "version"
        ]
      },
      "ScheduleCreatePayloadV2": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that can track metadata about the schedule",
            "example": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "config": {
            "$ref": "#/components/schemas/ScheduleConfigCreatePayloadV2"
          },
          "name": {
            "type": "string",
            "description": "Name of the schedule",
            "example": "My Schedule"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the schedule",
            "example": "America/Los_Angeles"
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "version-of-terraform"
          },
          "config": {
            "rotations": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "daily"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          },
          "name": "My Schedule",
          "timezone": "America/Los_Angeles"
        }
      },
      "ScheduleEntriesListPayloadV2": {
        "type": "object",
        "properties": {
          "final": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ]
          },
          "overrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ]
          },
          "scheduled": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ]
          }
        },
        "example": {
          "final": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ],
          "overrides": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ],
          "scheduled": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ]
        },
        "required": [
          "scheduled",
          "overrides",
          "final"
        ]
      },
      "ScheduleEntryV2": {
        "type": "object",
        "properties": {
          "end_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "entry_id": {
            "type": "string",
            "description": "Unique identifier of the schedule entry",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "fingerprint": {
            "type": "string",
            "description": "A unique identifier for this entry, used to determine a unique shift",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "layer_id": {
            "type": "string",
            "description": "If present, the layer this entry applies to on the rota",
            "example": "01G0J1EXE7AXZ2C93K61WBPYNH"
          },
          "rotation_id": {
            "type": "string",
            "description": "If present, the rotation this entry applies to on the schedule",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "start_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserV1"
          }
        },
        "example": {
          "end_at": "2021-08-17T13:28:57.801578Z",
          "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
          "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "start_at": "2021-08-17T13:28:57.801578Z",
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "required": [
          "external_user_id",
          "start_at",
          "end_at"
        ]
      },
      "ScheduleLayerCreatePayloadV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the layer",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "name": {
            "type": "string",
            "description": "Name of the layer",
            "example": "Layer 1"
          }
        },
        "example": {
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Layer 1"
        },
        "required": [
          "name"
        ]
      },
      "ScheduleLayerV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the layer",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "name": {
            "type": "string",
            "description": "Name of the layer",
            "example": "Layer 1"
          }
        },
        "example": {
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Layer 1"
        }
      },
      "ScheduleRotationCreatePayloadV2": {
        "type": "object",
        "properties": {
          "effective_from": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "handover_start_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "handovers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationHandoverV2"
            },
            "example": [
              {
                "interval": 1,
                "interval_type": "daily"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the rotation",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleLayerCreatePayloadV2"
            },
            "example": [
              {
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Layer 1"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the rotation",
            "example": "My Rotation"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReferencePayloadV1"
            },
            "example": [
              {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              }
            ]
          },
          "working_interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalV2"
            },
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "tuesday"
              }
            ]
          }
        },
        "example": {
          "effective_from": "2021-08-17T13:28:57.801578Z",
          "handover_start_at": "2021-08-17T13:28:57.801578Z",
          "handovers": [
            {
              "interval": 1,
              "interval_type": "daily"
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layers": [
            {
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Layer 1"
            }
          ],
          "name": "My Rotation",
          "users": [
            {
              "email": "bob@example.com",
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "slack_user_id": "USER123"
            }
          ],
          "working_interval": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "tuesday"
            }
          ]
        },
        "required": [
          "name"
        ]
      },
      "ScheduleRotationHandoverV2": {
        "type": "object",
        "properties": {
          "interval": {
            "type": "integer",
            "example": 1,
            "format": "int64"
          },
          "interval_type": {
            "type": "string",
            "example": "daily",
            "enum": [
              "hourly",
              "daily",
              "weekly"
            ]
          }
        },
        "example": {
          "interval": 1,
          "interval_type": "daily"
        }
      },
      "ScheduleRotationUpdatePayloadV2": {
        "type": "object",
        "properties": {
          "effective_from": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "handover_start_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "handovers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationHandoverV2"
            },
            "example": [
              {
                "interval": 1,
                "interval_type": "daily"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the rotation",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleLayerV2"
            },
            "example": [
              {
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Layer 1"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the rotation",
            "example": "My Rotation"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReferencePayloadV1"
            },
            "example": [
              {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              }
            ]
          },
          "working_interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationWorkingIntervalUpdatePayloadV2"
            },
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "tuesday"
              }
            ]
          }
        },
        "example": {
          "effective_from": "2021-08-17T13:28:57.801578Z",
          "handover_start_at": "2021-08-17T13:28:57.801578Z",
          "handovers": [
            {
              "interval": 1,
              "interval_type": "daily"
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layers": [
            {
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Layer 1"
            }
          ],
          "name": "My Rotation",
          "users": [
            {
              "email": "bob@example.com",
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "slack_user_id": "USER123"
            }
          ],
          "working_interval": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "tuesday"
            }
          ]
        }
      },
      "ScheduleRotationV2": {
        "type": "object",
        "properties": {
          "effective_from": {
            "type": "string",
            "description": "When this rotation config will be effective from",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "handover_start_at": {
            "type": "string",
            "description": "Defines the next moment we'll trigger a handover",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "handovers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationHandoverV2"
            },
            "description": "Defines the handover intervals for this rota, in order they should apply",
            "example": [
              {
                "interval": 1,
                "interval_type": "daily"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique internal ID of the rotation",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "layers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleLayerV2"
            },
            "description": "Controls how many people are on-call concurrently",
            "example": [
              {
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Layer 1"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Human readable name synced from external provider",
            "example": "Primary On-Call Schedule"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserV1"
            },
            "example": [
              {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            ]
          },
          "working_interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalV2"
            },
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "tuesday"
              }
            ]
          }
        },
        "example": {
          "effective_from": "2021-08-17T13:28:57.801578Z",
          "handover_start_at": "2021-08-17T13:28:57.801578Z",
          "handovers": [
            {
              "interval": 1,
              "interval_type": "daily"
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layers": [
            {
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Layer 1"
            }
          ],
          "name": "Primary On-Call Schedule",
          "users": [
            {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          ],
          "working_interval": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "tuesday"
            }
          ]
        },
        "required": [
          "id",
          "name",
          "layers",
          "user_ids",
          "working_intervals",
          "handover_start_at",
          "handovers"
        ]
      },
      "ScheduleRotationWorkingIntervalUpdatePayloadV2": {
        "type": "object",
        "properties": {
          "end_time": {
            "type": "string",
            "description": "End time of the interval, in 24hr format",
            "example": "17:00"
          },
          "start_time": {
            "type": "string",
            "description": "Start time of the interval, in 24hr format",
            "example": "09:00"
          },
          "weekday": {
            "type": "string",
            "description": "Weekday this interval applies to",
            "example": "tuesday",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ]
          }
        },
        "example": {
          "end_time": "17:00",
          "start_time": "09:00",
          "weekday": "tuesday"
        }
      },
      "ScheduleUpdatePayloadV2": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that can track metadata about the schedule",
            "example": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "config": {
            "$ref": "#/components/schemas/ScheduleConfigUpdatePayloadV2"
          },
          "name": {
            "type": "string",
            "description": "Name of the schedule",
            "example": "My Schedule"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the schedule",
            "example": "America/Los_Angeles"
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "version-of-terraform"
          },
          "config": {
            "rotations": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "daily"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          },
          "name": "My Schedule",
          "timezone": "America/Los_Angeles"
        }
      },
      "ScheduleV2": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "config": {
            "$ref": "#/components/schemas/ScheduleConfigV2"
          },
          "created_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "current_shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "description": "Shifts that are on-going for this schedule, if a native schedule",
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique internal ID of the schedule",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "name": {
            "type": "string",
            "description": "Human readable name synced from external provider",
            "example": "Primary On-Call Schedule"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the schedule, as interpreted at the point of generating the report",
            "example": "Europe/London"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "config": {
            "rotations": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "daily"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "Primary On-Call Schedule",
                "users": [
                  {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          },
          "created_at": "2021-08-17T13:28:57.801578Z",
          "current_shifts": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Primary On-Call Schedule",
          "timezone": "Europe/London",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "annotations",
          "id",
          "name",
          "timezone",
          "external_provider",
          "external_provider_id",
          "created_at",
          "updated_at"
        ]
      },
      "ScimGroupRoleMappingsUpdatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The type of log entry that this is",
            "example": "scim_group.role_mappings_updated"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogUserSCIMGroupMappingChangedMetadataV2"
          },
          "occurred_at": {
            "type": "string",
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "scim_group"
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "Which version the event is",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "action": "scim_group.role_mappings_updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "after_base_role_slug": "owner",
            "after_custom_role_slugs": "engineering,data",
            "before_base_role_slug": "admin",
            "before_custom_role_slugs": "engineering,security"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "scim_group"
            }
          ],
          "version": 1
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context",
          "metadata"
        ]
      },
      "SeverityV2": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the severity",
            "example": "Issues with **low impact**."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50
          },
          "rank": {
            "type": "integer",
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64"
          },
          "updated_at": {
            "type": "string",
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          }
        },
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Issues with **low impact**.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Minor",
          "rank": 1,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "created_at",
          "updated_at"
        ]
      },
      "ShowEntryResponseBody": {
        "type": "object",
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "Collection of standalone automations like auto-closing incidents.",
                    "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "000020",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "Collection of standalone automations like auto-closing incidents.",
                  "image_url": "https://avatars.slack-edge.com/2021-08-09/2372763167857_6f65d94928b0a0ac590b_192.jpg",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "000020",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "bolt",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entry"
        ]
      },
      "ShowResponseBody": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "example": {
          "action": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "action"
        ]
      },
      "ShowResponseBody10": {
        "type": "object",
        "properties": {
          "incident_timestamp": {
            "$ref": "#/components/schemas/IncidentTimestampV2"
          }
        },
        "example": {
          "incident_timestamp": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Impact started",
            "rank": 1
          }
        },
        "required": [
          "incident_timestamp"
        ]
      },
      "ShowResponseBody11": {
        "type": "object",
        "properties": {
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1"
          }
        },
        "example": {
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "incident_type"
        ]
      },
      "ShowResponseBody12": {
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV1"
          }
        },
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "real",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "status": "triage",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "timestamps": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ],
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public"
          }
        },
        "required": [
          "incident"
        ]
      },
      "ShowResponseBody13": {
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2"
          }
        },
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "required": [
          "incident"
        ]
      },
      "ShowResponseBody14": {
        "type": "object",
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleV2"
          }
        },
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "Primary On-Call Schedule",
                  "users": [
                    {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "created_at": "2021-08-17T13:28:57.801578Z",
            "current_shifts": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "name": "Primary On-Call Schedule",
            "timezone": "Europe/London",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "schedule"
        ]
      },
      "ShowResponseBody15": {
        "type": "object",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV2"
          }
        },
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "severity"
        ]
      },
      "ShowResponseBody16": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserWithRolesV2"
          }
        },
        "example": {
          "user": {
            "base_role": {
              "description": "Elevated permissions for the customer success team.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Customer Success",
              "slug": "customer-success"
            },
            "custom_roles": [
              {
                "description": "Elevated permissions for the customer success team.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Customer Success",
                "slug": "customer-success"
              }
            ],
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "required": [
          "user"
        ]
      },
      "ShowResponseBody2": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionV2"
          }
        },
        "example": {
          "action": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "action"
        ]
      },
      "ShowResponseBody3": {
        "type": "object",
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1"
          }
        },
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "required": [
          "custom_field_option"
        ]
      },
      "ShowResponseBody4": {
        "type": "object",
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1"
          }
        },
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "required_v2": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "custom_field"
        ]
      },
      "ShowResponseBody5": {
        "type": "object",
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV2"
          }
        },
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "custom_field"
        ]
      },
      "ShowResponseBody6": {
        "type": "object",
        "properties": {
          "follow_up": {
            "$ref": "#/components/schemas/FollowUpV2"
          }
        },
        "example": {
          "follow_up": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "priority": {
              "description": "A follow-up that requires immediate attention.",
              "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
              "name": "Urgent",
              "rank": 10
            },
            "status": "outstanding",
            "title": "Cat is stuck in the tree",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "follow_up"
        ]
      },
      "ShowResponseBody7": {
        "type": "object",
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV1"
          }
        },
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": false,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "incident_role"
        ]
      },
      "ShowResponseBody8": {
        "type": "object",
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV2"
          }
        },
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "incident_role"
        ]
      },
      "ShowResponseBody9": {
        "type": "object",
        "properties": {
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          }
        },
        "example": {
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "required": [
          "incident_status"
        ]
      },
      "ShowWorkflowResponseBody": {
        "type": "object",
        "properties": {
          "management_meta": {
            "$ref": "#/components/schemas/ManagementMetaV2"
          },
          "workflow": {
            "$ref": "#/components/schemas/Workflow"
          }
        },
        "example": {
          "management_meta": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "managed_by": "dashboard",
            "source_url": "https://github.com/my-company/infrastructure"
          },
          "workflow": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "continue_on_step_error": true,
            "delay": {
              "conditions_apply_over_delay": false,
              "for_seconds": 60
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "folder": "My folder 01",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "include_private_incidents": true,
            "name": "My workflow",
            "once_for": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -> Affected Team",
                "type": "IncidentSeverity"
              }
            ],
            "runs_from": "2021-08-17T13:28:57.801578Z",
            "runs_on_incident_modes": [
              "standard",
              "retrospective"
            ],
            "runs_on_incidents": "newly_created",
            "state": "active",
            "steps": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "trigger": {
              "label": "Incident Updated",
              "name": "incident.updated"
            },
            "version": 3
          }
        },
        "required": [
          "workflow",
          "management_meta"
        ]
      },
      "StepConfig": {
        "type": "object",
        "properties": {
          "for_each": {
            "type": "string",
            "description": "Reference to the loop variable to run this step over",
            "example": "abc123"
          },
          "id": {
            "type": "string",
            "description": "Unique ID of this step in a workflow",
            "example": "abc123"
          },
          "label": {
            "type": "string",
            "description": "Human readable identifier for this step",
            "example": "PagerDuty Escalate"
          },
          "name": {
            "type": "string",
            "description": "Unique name of the step in the engine",
            "example": "pagerduty.escalate"
          },
          "param_bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingV3"
            },
            "description": "Bindings for the step parameters",
            "example": [
              {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ]
          }
        },
        "example": {
          "for_each": "abc123",
          "id": "abc123",
          "label": "PagerDuty Escalate",
          "name": "pagerduty.escalate",
          "param_bindings": [
            {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ]
        },
        "required": [
          "id",
          "name",
          "label",
          "description",
          "param_bindings",
          "params"
        ]
      },
      "StepConfigPayload": {
        "type": "object",
        "properties": {
          "for_each": {
            "type": "string",
            "description": "Reference to an expression that returns resources to run this step over",
            "example": "abc123"
          },
          "id": {
            "type": "string",
            "description": "Unique ID of this step in a workflow. This must be a valid ULID.",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "description": "Unique name of the step in the engine",
            "example": "pagerduty.escalate"
          },
          "param_bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "description": "List of parameter bindings",
            "example": [
              {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ]
          }
        },
        "example": {
          "for_each": "abc123",
          "id": "abc123",
          "name": "pagerduty.escalate",
          "param_bindings": [
            {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ]
        },
        "required": [
          "id",
          "name",
          "param_bindings",
          "label",
          "description",
          "params"
        ]
      },
      "StepConfigSlim": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable identifier for this step",
            "example": "PagerDuty Escalate"
          },
          "name": {
            "type": "string",
            "description": "Unique name of the step in the engine",
            "example": "pagerduty.escalate"
          }
        },
        "example": {
          "label": "PagerDuty Escalate",
          "name": "pagerduty.escalate"
        },
        "required": [
          "name",
          "label",
          "description",
          "params"
        ]
      },
      "TriggerSlim": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable identifier for this trigger",
            "example": "Incident Updated"
          },
          "name": {
            "type": "string",
            "description": "Unique name of the trigger",
            "example": "incident.updated"
          }
        },
        "example": {
          "label": "Incident Updated",
          "name": "incident.updated"
        },
        "required": [
          "name",
          "label"
        ]
      },
      "UpdateEntryRequestBody": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abc123"
            },
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ]
          },
          "attribute_values": {
            "type": "object",
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            }
          },
          "external_id": {
            "type": "string",
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33"
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call"
          },
          "rank": {
            "type": "integer",
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32"
          }
        },
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "required": [
          "name",
          "attribute_values"
        ]
      },
      "UpdateRequestBody": {
        "type": "object",
        "properties": {
          "sort_key": {
            "type": "integer",
            "description": "Sort key used to order the custom field options correctly",
            "default": 1000,
            "example": 10,
            "format": "int64"
          },
          "value": {
            "type": "string",
            "description": "Human readable name for the custom field option",
            "example": "Product"
          }
        },
        "example": {
          "sort_key": 10,
          "value": "Product"
        },
        "required": [
          "value",
          "custom_field_id",
          "sort_key"
        ]
      },
      "UpdateRequestBody2": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          },
          "required": {
            "type": "string",
            "description": "When this custom field must be set during the incident lifecycle. [DEPRECATED: please use required_v2 instead].",
            "example": "never",
            "enum": [
              "never",
              "before_closure",
              "always"
            ]
          },
          "required_v2": {
            "type": "string",
            "description": "When this custom field must be set during the incident lifecycle.",
            "example": "never",
            "enum": [
              "never",
              "before_resolution",
              "always"
            ]
          },
          "show_before_closure": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident resolve modal. If this custom field is required before resolution, but no value has been set for it, the field will be shown in the resolve modal whatever the value of this setting.",
            "example": true
          },
          "show_before_creation": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true
          },
          "show_before_update": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true
          },
          "show_in_announcement_post": {
            "type": "boolean",
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true
          }
        },
        "example": {
          "description": "Which team is impacted by this issue",
          "name": "Affected Team",
          "required": "never",
          "required_v2": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true
        },
        "required": [
          "name",
          "description",
          "field_type",
          "show_before_creation",
          "show_before_closure",
          "show_before_update",
          "options",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateRequestBody3": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue"
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50
          }
        },
        "example": {
          "description": "Which team is impacted by this issue",
          "name": "Affected Team"
        },
        "required": [
          "name",
          "description",
          "field_type",
          "cannot_be_unset",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateRequestBody4": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1
          },
          "instructions": {
            "type": "string",
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1
          },
          "required": {
            "type": "boolean",
            "description": "DEPRECATED: this will always be false.",
            "example": false
          },
          "shortform": {
            "type": "string",
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "minLength": 1
          }
        },
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "shortform": "lead"
        },
        "required": [
          "condition_groups",
          "name",
          "description",
          "instructions",
          "shortform",
          "role_type",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateRequestBody5": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1
          },
          "instructions": {
            "type": "string",
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities"
          },
          "name": {
            "type": "string",
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1
          },
          "shortform": {
            "type": "string",
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "minLength": 1
          }
        },
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "shortform": "lead"
        },
        "required": [
          "condition_groups",
          "name",
          "description",
          "instructions",
          "shortform",
          "role_type",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateRequestBody6": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident."
          },
          "name": {
            "type": "string",
            "description": "Unique name of this status",
            "example": "Closed"
          }
        },
        "example": {
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "name": "Closed"
        },
        "required": [
          "name",
          "description",
          "rank",
          "category",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateRequestBody7": {
        "type": "object",
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleUpdatePayloadV2"
          }
        },
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "My Rotation",
                  "users": [
                    {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "name": "My Schedule",
            "timezone": "America/Los_Angeles"
          }
        },
        "required": [
          "schedule",
          "annotations",
          "name",
          "timezone",
          "external_provider",
          "external_provider_id",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateTypeRequestBody": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "issue-tracker",
              "enum": [
                "customer",
                "issue-tracker",
                "product-features",
                "service",
                "on-call",
                "team",
                "user"
              ]
            },
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ]
          },
          "color": {
            "type": "string",
            "description": "Sets the display color of this type in the dashboard",
            "example": "yellow",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ]
          },
          "description": {
            "type": "string",
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE."
          },
          "icon": {
            "type": "string",
            "description": "Sets the display icon of this type in the dashboard",
            "example": "bolt",
            "enum": [
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster"
          },
          "ranked": {
            "type": "boolean",
            "description": "If this type should be ranked",
            "example": true
          },
          "source_repo_url": {
            "type": "string",
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog"
          }
        },
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "bolt",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "source_repo_url": "https://github.com/my-company/incident-io-catalog"
        },
        "required": [
          "name",
          "description"
        ]
      },
      "UpdateTypeSchemaRequestBody": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePayloadV2"
            },
            "example": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ]
          },
          "version": {
            "type": "integer",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "attributes": [
            {
              "array": false,
              "backlink_attribute": "abc123",
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "manual",
              "name": "tier",
              "path": [
                {
                  "attribute_id": "abc123"
                }
              ],
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "required": [
          "attributes",
          "version",
          "name",
          "description",
          "type_name",
          "semantic_type",
          "ranked",
          "schema",
          "icon",
          "categories",
          "color",
          "is_editable",
          "annotations",
          "created_at",
          "updated_at",
          "engine_resource_type",
          "mode",
          "use_name_as_identifier"
        ]
      },
      "UpdateWorkflowRequestBody": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "object",
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "additionalProperties": {
              "type": "string",
              "example": "abc123"
            }
          },
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "description": "List of conditions to apply to the workflow",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ]
          },
          "continue_on_step_error": {
            "type": "boolean",
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelay"
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "description": "The expressions used in the workflow",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ]
          },
          "folder": {
            "type": "string",
            "description": "Folder to display the workflow in",
            "example": "My folder 01"
          },
          "include_private_incidents": {
            "type": "boolean",
            "description": "Whether to include private incidents",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "The human-readable name of the workflow",
            "example": "My workflow"
          },
          "once_for": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "incident.url"
            },
            "description": "Once For strategy to apply to this workflow",
            "example": [
              "incident.url"
            ]
          },
          "runs_on_incident_modes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "test",
              "enum": [
                "standard",
                "test",
                "retrospective"
              ]
            },
            "description": "Which modes of incident this should run on (defaults to just standard incidents)",
            "example": [
              "standard",
              "retrospective"
            ]
          },
          "runs_on_incidents": {
            "type": "string",
            "description": "Which incidents should the workflow be applied to? (newly_created or newly_created_and_active)",
            "example": "newly_created",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ]
          },
          "state": {
            "type": "string",
            "description": "The state of the workflow (e.g. is it draft, or disabled)",
            "example": "active",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepConfigPayload"
            },
            "description": "List of step to execute as part of the workflow",
            "example": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          }
        },
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "include_private_incidents": true,
          "name": "My workflow",
          "once_for": [
            "incident.url"
          ],
          "runs_on_incident_modes": [
            "standard",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "state": "active",
          "steps": [
            {
              "for_each": "abc123",
              "id": "abc123",
              "name": "pagerduty.escalate",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ]
        },
        "required": [
          "name",
          "once_for",
          "condition_groups",
          "steps",
          "expressions",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents"
        ]
      },
      "UserReferencePayloadV1": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The user's email address, matching the email on their Slack account",
            "example": "bob@example.com"
          },
          "id": {
            "type": "string",
            "description": "The incident.io ID of a user",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH"
          },
          "slack_user_id": {
            "type": "string",
            "description": "The ID of the user's Slack account.",
            "example": "USER123"
          }
        },
        "example": {
          "email": "bob@example.com",
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "slack_user_id": "USER123"
        }
      },
      "UserRoleMembershipsUpdatedV1ResponseBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The type of log entry that this is",
            "example": "user.role_memberships_updated"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogUserRoleMembershipChangedMetadataV2"
          },
          "occurred_at": {
            "type": "string",
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ]
          },
          "version": {
            "type": "integer",
            "description": "Which version the event is",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "action": "user.role_memberships_updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "after_base_role_slug": "owner",
            "after_custom_role_slugs": "engineering,data",
            "before_base_role_slug": "admin",
            "before_custom_role_slugs": "engineering,security"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context",
          "metadata"
        ]
      },
      "UserV1": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the user.",
            "example": "lisa@incident.io"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis"
          },
          "role": {
            "type": "string",
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "example": "viewer",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ]
          },
          "slack_user_id": {
            "type": "string",
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM"
          }
        },
        "example": {
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "required": [
          "role",
          "id",
          "slack_role",
          "name",
          "deprecated_base_role",
          "organisation_id"
        ]
      },
      "UserWithRolesV2": {
        "type": "object",
        "properties": {
          "base_role": {
            "$ref": "#/components/schemas/RBACRoleV2"
          },
          "custom_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RBACRoleV2"
            },
            "example": [
              {
                "description": "Elevated permissions for the customer success team.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Customer Success",
                "slug": "customer-success"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Email address of the user.",
            "example": "lisa@incident.io"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "name": {
            "type": "string",
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis"
          },
          "role": {
            "type": "string",
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "example": "viewer",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ]
          },
          "slack_user_id": {
            "type": "string",
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM"
          }
        },
        "example": {
          "base_role": {
            "description": "Elevated permissions for the customer success team.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Customer Success",
            "slug": "customer-success"
          },
          "custom_roles": [
            {
              "description": "Elevated permissions for the customer success team.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Customer Success",
              "slug": "customer-success"
            }
          ],
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "required": [
          "base_role",
          "custom_roles",
          "role",
          "id",
          "slack_role",
          "name",
          "deprecated_base_role",
          "organisation_id"
        ]
      },
      "WebhookIncidentUserV2": {
        "type": "object",
        "properties": {
          "actor_user_id": {
            "type": "string",
            "description": "The ID of the user who performed this action. If the action was not taken by a user, for example it was taken by a Workflow, this will be empty.",
            "example": "abc123"
          },
          "incident_id": {
            "type": "string",
            "description": "The ID of the incident",
            "example": "abc123"
          },
          "user_id": {
            "type": "string",
            "description": "The ID of the user",
            "example": "abc123"
          }
        },
        "example": {
          "actor_user_id": "abc123",
          "incident_id": "abc123",
          "user_id": "abc123"
        },
        "required": [
          "incident_id",
          "user_id"
        ]
      },
      "WebhookIncidentV2": {
        "type": "object",
        "properties": {
          "call_url": {
            "type": "string",
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo"
          },
          "created_at": {
            "type": "string",
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV2"
          },
          "custom_field_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV1"
            },
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ]
          },
          "duration_metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentDurationMetricWithValueV2"
            },
            "description": "Incident duration metrics and their measurements for this incident",
            "example": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ]
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV2"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91"
          },
          "incident_role_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV1"
            },
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ]
          },
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          },
          "incident_timestamp_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampWithValueV2"
            },
            "description": "Incident lifecycle events and when they occurred",
            "example": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ]
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1"
          },
          "mode": {
            "type": "string",
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "example": "standard",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ]
          },
          "name": {
            "type": "string",
            "description": "Explanation of the incident",
            "example": "Our database is sad"
          },
          "permalink": {
            "type": "string",
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123"
          },
          "postmortem_document_url": {
            "type": "string",
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id"
          },
          "reference": {
            "type": "string",
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123"
          },
          "related_incidents": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abc123"
            },
            "description": "Incident IDs of incidents related to this incident",
            "example": [
              "INC-237"
            ]
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "slack_channel_id": {
            "type": "string",
            "description": "ID of the Slack channel in the organisation Slack workspace. Note that the channel is sometimes created asynchronously, so may not be present when the incident is just created.",
            "example": "C02AW36C1M5"
          },
          "slack_channel_name": {
            "type": "string",
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot"
          },
          "slack_team_id": {
            "type": "string",
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J"
          },
          "summary": {
            "type": "string",
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet."
          },
          "updated_at": {
            "type": "string",
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "visibility": {
            "type": "string",
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/en/articles/5947963-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "example": "public",
            "enum": [
              "public",
              "private"
            ]
          },
          "workload_minutes_late": {
            "type": "number",
            "description": "Amount of time spent on the incident in late hours",
            "example": 40.7,
            "format": "double"
          },
          "workload_minutes_sleeping": {
            "type": "number",
            "description": "Amount of time spent on the incident in sleeping hours",
            "example": 0,
            "format": "double"
          },
          "workload_minutes_total": {
            "type": "number",
            "description": "Amount of time spent on the incident in total",
            "example": 60.7,
            "format": "double"
          },
          "workload_minutes_working": {
            "type": "number",
            "description": "Amount of time spent on the incident in working hours",
            "example": 20,
            "format": "double"
          }
        },
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "duration_metrics": [
            {
              "duration_metric": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Lasted"
              },
              "value_seconds": 1
            }
          ],
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "incident_timestamp_values": [
            {
              "incident_timestamp": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              },
              "value": {
                "value": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "standard",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "related_incidents": [
            "INC-237"
          ],
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public",
          "workload_minutes_late": 40.7,
          "workload_minutes_sleeping": 0,
          "workload_minutes_total": 60.7,
          "workload_minutes_working": 20
        },
        "required": [
          "incident_status",
          "id",
          "external_id",
          "reference",
          "name",
          "idempotency_key",
          "did_opt_out_of_post_incident_flow",
          "visibility",
          "mode",
          "organisation_id",
          "creator",
          "last_activity_at",
          "incident_role_assignments",
          "custom_field_entries",
          "slack_team_id",
          "slack_channel_id",
          "created_at",
          "updated_at",
          "reported_at"
        ]
      },
      "WebhookPrivateResourceV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the resource",
            "example": "abc123"
          }
        },
        "example": {
          "id": "abc123"
        },
        "required": [
          "id"
        ]
      },
      "WeekdayIntervalConfigV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this set of working intervals",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "description": "A human readable label for this set of working intervals",
            "example": "abc123"
          },
          "timezone": {
            "type": "string",
            "description": "How to interpret all the intervals",
            "example": "abc123"
          },
          "weekday_intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalV2"
            },
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "abc123"
              }
            ]
          }
        },
        "example": {
          "id": "abc123",
          "name": "abc123",
          "timezone": "abc123",
          "weekday_intervals": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "abc123"
            }
          ]
        },
        "required": [
          "id",
          "name",
          "timezone",
          "weekday_intervals"
        ]
      },
      "WeekdayIntervalV2": {
        "type": "object",
        "properties": {
          "end_time": {
            "type": "string",
            "description": "End time of the interval, in 24hr format",
            "example": "17:00"
          },
          "start_time": {
            "type": "string",
            "description": "Start time of the interval, in 24hr format",
            "example": "09:00"
          },
          "weekday": {
            "type": "string",
            "description": "Weekday this interval applies to",
            "example": "abc123"
          }
        },
        "example": {
          "end_time": "17:00",
          "start_time": "09:00",
          "weekday": "abc123"
        },
        "required": [
          "weekday",
          "start_time",
          "end_time"
        ]
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "description": "Conditions that apply to the workflow trigger",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "continue_on_step_error": {
            "type": "boolean",
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelay"
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionV2"
            },
            "description": "Expressions that make variables available in the scope",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ]
          },
          "folder": {
            "type": "string",
            "description": "Folder to display the workflow in",
            "example": "My folder 01"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the workflow",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "include_private_incidents": {
            "type": "boolean",
            "description": "Whether to include private incidents",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "The human-readable name of the workflow",
            "example": "My workflow"
          },
          "once_for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineReferenceV2"
            },
            "description": "This workflow will run 'once for' a list of references",
            "example": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -> Affected Team",
                "type": "IncidentSeverity"
              }
            ]
          },
          "runs_from": {
            "type": "string",
            "description": "The time from which this workflow will run on incidents",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "runs_on_incident_modes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "test",
              "enum": [
                "standard",
                "test",
                "retrospective"
              ]
            },
            "description": "Which modes of incident this should run on (defaults to just standard incidents)",
            "example": [
              "standard",
              "retrospective"
            ]
          },
          "runs_on_incidents": {
            "type": "string",
            "description": "Which incidents should the workflow be applied to? (newly_created or newly_created_and_active)",
            "example": "newly_created",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ]
          },
          "state": {
            "type": "string",
            "description": "The state of the workflow (e.g. is it draft, or disabled)",
            "example": "active",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepConfig"
            },
            "description": "Steps that are executed as part of the workflow",
            "example": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "trigger": {
            "$ref": "#/components/schemas/TriggerSlim"
          },
          "version": {
            "type": "integer",
            "description": "Revision of the workflow, uniquely identifying its version",
            "example": 3,
            "format": "int64"
          }
        },
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "1235",
                    "reference_label": "Teams"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  },
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                }
              ],
              "reference": "abc123",
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              },
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "include_private_incidents": true,
          "name": "My workflow",
          "once_for": [
            {
              "array": false,
              "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
              "label": "Incident -> Affected Team",
              "type": "IncidentSeverity"
            }
          ],
          "runs_from": "2021-08-17T13:28:57.801578Z",
          "runs_on_incident_modes": [
            "standard",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "state": "active",
          "steps": [
            {
              "for_each": "abc123",
              "id": "abc123",
              "label": "PagerDuty Escalate",
              "name": "pagerduty.escalate",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "trigger": {
            "label": "Incident Updated",
            "name": "incident.updated"
          },
          "version": 3
        },
        "required": [
          "id",
          "name",
          "trigger",
          "version",
          "expressions",
          "condition_groups",
          "steps",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents",
          "once_for",
          "state"
        ]
      },
      "WorkflowDelay": {
        "type": "object",
        "properties": {
          "conditions_apply_over_delay": {
            "type": "boolean",
            "description": "If this workflow is delayed, whether the conditions should be rechecked between trigger firing and execution",
            "example": false
          },
          "for_seconds": {
            "type": "integer",
            "description": "Delay in seconds between trigger firing and running the workflow",
            "example": 60,
            "format": "int64"
          }
        },
        "example": {
          "conditions_apply_over_delay": false,
          "for_seconds": 60
        },
        "required": [
          "for_seconds",
          "conditions_apply_over_delay"
        ]
      },
      "WorkflowSlim": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "description": "Conditions that apply to the workflow trigger",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "continue_on_step_error": {
            "type": "boolean",
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelay"
          },
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionV2"
            },
            "description": "Expressions that make variables available in the scope",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ]
          },
          "folder": {
            "type": "string",
            "description": "Folder to display the workflow in",
            "example": "My folder 01"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the workflow",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "include_private_incidents": {
            "type": "boolean",
            "description": "Whether to include private incidents",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "The human-readable name of the workflow",
            "example": "My workflow"
          },
          "once_for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineReferenceV2"
            },
            "description": "This workflow will run 'once for' a list of references",
            "example": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -> Affected Team",
                "type": "IncidentSeverity"
              }
            ]
          },
          "runs_from": {
            "type": "string",
            "description": "The time from which this workflow will run on incidents",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time"
          },
          "runs_on_incident_modes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "test",
              "enum": [
                "standard",
                "test",
                "retrospective"
              ]
            },
            "description": "Which modes of incident this should run on (defaults to just standard incidents)",
            "example": [
              "standard",
              "retrospective"
            ]
          },
          "runs_on_incidents": {
            "type": "string",
            "description": "Which incidents should the workflow be applied to? (newly_created or newly_created_and_active)",
            "example": "newly_created",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ]
          },
          "state": {
            "type": "string",
            "description": "The state of the workflow (e.g. is it draft, or disabled)",
            "example": "active",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepConfigSlim"
            },
            "description": "Steps that are executed as part of the workflow",
            "example": [
              {
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate"
              }
            ]
          },
          "trigger": {
            "$ref": "#/components/schemas/TriggerSlim"
          },
          "version": {
            "type": "integer",
            "description": "Revision of the workflow, uniquely identifying its version",
            "example": 3,
            "format": "int64"
          }
        },
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "1235",
                    "reference_label": "Teams"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  },
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                }
              ],
              "reference": "abc123",
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              },
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "include_private_incidents": true,
          "name": "My workflow",
          "once_for": [
            {
              "array": false,
              "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
              "label": "Incident -> Affected Team",
              "type": "IncidentSeverity"
            }
          ],
          "runs_from": "2021-08-17T13:28:57.801578Z",
          "runs_on_incident_modes": [
            "standard",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "state": "active",
          "steps": [
            {
              "label": "PagerDuty Escalate",
              "name": "pagerduty.escalate"
            }
          ],
          "trigger": {
            "label": "Incident Updated",
            "name": "incident.updated"
          },
          "version": 3
        },
        "required": [
          "id",
          "name",
          "trigger",
          "version",
          "expressions",
          "condition_groups",
          "steps",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents",
          "once_for",
          "state"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Actions V1",
      "description": "Manage incident actions.\n\nThese endpoints have been deprecated in favour of Actions V2 and Follow-ups V2, as these\nconcepts have become increasingly separate.\n\nIncidents have two types of actions associated to them:\n\n- Actions, used during an incident response as ephemeral todo lists\n- Follow-ups, actions which are for after the incident and can be exported to external\n\tissue trackers\n\nYou can manage actions in the incident Slack channel with <code>/incident actions</code>, or on\nthe incident homepage.\n\nExporting follow-ups to external issue trackers can be done in the incident homepage.\n"
    },
    {
      "name": "Actions V2",
      "description": "Manage incident actions.\n\nIncident actions are used during an incident, to track work such as 'restart the database' or 'contact the customer'.\n\nYou can manage actions in the incident Slack channel with <code>/incident actions</code>, or on\nthe incident homepage.\n"
    },
    {
      "name": "Alert Events V2",
      "description": "Create alerts within incident.io.\n\nThe alerts API allows you to create alerts within incident.io by posting alert events. You\ncan use alerts to automatically trigger incidents.\n\nTo create an alert, you must first configure an alert source in the incident.io dashboard.\n"
    },
    {
      "name": "Catalog V2",
      "description": "Manage and browse catalog resources.\n\nUse the incident.io catalog to track services, teams, product features and anything\nelse that helps build a map of your organisation. These different categories of thing\nbecome catalog types, and each instance (like a particular service or team) is a\ncatalog entry.\n\nEach type is made up of a series of attributes, and each attribute has a type. Types\ncan even have attributes that refer to other catalog types.\n\nWe automatically create catalog types when you connect an integration, such as GitHub \nrepositories or PagerDuty services and teams. You can use this API to create custom\ntypes, that are specifically tailored to your organisation.\n\nExamples might be a 'Service' type with an 'Alert channel' which you can point at a \nSlack channel, or 'Team' which specifies its 'Manager' and 'Technical Lead' as Slack\nusers. You can then use these types to create powerful new workflows.\n\nConsider using our official [catalog importer](https://github.com/incident-io/catalog-importer).\nIt can be used to sync catalog data from sources like local files or GitHub and push \nthem into the incident.io catalog without having to directly interact with our public API.\n"
    },
    {
      "name": "Custom Field Options V1",
      "description": "Manage custom field options.\n\nSingle- and multi-select custom fields have a list of all available options,\nwhich have a value, and a sort key. The value must be unique to the custom\nfield. For example, you might have an Incident Type custom field, with options\n\"Data breach\", \"Performance degradation\", \"API downtime\", etc."
    },
    {
      "name": "Custom Fields V1",
      "description": "Manage custom fields.\n\nCustom fields are used to attach metadata to incidents, which you can use when searching\nfor incidents in the dashboard, triggering workflows, building announcement rules or for\nyour own data needs.\n\nEach field has a type:\n\n- Single-select, single value selected from a predefined list of options (e.g. Detection Method)\n- Multi-select, as above but you can pick more than one option (e.g. Affected Teams)\n- Text, freeform text field (e.g. Customer ID)\n- Link, link URL that is synced to Slack bookmarks on the incident channel (e.g. External Status Page)\n- Number, integer or fractional numbers (e.g. # Customers Affected)\n\nWe may add more custom field types in the future - we'd love to hear any other types you'd like to use!\n"
    },
    {
      "name": "Custom Fields V2",
      "description": "Manage custom fields.\n\nCustom fields are used to attach metadata to incidents, which you can use when searching\nfor incidents in the dashboard, triggering workflows, building announcement rules or for\nyour own data needs.\n\nEach field has a type:\n\n- Single-select, single value selected from a predefined list of options (e.g. Detection Method)\n- Multi-select, as above but you can pick more than one option (e.g. Affected Teams)\n- Text, freeform text field (e.g. Customer ID)\n- Link, link URL that is synced to Slack bookmarks on the incident channel (e.g. External Status Page)\n- Number, integer or fractional numbers (e.g. # Customers Affected)\n\nSingle-select and multi-select fields can also be powered by the Catalog. This will mean a field has a\ncatalog_type_id, which links it to the catalog type that it references.\n\nWe may add more custom field types in the future - we'd love to hear any other types you'd like to use!\n"
    },
    {
      "name": "Escalations V2",
      "description": "Create and manage escalations.\n\nWith incident.io On-call you can create escalation paths that describe how a page should\nbe escalated to people and schedules, and create escalations that will execute those\npaths.\n"
    },
    {
      "name": "Follow-ups V2",
      "description": "Manage incident follow-ups.\n\nIncidents can have follow-ups associated with them, which track work that should be done\nafter an incident (e.g. improving some documentation, or upgrading a dependency). They can\nalso be exported to external issue trackers.\n\nYou can manage follow-ups in the incident Slack channel with <code>/incident follow-ups</code>, or on\nthe incident homepage.\n"
    },
    {
      "name": "Incident Attachments V1",
      "description": "Create, list and delete incident attachments.\n\nIncident Attachments allows you to connect resources from external systems into incidents.\nExamples include: PagerDuty incidents and GitHub pull requests.\n"
    },
    {
      "name": "Incident Memberships V1",
      "description": "Manage private incident memberships"
    },
    {
      "name": "Incident Roles V1",
      "description": "Manage incident roles.\n\nDuring an incident, you can assign responders to one of the incident roles that are\nconfigured in your organisation settings.\n\nEvery organisation will have a special 'lead' role, which signifies the incident lead or\ncommander. This role cannot be deleted, but can be renamed in the incident.io dashboard.\n"
    },
    {
      "name": "Incident Roles V2",
      "description": "Manage incident roles.\n\nDuring an incident, you can assign responders to one of the incident roles that are\nconfigured in your organisation settings.\n\nEvery organisation will have a special 'lead' role, which signifies the incident lead or\ncommander. This role cannot be deleted, but can be renamed in the incident.io dashboard.\n"
    },
    {
      "name": "Incident Statuses V1",
      "description": "Manage incident statuses.\n\nEach incident has a status, picked from one of the statuses configured in your\norganisations settings.\n\nStatuses help communicate where an incident is in its lifecycle. You can use\nstatuses when filtering incidents in the dashboard, and in workflows and announcement\nrules.\n"
    },
    {
      "name": "Incident Timestamps V2",
      "description": "View incident timestamps.\n\nEach incident has a number of timestamps; some being defaults that we set on\neach incident for you, and other being configured for your organisation within\nsettings.\n\nTimestamps help to communicate when a given action was taken for a specific\nincident, for example when it was reported, closed or fixed.\n"
    },
    {
      "name": "Incident Types V1",
      "description": "View incident types.\n\nWith incident types enabled, you can tailor your process to the situation you're\nresponding to with different custom fields and roles for each incident type.\n"
    },
    {
      "name": "Incident Updates V2",
      "description": "List incident updates.\n\nIncident Updates allows you to see all the updates that have been shared against a\nparticular incident. This will include any time that the Severity or Status of\nan incident changed, alongside any additional updates that were provided.\n"
    },
    {
      "name": "Incidents V1",
      "description": "Create and read incidents.\n\nIncidents are a core resource, on which many other resources (actions, etc) are created.\n\nCare should be taken around these endpoints, as automation that creates duplicate\nincidents can be distracting, and impact reporting.\n"
    },
    {
      "name": "Incidents V2",
      "description": "Create and read incidents.\n\nIncidents are a core resource, on which many other resources (actions, etc) are created.\n\nCare should be taken around these endpoints, as automation that creates duplicate\nincidents can be distracting, and impact reporting.\n"
    },
    {
      "name": "Managed Resources V2",
      "description": "Manage how resources are managed.\n\nAllows callers to set whether a resource is being managed externally, and where the source configuration is.\n"
    },
    {
      "name": "Schedules V2",
      "description": "Beta: \nView and manage schedules.\nManage your full schedule of on-call rotations, including the users and rotation configuration.\n"
    },
    {
      "name": "Severities V1",
      "description": "Manage incident severities.\n\nEach incident has a severity, picked from one of the severities configured in your\norganisations settings.\n\nSeverities help categorise incidents, and communicate urgency/impact. You can use\nseverities when filtering incidents in the dashboard, and in workflows and announcement\nrules.\n"
    },
    {
      "name": "Users V2",
      "description": "View users.\n\nUsers all have a single base role, and can be assigned multiple custom roles. They can be managed via your Slack workspace or SAML provider.\n"
    },
    {
      "name": "Utilities V1",
      "description": "Miscelaneous utility endpoints.\n\nCollection of utility functions that can help build integrations against this API.\n"
    },
    {
      "name": "Webhooks",
      "description": "Webhooks can be used to receive notifications when certain events occur in incident.io. This might be useful for annotating graphs in a monitoring tool with incidents, or keeping track of follow-ups in another system. Our webhooks are powered by <a href=\"https://svix.com\" target=\"_blank\">Svix</a>.\n\n## Getting started with webhooks\n\nTo start using webhooks, you’ll need to create a webhook endpoint. You can do this in the same way that you’d create any other endpoint in your application. If you’d like to play around with our webhooks, we’d recommend using <a href=\"https://www.svix.com/play/\" target=\"_blank\">Svix play</a> which allows you to set up an endpoint and inspect the payloads via their web interface. There are also other services (e.g. <a href=\"https://ngrok.com/\" target=\"_blank\">ngrok</a>) which have great debugging tools to help getting started with webhooks.\n\nOnce you have a webhook endpoint set up, you can head to <a href=\"https://app.incident.io/settings/webhooks\" target=\"_blank\">Settings > Webhooks</a> to configure your endpoint. In here you'll be able to choose which types of events you'd like to recieve, send test events, see recent event deliveries, and retry any failed events.\n\n## Status codes, errors and retries\n\nWhen processing webhooks, please return a 2xx status code (e.g. `200 OK` or `204 No Content`). If the endpoint returns a non-2xx status code, we’ll try to resend the event with a backoff over the next 24 hours. If attempts to a specific endpoint repeatedly fail over a 5 day period, we’ll mark the endpoint as disabled and notify you via email. If you do miss some messages (e.g. due to unexpected downtime), Svix offer a number of options for [replaying messages](https://docs.svix.com/receiving/using-app-portal/replaying-messages) which you can access via <a href=\"https://app.incident.io/settings/webhooks\" target=\"_blank\">Settings > Webhooks</a>.\n\n## Verifying webhooks\n\nIt’s important to know whether a webhook has come from incident.io, or a third party that might be trying to exploit a vulnerability. To avoid this, we send a `signature` in the header of our webhooks, which you can verify using the `Signing secret` from the webhook endpoint settings page. The webhooks we send will have three headers that you’ll want to look at:\n\n```json\n{\n  \"webhook-id\": \"123\",\n  \"webhook-timestamp\": 1676033031,\n  \"webhook-signature\": \"v1,g0hM9SsE+OTPJTGt/tmIKtSyZlE3uFJELVlNIOLJ1OE=\"\n}\n```\n\nThese are signed using a HMAC signature in the following format:\n\n```\n${webhook-id}.${webhook-timestamp}.${request_body}\n```\n\nYou can verify the signature either using the <a href=\"https://docs.svix.com/receiving/verifying-payloads/how\" target=\"_blank\">Svix client libraries</a>, or manually by following <a href=\"https://docs.svix.com/receiving/verifying-payloads/how-manual\" target=\"_blank\">these instructions</a>.\n\n## Keeping another system in-line with incident.io\n\nA common use-case for webhooks is to keep another system up-to-date with everything that’s happening in incident.io. As we deliver webhooks individually over HTTPS, we cannot guarantee that they’ll be delivered in the correct order. That means that, to keep the other system up-to-date, we’d recommend that you build an application which:\n\n- Receives a webhook about INC-123\n- Makes a request to our public API to get the latest state of INC-123\n- Save that state to your system\n\nThis means you aren’t relying on the order in which you receive webhooks to make sure your system remains up-to-date.\n\n## Webhooks on private incidents\n\nIn general, we try to send webhooks with all the relevant information in the payload (e.g. the name, summary, status etc.). However, private incidents are the exception. For private incidents, we only send the ID of the resource that’s been changed. If your integration needs to access the full data, you’ll need to <a href=\"https://help.incident.io/en/articles/6149651-our-api\" target=\"_blank\">create an API Key</a> that can view private incidents. You can then use that key to get the details about the specific incident or follow-up. This is to make sure we don’t leak information about private incidents to a system that shouldn’t have access to them.\n"
    },
    {
      "name": "Workflows V2",
      "description": "Manage workflows.\n\nWorkflows allow you to automate certain actions and behaviors based on specific triggers."
    },
    {
      "name": "Audit logs",
      "description": "To give you visibility over the changes that are made within your incident.io account, we use an audit log. Our audit log is powered by <a href=\"https://workos.com\" target=\"_blank\">WorkOS</a>. The log is available for customers on our [Enterprise plan](https://incident.io/pricing).\n\nThe audit log contains information about any configuration changes, as well as changes to a user's permissions (e.g. being given a new role, or access to a private incident).\n\nEach entry will have an actor (the person or system that made the change) and one or more targets (a thing that was modified by this change). It will also include the Location and User Agent of the actor, where applicable.\n\nEach entry will conform to a schema, which is documented here. Each entry also has a version, so that if our schema changes over time you’ll still be able to parse old events.\n\nWe’ll retain these entries for one year.\n\nAudit log entries start from 18 April, 2023 (there are no entries available from before that date).\n\n## Viewing your audit log\n\nYou can view your audit log via our [security settings](https://app.incident.io/settings/security) page.\n\nFrom there, you'll be able to:\n\n- View the entries via a web interface (filterable by target, event type, actor and date)\n- Export the entries for a given time period to a CSV\n- Set up a log stream to a provider of your choice (e.g. Splunk or an Amazon S3 bucket)\n\n## Understanding actors\n\nEach entry will have an actor associated with it, which is one of 5 types:\n\n### Users\n\nThis is for changes triggered by the actions of a particular user in your account.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"user\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Kelsey Mills\",\n    \"metadata\": {\n      \"user_base_role_slug\": \"admin\",\n      \"user_custom_role_slugs\": \"engineering,security\"\n    }\n  }\n```\n\n### API Keys\n\nThis is for changes triggered by an API key.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"api_key\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Lisa's development key\",\n    \"metadata\": {\n      \"api_key_roles\": \"incident_creator,global_access\"\n    }\n  }\n```\n\n### Integrations\n\nThis is for changes triggered by a system. Sometimes that will be a third party system (e.g. a user might be created\nvia Slack) or sometimes it might be something triggered from inside incident.io (e.g. a severity created as part of setup).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"system\",\n    \"id\": \"incident_setup\",\n    \"name\": \"incident.io (setup)\",\n    \"metadata\": {}\n  }\n```\n\n### Workflows\n\nThis is for changes triggered by a workflow: for example, a workflow that invites users to a private incident.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"workflow\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Auto-invite security team to private incidents\",\n    \"metadata\": {}\n  }\n```\n\n### External resources\n\nThis is for changes triggered by a specific [external resource](https://api-docs.incident.io/tag/Incident-Attachments-V1) (also known as an attachment).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"external_resource\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"#1234 Increased API latency\",\n    \"metadata\": {\n      \"external_resource_type\": \"pager_duty_incident\",\n      \"external_resource_external_id\": \"q1234\"\n    }\n  }\n```\n"
    }
  ],
  "x-webhooks": {
    "/x-webhooks/private_incident.action_created_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentActionCreatedV1",
        "description": "This webhook is emitted whenever a follow-up for a private incident is created.",
        "operationId": "Webhooks#PrivateIncidentActionCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentActionCreatedV1ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.action_created_v1",
                  "private_incident.action_created_v1": {
                    "id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.action_updated_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentActionUpdatedV1",
        "description": "This webhook is emitted whenever a follow-up for a private incident is updated.",
        "operationId": "Webhooks#PrivateIncidentActionUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentActionUpdatedV1ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.action_updated_v1",
                  "private_incident.action_updated_v1": {
                    "id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.follow_up_created_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentFollowUpCreatedV1",
        "description": "This webhook is emitted whenever a follow-up for a private incident is created.",
        "operationId": "Webhooks#PrivateIncidentFollowUpCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentFollowUpCreatedV1ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.follow_up_created_v1",
                  "private_incident.follow_up_created_v1": {
                    "id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.follow_up_updated_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentFollowUpUpdatedV1",
        "description": "This webhook is emitted whenever a follow-up for a private incident is updated.",
        "operationId": "Webhooks#PrivateIncidentFollowUpUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentFollowUpUpdatedV1ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.follow_up_updated_v1",
                  "private_incident.follow_up_updated_v1": {
                    "id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.incident_created_v2": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentIncidentCreatedV2",
        "description": "This webhook is emitted whenever a new private incident is created.",
        "operationId": "Webhooks#PrivateIncidentIncidentCreatedV2",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentIncidentCreatedV2ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.incident_created_v2",
                  "private_incident.incident_created_v2": {
                    "id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.incident_updated_v2": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentIncidentUpdatedV2",
        "description": "This webhook is emitted whenever a private incident is updated.",
        "operationId": "Webhooks#PrivateIncidentIncidentUpdatedV2",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentIncidentUpdatedV2ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.incident_updated_v2",
                  "private_incident.incident_updated_v2": {
                    "id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.membership_granted_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentMembershipGrantedV1",
        "description": "This webhook is emitted whenever a user is given access to a private incident.",
        "operationId": "Webhooks#PrivateIncidentMembershipGrantedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentMembershipGrantedV1ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.membership_granted_v1",
                  "private_incident.membership_granted_v1": {
                    "actor_user_id": "abc123",
                    "incident_id": "abc123",
                    "user_id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/private_incident.membership_revoked_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PrivateIncidentMembershipRevokedV1",
        "description": "This webhook is emitted whenever a user's access to a private incident is revoked.",
        "operationId": "Webhooks#PrivateIncidentMembershipRevokedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentMembershipRevokedV1ResponseBody"
                },
                "example": {
                  "event_type": "private_incident.membership_revoked_v1",
                  "private_incident.membership_revoked_v1": {
                    "actor_user_id": "abc123",
                    "incident_id": "abc123",
                    "user_id": "abc123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.action_created_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentActionCreatedV1",
        "description": "This webhook is emitted whenever a follow-up is created.",
        "operationId": "Webhooks#PublicIncidentActionCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentActionCreatedV1ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.action_created_v1",
                  "public_incident.action_created_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.action_updated_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentActionUpdatedV1",
        "description": "This webhook is emitted whenever a follow-up is updated.",
        "operationId": "Webhooks#PublicIncidentActionUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentActionUpdatedV1ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.action_updated_v1",
                  "public_incident.action_updated_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.follow_up_created_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentFollowUpCreatedV1",
        "description": "This webhook is emitted whenever a follow-up is created.",
        "operationId": "Webhooks#PublicIncidentFollowUpCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentFollowUpCreatedV1ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.follow_up_created_v1",
                  "public_incident.follow_up_created_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.follow_up_updated_v1": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentFollowUpUpdatedV1",
        "description": "This webhook is emitted whenever a follow-up is updated.",
        "operationId": "Webhooks#PublicIncidentFollowUpUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentFollowUpUpdatedV1ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.follow_up_updated_v1",
                  "public_incident.follow_up_updated_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.incident_created_v2": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentIncidentCreatedV2",
        "description": "This webhook is emitted whenever a new incident is created.",
        "operationId": "Webhooks#PublicIncidentIncidentCreatedV2",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentIncidentCreatedV2ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.incident_created_v2",
                  "public_incident.incident_created_v2": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "related_incidents": [
                      "INC-237"
                    ],
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.incident_status_updated_v2": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentIncidentStatusUpdatedV2",
        "description": "This webhook is emitted whenever an incident's status changes.",
        "operationId": "Webhooks#PublicIncidentIncidentStatusUpdatedV2",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentIncidentStatusUpdatedV2ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.incident_status_updated_v2",
                  "public_incident.incident_status_updated_v2": {
                    "incident": {
                      "call_url": "https://zoom.us/foo",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "creator": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      },
                      "custom_field_entries": [
                        {
                          "custom_field": {
                            "description": "Which team is impacted by this issue",
                            "field_type": "single_select",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Affected Team",
                            "options": [
                              {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              }
                            ]
                          },
                          "values": [
                            {
                              "value_catalog_entry": {
                                "aliases": [
                                  "lawrence@incident.io",
                                  "lawrence"
                                ],
                                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Primary On-call"
                              },
                              "value_link": "https://google.com/",
                              "value_numeric": "123.456",
                              "value_option": {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              },
                              "value_text": "This is my text field, I hope you like it"
                            }
                          ]
                        }
                      ],
                      "duration_metrics": [
                        {
                          "duration_metric": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Lasted"
                          },
                          "value_seconds": 1
                        }
                      ],
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                      "incident_role_assignments": [
                        {
                          "assignee": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          },
                          "role": {
                            "created_at": "2021-08-17T13:28:57.801578Z",
                            "description": "The person currently coordinating the incident",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                            "name": "Incident Lead",
                            "required": false,
                            "role_type": "lead",
                            "shortform": "lead",
                            "updated_at": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_status": {
                        "category": "triage",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                        "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                        "name": "Closed",
                        "rank": 4,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "incident_timestamp_values": [
                        {
                          "incident_timestamp": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Impact started",
                            "rank": 1
                          },
                          "value": {
                            "value": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_type": {
                        "create_in_triage": "always",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Customer facing production outages",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "is_default": false,
                        "name": "Production Outage",
                        "private_incidents_only": false,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "mode": "standard",
                      "name": "Our database is sad",
                      "permalink": "https://app.incident.io/incidents/123",
                      "postmortem_document_url": "https://docs.google.com/my_doc_id",
                      "reference": "INC-123",
                      "severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "slack_channel_id": "C02AW36C1M5",
                      "slack_channel_name": "inc-165-green-parrot",
                      "slack_team_id": "T02A1FSLE8J",
                      "summary": "Our database is really really sad, and we don't know why yet.",
                      "updated_at": "2021-08-17T13:28:57.801578Z",
                      "visibility": "public",
                      "workload_minutes_late": 40.7,
                      "workload_minutes_sleeping": 0,
                      "workload_minutes_total": 60.7,
                      "workload_minutes_working": 20
                    },
                    "new_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "previous_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-webhooks/public_incident.incident_updated_v2": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "PublicIncidentIncidentUpdatedV2",
        "description": "This webhook is emitted whenever an incident is updated.",
        "operationId": "Webhooks#PublicIncidentIncidentUpdatedV2",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentIncidentUpdatedV2ResponseBody"
                },
                "example": {
                  "event_type": "public_incident.incident_updated_v2",
                  "public_incident.incident_updated_v2": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "related_incidents": [
                      "INC-237"
                    ],
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_route.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertRouteCreatedV1",
        "description": "This entry is created whenever an alert route is created",
        "operationId": "Audit logs#AlertRouteCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_route.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Production incidents",
                      "type": "alert_route"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_route.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertRouteDeletedV1",
        "description": "This entry is created whenever an alert route is deleted",
        "operationId": "Audit logs#AlertRouteDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_route.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Production incidents",
                      "type": "alert_route"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_route.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertRouteUpdatedV1",
        "description": "This entry is created whenever an alert route is updated",
        "operationId": "Audit logs#AlertRouteUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_route.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Production incidents",
                      "type": "alert_route"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_schema.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertSchemaUpdatedV1",
        "description": "This entry is created whenever alert attributes are updated",
        "operationId": "Audit logs#AlertSchemaUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_schema.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Alert schema",
                      "type": "alert_schema"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_source_config.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertSourceConfigCreatedV1",
        "description": "This entry is created whenever an alert source is created",
        "operationId": "Audit logs#AlertSourceConfigCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_source_config.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Datadog alerts",
                      "type": "alert_source"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_source_config.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertSourceConfigDeletedV1",
        "description": "This entry is created whenever an alert source is deleted",
        "operationId": "Audit logs#AlertSourceConfigDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_source_config.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Datadog alerts",
                      "type": "alert_source"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/alert_source_config.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AlertSourceConfigUpdatedV1",
        "description": "This entry is created whenever an alert source is updated",
        "operationId": "Audit logs#AlertSourceConfigUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "alert_source_config.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Datadog alerts",
                      "type": "alert_source"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/announcement_rule.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AnnouncementRuleCreatedV1",
        "description": "This entry is created whenever a announcement rule is created",
        "operationId": "Audit logs#AnnouncementRuleCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "announcement_rule.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#engineering",
                      "type": "announcement_rule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/announcement_rule.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AnnouncementRuleDeletedV1",
        "description": "This entry is created whenever a announcement rule is deleted",
        "operationId": "Audit logs#AnnouncementRuleDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "announcement_rule.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#engineering",
                      "type": "announcement_rule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/announcement_rule.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "AnnouncementRuleUpdatedV1",
        "description": "This entry is created whenever a announcement rule is updated",
        "operationId": "Audit logs#AnnouncementRuleUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "announcement_rule.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#engineering",
                      "type": "announcement_rule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/api_key.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "ApiKeyCreatedV1",
        "description": "This entry is created whenever a api key is created",
        "operationId": "Audit logs#ApiKeyCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "api_key.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Development API Key",
                      "type": "api_key"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/api_key.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "ApiKeyDeletedV1",
        "description": "This entry is created whenever a api key is deleted",
        "operationId": "Audit logs#ApiKeyDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "api_key.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Development API Key",
                      "type": "api_key"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/catalog_type.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "CatalogTypeCreatedV1",
        "description": "This entry is created whenever a catalog type is created",
        "operationId": "Audit logs#CatalogTypeCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "catalog_type.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Service",
                      "type": "catalog_type"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/catalog_type.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "CatalogTypeDeletedV1",
        "description": "This entry is created whenever a catalog type is deleted",
        "operationId": "Audit logs#CatalogTypeDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "catalog_type.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Service",
                      "type": "catalog_type"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/catalog_type.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "CatalogTypeUpdatedV1",
        "description": "This entry is created whenever a catalog type is updated",
        "operationId": "Audit logs#CatalogTypeUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "catalog_type.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Service",
                      "type": "catalog_type"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/custom_field.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "CustomFieldCreatedV1",
        "description": "This entry is created whenever a custom field is created",
        "operationId": "Audit logs#CustomFieldCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "custom_field.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected teams",
                      "type": "custom_field"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/custom_field.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "CustomFieldDeletedV1",
        "description": "This entry is created whenever a custom field is deleted",
        "operationId": "Audit logs#CustomFieldDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "custom_field.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected teams",
                      "type": "custom_field"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/custom_field.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "CustomFieldUpdatedV1",
        "description": "This entry is created whenever a custom field is updated",
        "operationId": "Audit logs#CustomFieldUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "custom_field.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected teams",
                      "type": "custom_field"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/debrief_invite_rule.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "DebriefInviteRuleCreatedV1",
        "description": "This entry is created whenever a debrief invite rule is created",
        "operationId": "Audit logs#DebriefInviteRuleCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "debrief_invite_rule.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Invite founders for critical incidents",
                      "type": "debrief_invite_rule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/debrief_invite_rule.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "DebriefInviteRuleDeletedV1",
        "description": "This entry is created whenever a debrief invite rule is deleted",
        "operationId": "Audit logs#DebriefInviteRuleDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "debrief_invite_rule.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Invite founders for critical incidents",
                      "type": "debrief_invite_rule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/debrief_invite_rule.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "DebriefInviteRuleUpdatedV1",
        "description": "This entry is created whenever a debrief invite rule is updated",
        "operationId": "Audit logs#DebriefInviteRuleUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "debrief_invite_rule.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Invite founders for critical incidents",
                      "type": "debrief_invite_rule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/escalation_path.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "EscalationPathCreatedV1",
        "description": "This entry is created whenever an escalation path is created",
        "operationId": "Audit logs#EscalationPathCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "escalation_path.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Critical incidents",
                      "type": "escalation_path"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/escalation_path.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "EscalationPathDeletedV1",
        "description": "This entry is created whenever an escalation path is deleted",
        "operationId": "Audit logs#EscalationPathDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "escalation_path.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Critical incidents",
                      "type": "escalation_path"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/escalation_path.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "EscalationPathUpdatedV1",
        "description": "This entry is created whenever an escalation path is updated",
        "operationId": "Audit logs#EscalationPathUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "escalation_path.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Critical incidents",
                      "type": "escalation_path"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/follow_up_priority.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "FollowUpPriorityCreatedV1",
        "description": "This entry is created whenever a follow up priority is created",
        "operationId": "Audit logs#FollowUpPriorityCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "follow_up_priority.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Low",
                      "type": "follow_up_priority"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/follow_up_priority.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "FollowUpPriorityDeletedV1",
        "description": "This entry is created whenever a follow up priority is deleted",
        "operationId": "Audit logs#FollowUpPriorityDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "follow_up_priority.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Low",
                      "type": "follow_up_priority"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/follow_up_priority.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "FollowUpPriorityUpdatedV1",
        "description": "This entry is created whenever a follow up priority is updated",
        "operationId": "Audit logs#FollowUpPriorityUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "follow_up_priority.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Low",
                      "type": "follow_up_priority"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_duration_metric.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentDurationMetricCreatedV1",
        "description": "This entry is created whenever a incident duration metric is created",
        "operationId": "Audit logs#IncidentDurationMetricCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_duration_metric.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Time to resolve",
                      "type": "incident_duration_metric"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_duration_metric.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentDurationMetricDeletedV1",
        "description": "This entry is created whenever a incident duration metric is deleted",
        "operationId": "Audit logs#IncidentDurationMetricDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_duration_metric.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Time to resolve",
                      "type": "incident_duration_metric"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_duration_metric.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentDurationMetricUpdatedV1",
        "description": "This entry is created whenever a incident duration metric is updated",
        "operationId": "Audit logs#IncidentDurationMetricUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_duration_metric.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Time to resolve",
                      "type": "incident_duration_metric"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_role.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentRoleCreatedV1",
        "description": "This entry is created whenever a incident role is created",
        "operationId": "Audit logs#IncidentRoleCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_role.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Communications Lead",
                      "type": "incident_role"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_role.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentRoleDeletedV1",
        "description": "This entry is created whenever a incident role is deleted",
        "operationId": "Audit logs#IncidentRoleDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_role.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Communications Lead",
                      "type": "incident_role"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_role.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentRoleUpdatedV1",
        "description": "This entry is created whenever a incident role is updated",
        "operationId": "Audit logs#IncidentRoleUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_role.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Communications Lead",
                      "type": "incident_role"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_status.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentStatusCreatedV1",
        "description": "This entry is created whenever a incident status is created",
        "operationId": "Audit logs#IncidentStatusCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_status.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "incident_status"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_status.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentStatusDeletedV1",
        "description": "This entry is created whenever a incident status is deleted",
        "operationId": "Audit logs#IncidentStatusDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_status.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "incident_status"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_status.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentStatusUpdatedV1",
        "description": "This entry is created whenever a incident status is updated",
        "operationId": "Audit logs#IncidentStatusUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_status.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "incident_status"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_timestamp.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentTimestampCreatedV1",
        "description": "This entry is created whenever a incident timestamp is created",
        "operationId": "Audit logs#IncidentTimestampCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_timestamp.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Fixed at",
                      "type": "incident_timestamp"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_timestamp.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentTimestampDeletedV1",
        "description": "This entry is created whenever a incident timestamp is deleted",
        "operationId": "Audit logs#IncidentTimestampDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_timestamp.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Fixed at",
                      "type": "incident_timestamp"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_timestamp.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentTimestampUpdatedV1",
        "description": "This entry is created whenever a incident timestamp is updated",
        "operationId": "Audit logs#IncidentTimestampUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_timestamp.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Fixed at",
                      "type": "incident_timestamp"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_type.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentTypeCreatedV1",
        "description": "This entry is created whenever a incident type is created",
        "operationId": "Audit logs#IncidentTypeCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_type.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "incident_type"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_type.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentTypeDeletedV1",
        "description": "This entry is created whenever a incident type is deleted",
        "operationId": "Audit logs#IncidentTypeDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_type.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "incident_type"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/incident_type.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IncidentTypeUpdatedV1",
        "description": "This entry is created whenever a incident type is updated",
        "operationId": "Audit logs#IncidentTypeUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "incident_type.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "incident_type"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/integration.installed.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IntegrationInstalledV1",
        "description": "This entry is created whenever an integration is installed",
        "operationId": "Audit logs#IntegrationInstalledV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "integration.installed",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "github",
                      "name": "Github",
                      "type": "integration"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/integration.uninstalled.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "IntegrationUninstalledV1",
        "description": "This entry is created whenever an integration is uninstalled",
        "operationId": "Audit logs#IntegrationUninstalledV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "integration.uninstalled",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "github",
                      "name": "Github",
                      "type": "integration"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/internal_status_page.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "InternalStatusPageCreatedV1",
        "description": "This entry is created whenever an internal status page is created",
        "operationId": "Audit logs#InternalStatusPageCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "internal_status_page.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "internal_status_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/internal_status_page.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "InternalStatusPageDeletedV1",
        "description": "This entry is created whenever an internal status page is deleted",
        "operationId": "Audit logs#InternalStatusPageDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "internal_status_page.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "internal_status_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/internal_status_page.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "InternalStatusPageUpdatedV1",
        "description": "This entry is created whenever an internal status page has its configuration updated",
        "operationId": "Audit logs#InternalStatusPageUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "internal_status_page.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "internal_status_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/nudge.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "NudgeCreatedV1",
        "description": "This entry is created whenever a nudge is created",
        "operationId": "Audit logs#NudgeCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "nudge.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Reminder to take a break",
                      "type": "nudge"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/nudge.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "NudgeDeletedV1",
        "description": "This entry is created whenever a nudge is deleted",
        "operationId": "Audit logs#NudgeDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "nudge.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Reminder to take a break",
                      "type": "nudge"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/nudge.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "NudgeUpdatedV1",
        "description": "This entry is created whenever a nudge is updated",
        "operationId": "Audit logs#NudgeUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "nudge.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Reminder to take a break",
                      "type": "nudge"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/policy.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PolicyCreatedV1",
        "description": "This entry is created whenever a policy is created",
        "operationId": "Audit logs#PolicyCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "policy.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Follow-ups must be closed within 3 weeks",
                      "type": "policy"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/policy.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PolicyDeletedV1",
        "description": "This entry is created whenever a policy is deleted",
        "operationId": "Audit logs#PolicyDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "policy.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Follow-ups must be closed within 3 weeks",
                      "type": "policy"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/policy.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PolicyUpdatedV1",
        "description": "This entry is created whenever a policy is updated",
        "operationId": "Audit logs#PolicyUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "policy.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Follow-ups must be closed within 3 weeks",
                      "type": "policy"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/post_incident_task.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PostIncidentTaskCreatedV1",
        "description": "This entry is created whenever a post-incident task is created",
        "operationId": "Audit logs#PostIncidentTaskCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "post_incident_task.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/post_incident_task.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PostIncidentTaskDeletedV1",
        "description": "This entry is created whenever a post-incident task is deleted",
        "operationId": "Audit logs#PostIncidentTaskDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "post_incident_task.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/post_incident_task.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PostIncidentTaskUpdatedV1",
        "description": "This entry is created whenever a post-incident task is updated",
        "operationId": "Audit logs#PostIncidentTaskUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "post_incident_task.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/private_incident.access_attempted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PrivateIncidentAccessAttemptedV1",
        "description": "This entry is created whenever someone attempts to access a private incident.",
        "operationId": "Audit logs#PrivateIncidentAccessAttemptedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentAccessAttemptedV1ResponseBody"
                },
                "example": {
                  "action": "private_incident.access_attempted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "metadata": {
                    "outcome": "granted"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/private_incident.access_requested.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PrivateIncidentAccessRequestedV1",
        "description": "This entry is created whenever someone requests access to a private incident.",
        "operationId": "Audit logs#PrivateIncidentAccessRequestedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "private_incident.access_requested",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/private_incident_membership.granted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PrivateIncidentMembershipGrantedV1",
        "description": "This entry is created whenever someone is granted access to a private incident. If they have the 'manage private incidents' permission, then it'll appear that the system has given them access to the incident.",
        "operationId": "Audit logs#PrivateIncidentMembershipGrantedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "private_incident_membership.granted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    },
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/private_incident_membership.revoked.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "PrivateIncidentMembershipRevokedV1",
        "description": "This entry is created whenever someone's access to a private incident is revoked.",
        "operationId": "Audit logs#PrivateIncidentMembershipRevokedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "private_incident_membership.revoked",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    },
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/rbac_role.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "RbacRoleCreatedV1",
        "description": "This entry is created whenever a rbac role is created",
        "operationId": "Audit logs#RbacRoleCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "rbac_role.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Engineering",
                      "type": "rbac_role"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/rbac_role.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "RbacRoleDeletedV1",
        "description": "This entry is created whenever a rbac role is deleted",
        "operationId": "Audit logs#RbacRoleDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "rbac_role.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Engineering",
                      "type": "rbac_role"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/rbac_role.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "RbacRoleUpdatedV1",
        "description": "This entry is created whenever a rbac role is updated",
        "operationId": "Audit logs#RbacRoleUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "rbac_role.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Engineering",
                      "type": "rbac_role"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/schedule.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "ScheduleCreatedV1",
        "description": "This entry is created whenever a schedule is created",
        "operationId": "Audit logs#ScheduleCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "schedule.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "On-call",
                      "type": "schedule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/schedule.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "ScheduleDeletedV1",
        "description": "This entry is created whenever a schedule is deleted",
        "operationId": "Audit logs#ScheduleDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "schedule.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "On-call",
                      "type": "schedule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/schedule.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "ScheduleUpdatedV1",
        "description": "This entry is created whenever a schedule is updated",
        "operationId": "Audit logs#ScheduleUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "schedule.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "On-call",
                      "type": "schedule"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/scim_group.role_mappings_updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "ScimGroupRoleMappingsUpdatedV1",
        "description": "This entry is created whenever a SCIM group is mapped to a new RBAC role",
        "operationId": "Audit logs#ScimGroupRoleMappingsUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimGroupRoleMappingsUpdatedV1ResponseBody"
                },
                "example": {
                  "action": "scim_group.role_mappings_updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "metadata": {
                    "after_base_role_slug": "owner",
                    "after_custom_role_slugs": "engineering,data",
                    "before_base_role_slug": "admin",
                    "before_custom_role_slugs": "engineering,security"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "scim_group"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/severity.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "SeverityCreatedV1",
        "description": "This entry is created whenever a severity is created",
        "operationId": "Audit logs#SeverityCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "severity.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "type": "severity"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/severity.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "SeverityDeletedV1",
        "description": "This entry is created whenever a severity is deleted",
        "operationId": "Audit logs#SeverityDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "severity.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "type": "severity"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/severity.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "SeverityUpdatedV1",
        "description": "This entry is created whenever a severity is updated",
        "operationId": "Audit logs#SeverityUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "severity.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "type": "severity"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageCreatedV1",
        "description": "This entry is created whenever a status page is created",
        "operationId": "Audit logs#StatusPageCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "status_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageDeletedV1",
        "description": "This entry is created whenever a status page is deleted",
        "operationId": "Audit logs#StatusPageDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "status_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageUpdatedV1",
        "description": "This entry is created whenever a status page has its configuration updated",
        "operationId": "Audit logs#StatusPageUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "status_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page_sub_page.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageSubPageCreatedV1",
        "description": "This entry is created whenever a status page sub-page is created",
        "operationId": "Audit logs#StatusPageSubPageCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page_sub_page.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Superpayments France",
                      "type": "status_page_sub_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page_sub_page.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageSubPageDeletedV1",
        "description": "This entry is created whenever a status page sub-page is deleted",
        "operationId": "Audit logs#StatusPageSubPageDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page_sub_page.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Superpayments France",
                      "type": "status_page_sub_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page_sub_page.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageSubPageUpdatedV1",
        "description": "This entry is created whenever a status page sub-page has its configuration updated",
        "operationId": "Audit logs#StatusPageSubPageUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page_sub_page.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Superpayments France",
                      "type": "status_page_sub_page"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page_template.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageTemplateCreatedV1",
        "description": "This entry is created whenever a status page template is created",
        "operationId": "Audit logs#StatusPageTemplateCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page_template.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "status_page_template"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page_template.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageTemplateDeletedV1",
        "description": "This entry is created whenever a status page template is deleted",
        "operationId": "Audit logs#StatusPageTemplateDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page_template.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "status_page_template"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/status_page_template.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "StatusPageTemplateUpdatedV1",
        "description": "This entry is created whenever a status page template is updated",
        "operationId": "Audit logs#StatusPageTemplateUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "status_page_template.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "status_page_template"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/user.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "UserCreatedV1",
        "description": "This entry is created whenever a user is created",
        "operationId": "Audit logs#UserCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "user.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/user.deactivated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "UserDeactivatedV1",
        "description": "This entry is created whenever a user is deactivated",
        "operationId": "Audit logs#UserDeactivatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "user.deactivated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/user.reinstated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "UserReinstatedV1",
        "description": "This entry is created when a user is reinstated after being deactivated",
        "operationId": "Audit logs#UserReinstatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "user.reinstated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/user.role_memberships_updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "UserRoleMembershipsUpdatedV1",
        "description": "This entry is created whenever a user's role memberships are changed.",
        "operationId": "Audit logs#UserRoleMembershipsUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleMembershipsUpdatedV1ResponseBody"
                },
                "example": {
                  "action": "user.role_memberships_updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "metadata": {
                    "after_base_role_slug": "owner",
                    "after_custom_role_slugs": "engineering,data",
                    "before_base_role_slug": "admin",
                    "before_custom_role_slugs": "engineering,security"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/user.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "UserUpdatedV1",
        "description": "This entry is created whenever a user is updated",
        "operationId": "Audit logs#UserUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "user.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/workflow.created.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "WorkflowCreatedV1",
        "description": "This entry is created whenever a workflow is created",
        "operationId": "Audit logs#WorkflowCreatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "workflow.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Nudge to write a postmortem",
                      "type": "workflow"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/workflow.deleted.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "WorkflowDeletedV1",
        "description": "This entry is created whenever a workflow is deleted",
        "operationId": "Audit logs#WorkflowDeletedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "workflow.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Nudge to write a postmortem",
                      "type": "workflow"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    },
    "/x-audit-logs/workflow.updated.1": {
      "get": {
        "tags": [
          "Audit logs"
        ],
        "summary": "WorkflowUpdatedV1",
        "description": "This entry is created whenever a workflow is updated",
        "operationId": "Audit logs#WorkflowUpdatedV1",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreatedV1ResponseBody"
                },
                "example": {
                  "action": "workflow.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Nudge to write a postmortem",
                      "type": "workflow"
                    }
                  ],
                  "version": 1
                }
              }
            }
          }
        }
      }
    }
  }
}