{
  "components": {
    "schemas": {
      "APIKeyV1": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "My test API key"
        },
        "properties": {
          "id": {
            "description": "Unique identifier for this API key",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of the API key, for the user's reference",
            "example": "My test API key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "roles",
          "created_by"
        ],
        "type": "object"
      },
      "APIKeyV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "My test API key"
        },
        "properties": {
          "id": {
            "description": "Unique identifier for this API key",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of the API key, for the user's reference",
            "example": "My test API key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "roles",
          "created_by"
        ],
        "type": "object"
      },
      "ActionV1": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "follow_up": true,
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "status": "outstanding",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1"
          },
          "completed_at": {
            "description": "When the action was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the action",
            "example": "Call the fire brigade",
            "type": "string"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV1"
          },
          "follow_up": {
            "description": "Whether an action is marked as follow-up",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident the action belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "status": {
            "description": "Status of the action",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ],
            "example": "outstanding",
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "incident_id",
          "status",
          "follow_up",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "ActionV2": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "status": "outstanding",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV2"
          },
          "completed_at": {
            "description": "When the action was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the action",
            "example": "Call the fire brigade",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident the action belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "status": {
            "description": "Status of the action",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ],
            "example": "outstanding",
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "incident_id",
          "description",
          "status",
          "created_at",
          "updated_at",
          "organisation_id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ActionsListResultV1": {
        "example": {
          "actions": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "follow_up": true,
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "status": "outstanding",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "actions": {
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "follow_up": true,
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "status": "outstanding",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ActionV1"
            },
            "type": "array"
          }
        },
        "required": [
          "actions"
        ],
        "type": "object"
      },
      "ActionsListResultV2": {
        "example": {
          "actions": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "status": "outstanding",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "actions": {
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "status": "outstanding",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ActionV2"
            },
            "type": "array"
          }
        },
        "required": [
          "actions"
        ],
        "type": "object"
      },
      "ActionsShowResultV1": {
        "example": {
          "action": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "required": [
          "action"
        ],
        "type": "object"
      },
      "ActionsShowResultV2": {
        "example": {
          "action": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionV2"
          }
        },
        "required": [
          "action"
        ],
        "type": "object"
      },
      "ActorV1": {
        "example": {
          "api_key": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "My test API key"
          },
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/APIKeyV1"
          },
          "user": {
            "$ref": "#/components/schemas/UserV1"
          }
        },
        "type": "object"
      },
      "ActorV2": {
        "example": {
          "api_key": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "My test API key"
          },
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/APIKeyV2"
          },
          "user": {
            "$ref": "#/components/schemas/UserV2"
          }
        },
        "type": "object"
      },
      "AfterPaginationMetaResultV2": {
        "example": {
          "after": "abc123",
          "after_url": "abc123"
        },
        "properties": {
          "after": {
            "description": "The time, if it exists, of the last entry's end time",
            "example": "abc123",
            "type": "string"
          },
          "after_url": {
            "description": "The URL to fetch the next page of entries",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "after",
          "after_url"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertAttributeV2": {
        "example": {
          "array": false,
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "name": "service",
          "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "service",
            "type": "string"
          },
          "type": {
            "description": "Engine resource name for this attribute",
            "example": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertAttributesCreatePayloadV2": {
        "example": {
          "array": false,
          "name": "service",
          "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "service",
            "type": "string"
          },
          "type": {
            "description": "Engine resource name for this attribute",
            "example": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "array"
        ],
        "type": "object"
      },
      "AlertAttributesCreateResultV2": {
        "example": {
          "alert_attribute": {
            "array": false,
            "id": "01GW2G3V0S59R238FAHPDS1R66",
            "name": "service",
            "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
          }
        },
        "properties": {
          "alert_attribute": {
            "$ref": "#/components/schemas/AlertAttributeV2"
          }
        },
        "required": [
          "alert_attribute"
        ],
        "type": "object"
      },
      "AlertAttributesListResultV2": {
        "example": {
          "alert_attributes": [
            {
              "array": false,
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "name": "service",
              "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
            }
          ]
        },
        "properties": {
          "alert_attributes": {
            "example": [
              {
                "array": false,
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "name": "service",
                "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertAttributeV2"
            },
            "type": "array"
          }
        },
        "required": [
          "alert_attributes"
        ],
        "type": "object"
      },
      "AlertAttributesShowResultV2": {
        "example": {
          "alert_attribute": {
            "array": false,
            "id": "01GW2G3V0S59R238FAHPDS1R66",
            "name": "service",
            "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
          }
        },
        "properties": {
          "alert_attribute": {
            "$ref": "#/components/schemas/AlertAttributeV2"
          }
        },
        "required": [
          "alert_attribute"
        ],
        "type": "object"
      },
      "AlertAttributesUpdatePayloadV2": {
        "example": {
          "array": false,
          "name": "service",
          "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "service",
            "type": "string"
          },
          "type": {
            "description": "Engine resource name for this attribute",
            "example": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "array"
        ],
        "type": "object"
      },
      "AlertAttributesUpdateResultV2": {
        "example": {
          "alert_attribute": {
            "array": false,
            "id": "01GW2G3V0S59R238FAHPDS1R66",
            "name": "service",
            "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
          }
        },
        "properties": {
          "alert_attribute": {
            "$ref": "#/components/schemas/AlertAttributeV2"
          }
        },
        "required": [
          "alert_attribute"
        ],
        "type": "object"
      },
      "AlertResult": {
        "example": {
          "deduplication_key": "unique-key",
          "message": "Event accepted for processing",
          "status": "success"
        },
        "properties": {
          "deduplication_key": {
            "description": "The deduplication key that the event has been processed with",
            "example": "unique-key",
            "type": "string"
          },
          "message": {
            "description": "Human readable message giving detail about the event",
            "example": "Event accepted for processing",
            "type": "string"
          },
          "status": {
            "description": "Status of the event",
            "example": "success",
            "type": "string"
          }
        },
        "required": [
          "status",
          "message",
          "deduplication_key"
        ],
        "type": "object"
      },
      "AlertRouteAlertSourcePayloadV2": {
        "example": {
          "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ]
        },
        "properties": {
          "alert_source_id": {
            "description": "The alert source ID that will match for the route",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "condition_groups": {
            "description": "What conditions should alerts from this source meet to be included in this alert route?",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "alert_source_id",
          "condition_groups"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertRouteEscalationBindingPayloadV2": {
        "example": {
          "binding": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "binding": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "required": [
          "binding"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertRouteEscalationBindingV2": {
        "example": {
          "binding": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "binding": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          }
        },
        "required": [
          "binding"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertRouteIncidentTemplatePayloadV2": {
        "example": {
          "custom_field_priorities": {
            "abc123": "abc123"
          },
          "custom_fields": {
            "custom_field_10014": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "incident_mode": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "incident_type": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "name": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "priority_severity": "severity-first-wins",
          "severity": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "start_in_triage": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "summary": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "workspace": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "custom_field_priorities": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "lookup of the priority options for each custom field in the template",
            "example": {
              "abc123": "abc123"
            },
            "type": "object"
          },
          "custom_fields": {
            "additionalProperties": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "description": "Custom field keys mapped to values",
            "example": {
              "custom_field_10014": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "type": "object"
          },
          "incident_mode": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          },
          "incident_type": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          },
          "name": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          },
          "priority_severity": {
            "description": "option defining whether to cause subsequent alerts to increase the severity",
            "enum": [
              "severity-first-wins",
              "severity-max"
            ],
            "example": "severity-first-wins",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          },
          "start_in_triage": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          },
          "summary": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          },
          "workspace": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "required": [
          "custom_field_priorities",
          "priority_severity"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertRouteIncidentTemplateV2": {
        "example": {
          "custom_field_priorities": {
            "abc123": "first-wins"
          },
          "custom_fields": {
            "custom_field_10014": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "incident_mode": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "incident_type": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "name": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "priority_severity": "severity-first-wins",
          "severity": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "summary": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          },
          "workspace": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "custom_field_priorities": {
            "additionalProperties": {
              "enum": [
                "first-wins",
                "last-wins",
                "append"
              ],
              "example": "first-wins",
              "type": "string"
            },
            "description": "lookup of the priority options for each custom field in the template",
            "example": {
              "abc123": "first-wins"
            },
            "type": "object"
          },
          "custom_fields": {
            "additionalProperties": {
              "$ref": "#/components/schemas/EngineParamBindingV2"
            },
            "description": "Custom field keys mapped to values",
            "example": {
              "custom_field_10014": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "type": "object"
          },
          "incident_mode": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          },
          "incident_type": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          },
          "name": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          },
          "priority_severity": {
            "description": "binding to use to resolve the workspace to create an incident in",
            "enum": [
              "severity-first-wins",
              "severity-max"
            ],
            "example": "severity-first-wins",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          },
          "summary": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          },
          "workspace": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          }
        },
        "required": [
          "custom_field_priorities",
          "priority_severity"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertRouteV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "defer_time_seconds": 1,
          "escalation_bindings": [
            {
              "binding": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "1235",
                    "reference_label": "Teams"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  },
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                }
              ],
              "reference": "abc123",
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              },
              "root_reference": "incident.status"
            }
          ],
          "grouping_keys": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0"
            }
          ],
          "grouping_window_seconds": 1,
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Production incidents",
          "template": {
            "custom_field_priorities": {
              "abc123": "first-wins"
            },
            "custom_fields": {
              "custom_field_10014": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "incident_mode": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "incident_type": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "name": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "priority_severity": "severity-first-wins",
            "severity": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "summary": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "workspace": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          }
        },
        "properties": {
          "condition_groups": {
            "description": "What condition groups must be true for this alert route to fire?",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "type": "array"
          },
          "defer_time_seconds": {
            "description": "How long should the escalation defer time be?",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "escalation_bindings": {
            "description": "Which escalation paths should this alert route escalate to?",
            "example": [
              {
                "binding": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertRouteEscalationBindingV2"
            },
            "type": "array"
          },
          "expressions": {
            "description": "The expressions used in this template",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionV2"
            },
            "type": "array"
          },
          "grouping_keys": {
            "description": "Which attributes should this alert route use to group alerts?",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/GroupingKeyV2"
            },
            "type": "array"
          },
          "grouping_window_seconds": {
            "description": "How large should the grouping window be?",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for this alert route config",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of this alert route config, for the user's reference",
            "example": "Production incidents",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/AlertRouteIncidentTemplateV2"
          }
        },
        "required": [
          "id",
          "name",
          "condition_groups",
          "grouping_keys",
          "grouping_window_seconds",
          "defer_time_seconds",
          "escalation_bindings",
          "auto_decline_enabled",
          "enabled",
          "incident_enabled",
          "is_private",
          "incident_condition_groups",
          "alert_sources",
          "auto_cancel_escalations"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertRoutesCreatePayloadV2": {
        "example": {
          "alert_sources": [
            {
              "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ]
                }
              ]
            }
          ],
          "auto_decline_enabled": false,
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "defer_time_seconds": 1,
          "enabled": false,
          "escalation_bindings": [
            {
              "binding": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "grouping_keys": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0"
            }
          ],
          "grouping_window_seconds": 1,
          "incident_condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "incident_enabled": false,
          "name": "Production incidents",
          "template": {
            "custom_field_priorities": {
              "abc123": "abc123"
            },
            "custom_fields": {
              "custom_field_10014": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "incident_mode": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "incident_type": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "name": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "priority_severity": "severity-first-wins",
            "severity": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "start_in_triage": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "summary": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "workspace": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          }
        },
        "properties": {
          "alert_sources": {
            "description": "Which alert sources should this alert route match?",
            "example": [
              {
                "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertRouteAlertSourcePayloadV2"
            },
            "type": "array"
          },
          "auto_decline_enabled": {
            "description": "Should triage incidents be declined when alerts are resolved?",
            "example": false,
            "type": "boolean"
          },
          "condition_groups": {
            "description": "What condition groups must be true for this alert route to fire?",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "defer_time_seconds": {
            "description": "How long should the escalation defer time be?",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "enabled": {
            "description": "Whether this alert route is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "escalation_bindings": {
            "description": "Which escalation paths should this alert route escalate to?",
            "example": [
              {
                "binding": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertRouteEscalationBindingPayloadV2"
            },
            "type": "array"
          },
          "expressions": {
            "description": "The expressions used in this template",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "type": "array"
          },
          "grouping_keys": {
            "description": "Which attributes should this alert route use to group alerts?",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/GroupingKeyV2"
            },
            "type": "array"
          },
          "grouping_window_seconds": {
            "description": "How large should the grouping window be?",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "incident_condition_groups": {
            "description": "What condition groups must be true for this alert route to create an incident?",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "incident_enabled": {
            "description": "Whether this alert route will create incidents or not",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The name of this alert route config, for the user's reference",
            "example": "Production incidents",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/AlertRouteIncidentTemplatePayloadV2"
          }
        },
        "required": [
          "name",
          "condition_groups",
          "grouping_keys",
          "grouping_window_seconds",
          "defer_time_seconds",
          "auto_decline_enabled",
          "escalation_bindings",
          "enabled",
          "is_private",
          "incident_enabled",
          "incident_condition_groups",
          "alert_sources",
          "auto_cancel_escalations"
        ],
        "type": "object"
      },
      "AlertRoutesCreateResultV2": {
        "example": {
          "alert_route": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "defer_time_seconds": 1,
            "escalation_bindings": [
              {
                "binding": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "grouping_keys": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            ],
            "grouping_window_seconds": 1,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Production incidents",
            "template": {
              "custom_field_priorities": {
                "abc123": "first-wins"
              },
              "custom_fields": {
                "custom_field_10014": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "incident_mode": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "incident_type": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "name": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "priority_severity": "severity-first-wins",
              "severity": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "summary": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "workspace": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          }
        },
        "properties": {
          "alert_route": {
            "$ref": "#/components/schemas/AlertRouteV2"
          }
        },
        "required": [
          "alert_route"
        ],
        "type": "object"
      },
      "AlertRoutesShowResultV2": {
        "example": {
          "alert_route": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "defer_time_seconds": 1,
            "escalation_bindings": [
              {
                "binding": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "grouping_keys": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            ],
            "grouping_window_seconds": 1,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Production incidents",
            "template": {
              "custom_field_priorities": {
                "abc123": "first-wins"
              },
              "custom_fields": {
                "custom_field_10014": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "incident_mode": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "incident_type": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "name": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "priority_severity": "severity-first-wins",
              "severity": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "summary": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "workspace": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          }
        },
        "properties": {
          "alert_route": {
            "$ref": "#/components/schemas/AlertRouteV2"
          }
        },
        "required": [
          "alert_route"
        ],
        "type": "object"
      },
      "AlertRoutesUpdatePayloadV2": {
        "example": {
          "alert_sources": [
            {
              "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ]
                }
              ]
            }
          ],
          "auto_decline_enabled": false,
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "defer_time_seconds": 1,
          "enabled": false,
          "escalation_bindings": [
            {
              "binding": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "grouping_keys": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0"
            }
          ],
          "grouping_window_seconds": 1,
          "incident_condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "incident_enabled": false,
          "name": "Production incidents",
          "template": {
            "custom_field_priorities": {
              "abc123": "abc123"
            },
            "custom_fields": {
              "custom_field_10014": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "incident_mode": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "incident_type": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "name": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "priority_severity": "severity-first-wins",
            "severity": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "start_in_triage": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "summary": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            },
            "workspace": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          }
        },
        "properties": {
          "alert_sources": {
            "description": "Which alert sources should this alert route match?",
            "example": [
              {
                "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertRouteAlertSourcePayloadV2"
            },
            "type": "array"
          },
          "auto_decline_enabled": {
            "description": "Should triage incidents be declined when alerts are resolved?",
            "example": false,
            "type": "boolean"
          },
          "condition_groups": {
            "description": "What condition groups must be true for this alert route to fire?",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "defer_time_seconds": {
            "description": "How long should the escalation defer time be?",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "enabled": {
            "description": "Whether this alert route is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "escalation_bindings": {
            "description": "Which escalation paths should this alert route escalate to?",
            "example": [
              {
                "binding": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertRouteEscalationBindingPayloadV2"
            },
            "type": "array"
          },
          "expressions": {
            "description": "The expressions used in this template",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "type": "array"
          },
          "grouping_keys": {
            "description": "Which attributes should this alert route use to group alerts?",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/GroupingKeyV2"
            },
            "type": "array"
          },
          "grouping_window_seconds": {
            "description": "How large should the grouping window be?",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "incident_condition_groups": {
            "description": "What condition groups must be true for this alert route to create an incident?",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "incident_enabled": {
            "description": "Whether this alert route will create incidents or not",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The name of this alert route config, for the user's reference",
            "example": "Production incidents",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/AlertRouteIncidentTemplatePayloadV2"
          }
        },
        "required": [
          "name",
          "condition_groups",
          "grouping_keys",
          "grouping_window_seconds",
          "defer_time_seconds",
          "escalation_bindings",
          "auto_decline_enabled",
          "enabled",
          "incident_enabled",
          "is_private",
          "incident_condition_groups",
          "alert_sources",
          "auto_cancel_escalations"
        ],
        "type": "object"
      },
      "AlertRoutesUpdateResultV2": {
        "example": {
          "alert_route": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "defer_time_seconds": 1,
            "escalation_bindings": [
              {
                "binding": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "grouping_keys": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            ],
            "grouping_window_seconds": 1,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Production incidents",
            "template": {
              "custom_field_priorities": {
                "abc123": "first-wins"
              },
              "custom_fields": {
                "custom_field_10014": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "incident_mode": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "incident_type": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "name": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "priority_severity": "severity-first-wins",
              "severity": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "summary": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              },
              "workspace": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          }
        },
        "properties": {
          "alert_route": {
            "$ref": "#/components/schemas/AlertRouteV2"
          }
        },
        "required": [
          "alert_route"
        ],
        "type": "object"
      },
      "AlertSourceEmailOptionsV2": {
        "example": {
          "email_address": "lawrence@example.com"
        },
        "properties": {
          "email_address": {
            "description": "Email address this alert source receives alerts to",
            "example": "lawrence@example.com",
            "type": "string"
          }
        },
        "required": [
          "email_address"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertSourceJiraOptionsV2": {
        "example": {
          "project_ids": [
            "01GBSQF3FHF7FWZQNWGHAVQ804",
            "10043"
          ]
        },
        "properties": {
          "project_ids": {
            "description": "Which projects in Jira should this alert source watch for new issues? IDs can either be IDs of the projects in Jira, or ID of catalog entries in the 'Jira Project' catalog type.",
            "example": [
              "01GBSQF3FHF7FWZQNWGHAVQ804",
              "10043"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "project_ids"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertSourceV2": {
        "example": {
          "email_options": {
            "email_address": "lawrence@example.com"
          },
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "jira_options": {
            "project_ids": [
              "01GBSQF3FHF7FWZQNWGHAVQ804",
              "10043"
            ]
          },
          "name": "Production Web Dashboard Alerts",
          "secret_token": "some-secret-token",
          "source_type": "alertmanager",
          "template": {
            "attributes": [
              {
                "alert_attribute_id": "abc123",
                "binding": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "description": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "title": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "email_options": {
            "$ref": "#/components/schemas/AlertSourceEmailOptionsV2"
          },
          "id": {
            "description": "The ID of this alert source",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "jira_options": {
            "$ref": "#/components/schemas/AlertSourceJiraOptionsV2"
          },
          "name": {
            "description": "Unique name of the alert source",
            "example": "Production Web Dashboard Alerts",
            "type": "string"
          },
          "secret_token": {
            "description": "Secret token used to authenticate this source, if applicable. If applicable, this is the token that must be included in either the query string or the 'Authorization' header when sending events to this alert source.",
            "example": "some-secret-token",
            "type": "string"
          },
          "source_type": {
            "description": "Type of alert source",
            "enum": [
              "alertmanager",
              "app_optics",
              "azure_monitor",
              "bugsnag",
              "checkly",
              "chronosphere",
              "cloudwatch",
              "cloudflare",
              "cronitor",
              "crowdstrike_falcon",
              "datadog",
              "dynatrace",
              "elasticsearch",
              "email",
              "expel",
              "github_issue",
              "google_cloud",
              "grafana",
              "http",
              "honeycomb",
              "incoming_calls",
              "jira",
              "monte_carlo",
              "nagios",
              "new_relic",
              "opsgenie",
              "prtg",
              "pager_duty",
              "panther",
              "pingdom",
              "runscope",
              "sns",
              "sentry",
              "splunk",
              "status_cake",
              "status_page_views",
              "sumo_logic",
              "uptime",
              "zendesk"
            ],
            "example": "alertmanager",
            "type": "string",
            "x-public-api-version": "v2"
          },
          "template": {
            "$ref": "#/components/schemas/AlertTemplateV2"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "state",
          "name",
          "source_type",
          "template",
          "alert_source",
          "created_at",
          "updated_at",
          "alert_route_ids",
          "auto_ack_in_source"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertSourcesCreatePayloadV2": {
        "example": {
          "jira_options": {
            "project_ids": [
              "01GBSQF3FHF7FWZQNWGHAVQ804",
              "10043"
            ]
          },
          "name": "Production Web Dashboard Alerts",
          "source_type": "app_optics",
          "template": {
            "attributes": [
              {
                "alert_attribute_id": "abc123",
                "binding": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "description": {
              "literal": "SEV123",
              "reference": "incident.severity"
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "title": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "jira_options": {
            "$ref": "#/components/schemas/AlertSourceJiraOptionsV2"
          },
          "name": {
            "description": "Unique name of the alert source",
            "example": "Production Web Dashboard Alerts",
            "type": "string"
          },
          "source_type": {
            "description": "Type of alert source",
            "enum": [
              "alertmanager",
              "app_optics",
              "azure_monitor",
              "bugsnag",
              "checkly",
              "chronosphere",
              "cloudwatch",
              "cloudflare",
              "cronitor",
              "crowdstrike_falcon",
              "datadog",
              "dynatrace",
              "elasticsearch",
              "email",
              "expel",
              "github_issue",
              "google_cloud",
              "grafana",
              "http",
              "honeycomb",
              "incoming_calls",
              "jira",
              "monte_carlo",
              "nagios",
              "new_relic",
              "opsgenie",
              "prtg",
              "pager_duty",
              "panther",
              "pingdom",
              "runscope",
              "sns",
              "sentry",
              "splunk",
              "status_cake",
              "status_page_views",
              "sumo_logic",
              "uptime",
              "zendesk"
            ],
            "example": "app_optics",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/AlertTemplatePayloadV2"
          }
        },
        "required": [
          "name",
          "source_type",
          "template",
          "id",
          "organisation_id",
          "state",
          "alert_source",
          "created_at",
          "updated_at",
          "alert_route_ids",
          "auto_ack_in_source"
        ],
        "type": "object"
      },
      "AlertSourcesCreateResultV2": {
        "example": {
          "alert_source": {
            "email_options": {
              "email_address": "lawrence@example.com"
            },
            "id": "01GW2G3V0S59R238FAHPDS1R66",
            "jira_options": {
              "project_ids": [
                "01GBSQF3FHF7FWZQNWGHAVQ804",
                "10043"
              ]
            },
            "name": "Production Web Dashboard Alerts",
            "secret_token": "some-secret-token",
            "source_type": "app_optics",
            "template": {
              "attributes": [
                {
                  "alert_attribute_id": "abc123",
                  "binding": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                }
              ],
              "description": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              },
              "expressions": [
                {
                  "else_branch": {
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "label": "Team Slack channel",
                  "operations": [
                    {
                      "branches": {
                        "branches": [
                          {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": {
                                      "label": "Lawrence Jones",
                                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                    },
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": {
                                      "label": "Incident Severity",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ]
                              }
                            ],
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          }
                        ],
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      },
                      "filter": {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "navigate": {
                        "reference": "1235",
                        "reference_label": "Teams"
                      },
                      "operation_type": "navigate",
                      "parse": {
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "source": "metadata.annotations[\"github.com/repo\"]"
                      },
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    }
                  ],
                  "reference": "abc123",
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "root_reference": "incident.status"
                }
              ],
              "title": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          }
        },
        "properties": {
          "alert_source": {
            "$ref": "#/components/schemas/AlertSourceV2"
          }
        },
        "required": [
          "alert_source"
        ],
        "type": "object"
      },
      "AlertSourcesListResultV2": {
        "example": {
          "alert_sources": [
            {
              "email_options": {
                "email_address": "lawrence@example.com"
              },
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "jira_options": {
                "project_ids": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804",
                  "10043"
                ]
              },
              "name": "Production Web Dashboard Alerts",
              "secret_token": "some-secret-token",
              "source_type": "app_optics",
              "template": {
                "attributes": [
                  {
                    "alert_attribute_id": "abc123",
                    "binding": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "description": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "1235",
                          "reference_label": "Teams"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        },
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "root_reference": "incident.status"
                  }
                ],
                "title": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ]
        },
        "properties": {
          "alert_sources": {
            "example": [
              {
                "email_options": {
                  "email_address": "lawrence@example.com"
                },
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "jira_options": {
                  "project_ids": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "10043"
                  ]
                },
                "name": "Production Web Dashboard Alerts",
                "secret_token": "some-secret-token",
                "source_type": "app_optics",
                "template": {
                  "attributes": [
                    {
                      "alert_attribute_id": "abc123",
                      "binding": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "description": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  },
                  "expressions": [
                    {
                      "else_branch": {
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      },
                      "label": "Team Slack channel",
                      "operations": [
                        {
                          "branches": {
                            "branches": [
                              {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": {
                                          "label": "Lawrence Jones",
                                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                        },
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": {
                                          "label": "Incident Severity",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "result": {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              }
                            ],
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          },
                          "filter": {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": {
                                      "label": "Lawrence Jones",
                                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                    },
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": {
                                      "label": "Incident Severity",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          "navigate": {
                            "reference": "1235",
                            "reference_label": "Teams"
                          },
                          "operation_type": "navigate",
                          "parse": {
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            },
                            "source": "metadata.annotations[\"github.com/repo\"]"
                          },
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        }
                      ],
                      "reference": "abc123",
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "root_reference": "incident.status"
                    }
                  ],
                  "title": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertSourceV2"
            },
            "type": "array"
          }
        },
        "required": [
          "alert_sources"
        ],
        "type": "object"
      },
      "AlertSourcesShowResultV2": {
        "example": {
          "alert_source": {
            "email_options": {
              "email_address": "lawrence@example.com"
            },
            "id": "01GW2G3V0S59R238FAHPDS1R66",
            "jira_options": {
              "project_ids": [
                "01GBSQF3FHF7FWZQNWGHAVQ804",
                "10043"
              ]
            },
            "name": "Production Web Dashboard Alerts",
            "secret_token": "some-secret-token",
            "source_type": "app_optics",
            "template": {
              "attributes": [
                {
                  "alert_attribute_id": "abc123",
                  "binding": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                }
              ],
              "description": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              },
              "expressions": [
                {
                  "else_branch": {
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "label": "Team Slack channel",
                  "operations": [
                    {
                      "branches": {
                        "branches": [
                          {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": {
                                      "label": "Lawrence Jones",
                                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                    },
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": {
                                      "label": "Incident Severity",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ]
                              }
                            ],
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          }
                        ],
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      },
                      "filter": {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "navigate": {
                        "reference": "1235",
                        "reference_label": "Teams"
                      },
                      "operation_type": "navigate",
                      "parse": {
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "source": "metadata.annotations[\"github.com/repo\"]"
                      },
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    }
                  ],
                  "reference": "abc123",
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "root_reference": "incident.status"
                }
              ],
              "title": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          }
        },
        "properties": {
          "alert_source": {
            "$ref": "#/components/schemas/AlertSourceV2"
          }
        },
        "required": [
          "alert_source"
        ],
        "type": "object"
      },
      "AlertSourcesUpdatePayloadV2": {
        "example": {
          "jira_options": {
            "project_ids": [
              "01GBSQF3FHF7FWZQNWGHAVQ804",
              "10043"
            ]
          },
          "name": "Production Web Dashboard Alerts",
          "template": {
            "attributes": [
              {
                "alert_attribute_id": "abc123",
                "binding": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "description": {
              "literal": "SEV123",
              "reference": "incident.severity"
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "title": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "jira_options": {
            "$ref": "#/components/schemas/AlertSourceJiraOptionsV2"
          },
          "name": {
            "description": "Unique name of the alert source",
            "example": "Production Web Dashboard Alerts",
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/AlertTemplatePayloadV2"
          }
        },
        "required": [
          "name",
          "template",
          "organisation_id",
          "state",
          "source_type",
          "alert_source",
          "created_at",
          "updated_at",
          "alert_route_ids",
          "auto_ack_in_source"
        ],
        "type": "object"
      },
      "AlertSourcesUpdateResultV2": {
        "example": {
          "alert_source": {
            "email_options": {
              "email_address": "lawrence@example.com"
            },
            "id": "01GW2G3V0S59R238FAHPDS1R66",
            "jira_options": {
              "project_ids": [
                "01GBSQF3FHF7FWZQNWGHAVQ804",
                "10043"
              ]
            },
            "name": "Production Web Dashboard Alerts",
            "secret_token": "some-secret-token",
            "source_type": "app_optics",
            "template": {
              "attributes": [
                {
                  "alert_attribute_id": "abc123",
                  "binding": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                }
              ],
              "description": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              },
              "expressions": [
                {
                  "else_branch": {
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "label": "Team Slack channel",
                  "operations": [
                    {
                      "branches": {
                        "branches": [
                          {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": {
                                      "label": "Lawrence Jones",
                                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                    },
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": {
                                      "label": "Incident Severity",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ]
                              }
                            ],
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          }
                        ],
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      },
                      "filter": {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "navigate": {
                        "reference": "1235",
                        "reference_label": "Teams"
                      },
                      "operation_type": "navigate",
                      "parse": {
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "source": "metadata.annotations[\"github.com/repo\"]"
                      },
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    }
                  ],
                  "reference": "abc123",
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "root_reference": "incident.status"
                }
              ],
              "title": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          }
        },
        "properties": {
          "alert_source": {
            "$ref": "#/components/schemas/AlertSourceV2"
          }
        },
        "required": [
          "alert_source"
        ],
        "type": "object"
      },
      "AlertTemplateAttributePayloadV2": {
        "example": {
          "alert_attribute_id": "abc123",
          "binding": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "alert_attribute_id": {
            "description": "ID of the alert attribute to set with this binding",
            "example": "abc123",
            "type": "string"
          },
          "binding": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "required": [
          "alert_attribute_id",
          "binding"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertTemplateAttributeV2": {
        "example": {
          "alert_attribute_id": "abc123",
          "binding": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "alert_attribute_id": {
            "description": "ID of the alert attribute to set with this binding",
            "example": "abc123",
            "type": "string"
          },
          "binding": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          }
        },
        "required": [
          "alert_attribute_id",
          "binding"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertTemplatePayloadV2": {
        "example": {
          "attributes": [
            {
              "alert_attribute_id": "abc123",
              "binding": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "description": {
            "literal": "SEV123",
            "reference": "incident.severity"
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "title": {
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        },
        "properties": {
          "attributes": {
            "description": "Attributes to set on alerts coming from this source, with a binding describing how to set them.",
            "example": [
              {
                "alert_attribute_id": "abc123",
                "binding": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertTemplateAttributePayloadV2"
            },
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/EngineParamBindingValuePayloadV2"
          },
          "expressions": {
            "description": "Expressions available for use in bindings within this template",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "type": "array"
          },
          "title": {
            "$ref": "#/components/schemas/EngineParamBindingValuePayloadV2"
          }
        },
        "required": [
          "expressions",
          "title",
          "description",
          "attributes"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AlertTemplateV2": {
        "example": {
          "attributes": [
            {
              "alert_attribute_id": "abc123",
              "binding": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "description": {
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity"
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "1235",
                    "reference_label": "Teams"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  },
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                }
              ],
              "reference": "abc123",
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              },
              "root_reference": "incident.status"
            }
          ],
          "title": {
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        },
        "properties": {
          "attributes": {
            "description": "Attributes to set on alerts coming from this source, with a binding describing how to set them.",
            "example": [
              {
                "alert_attribute_id": "abc123",
                "binding": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AlertTemplateAttributeV2"
            },
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/EngineParamBindingValueV2"
          },
          "expressions": {
            "description": "Expressions available for use in bindings within this template",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionV2"
            },
            "type": "array"
          },
          "title": {
            "$ref": "#/components/schemas/EngineParamBindingValueV2"
          }
        },
        "required": [
          "expressions",
          "title",
          "description",
          "attributes"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "AllResponseBody": {
        "example": {
          "event_type": "public_incident.incident_created_v2",
          "private_incident.action_created_v1": {
            "id": "abc123"
          },
          "private_incident.action_updated_v1": {
            "id": "abc123"
          },
          "private_incident.follow_up_created_v1": {
            "id": "abc123"
          },
          "private_incident.follow_up_updated_v1": {
            "id": "abc123"
          },
          "private_incident.incident_created_v2": {
            "id": "abc123"
          },
          "private_incident.incident_updated_v2": {
            "id": "abc123"
          },
          "private_incident.membership_granted_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          },
          "private_incident.membership_revoked_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          },
          "public_incident.action_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.action_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.follow_up_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.follow_up_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "public_incident.incident_created_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "has_debrief": false,
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          },
          "public_incident.incident_status_updated_v2": {
            "incident": {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "duration_metrics": [
                {
                  "duration_metric": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Lasted"
                  },
                  "value_seconds": 1
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "has_debrief": false,
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            },
            "message": "We're working on a fix, hoping to ship in the next 30 minutes",
            "new_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "previous_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          },
          "public_incident.incident_updated_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "has_debrief": false,
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.incident_created_v2",
            "type": "string"
          },
          "private_incident.action_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.action_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          },
          "private_incident.membership_granted_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          },
          "private_incident.membership_revoked_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          },
          "public_incident.action_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.action_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          },
          "public_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          },
          "public_incident.incident_status_updated_v2": {
            "$ref": "#/components/schemas/IncidentWithStatusChangeV2"
          },
          "public_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          }
        },
        "required": [
          "event_type"
        ],
        "type": "object"
      },
      "AuditLogActorMetadataV2": {
        "example": {
          "api_key_roles": "abc123",
          "external_resource_external_id": "q1234",
          "external_resource_type": "pager_duty_incident",
          "user_base_role_slug": "admin",
          "user_custom_role_slugs": "engineering,security"
        },
        "properties": {
          "api_key_roles": {
            "description": "The roles that the API key has, separated by commas (if it's an API key actor)",
            "example": "abc123",
            "type": "string"
          },
          "external_resource_external_id": {
            "description": "The ID of the external resource in the 3rd party system (if it's an external resource actor)",
            "example": "q1234",
            "type": "string"
          },
          "external_resource_type": {
            "description": "The type of the external resource (if it's an external resource actor)",
            "example": "pager_duty_incident",
            "type": "string"
          },
          "user_base_role_slug": {
            "description": "The base role slug of the user (if it's a user actor)",
            "example": "admin",
            "type": "string"
          },
          "user_custom_role_slugs": {
            "description": "The custom role slugs of the user, separated by commas (if it's a user actor)",
            "example": "engineering,security",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditLogActorV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "metadata": {
            "user_base_role_slug": "admin",
            "user_custom_role_slugs": "engineering,security"
          },
          "name": "John Doe",
          "type": "user"
        },
        "properties": {
          "id": {
            "description": "The ID of the actor",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogActorMetadataV2"
          },
          "name": {
            "description": "The name of the actor",
            "example": "John Doe",
            "type": "string"
          },
          "type": {
            "description": "The type of actor",
            "enum": [
              "user",
              "system",
              "api_key",
              "workflow",
              "external_resource"
            ],
            "example": "user",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "AuditLogEntryContextV2": {
        "example": {
          "location": "1.2.3.4",
          "user_agent": "Chrome/91.0.4472.114"
        },
        "properties": {
          "location": {
            "description": "The location of the actor that performed this action",
            "example": "1.2.3.4",
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the actor that performed this action",
            "example": "Chrome/91.0.4472.114",
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "AuditLogPrivateIncidentAccessAttemptedMetadataV2": {
        "example": {
          "outcome": "granted"
        },
        "properties": {
          "outcome": {
            "description": "Whether or not the user was able to access the private incident",
            "enum": [
              "granted",
              "denied"
            ],
            "example": "granted",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditLogTargetV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "John Doe",
          "type": "user"
        },
        "properties": {
          "id": {
            "description": "The ID of the target",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of the target",
            "example": "John Doe",
            "type": "string"
          },
          "type": {
            "description": "The type of target",
            "enum": [
              "api_key",
              "alert_route",
              "alert_schema",
              "alert_source",
              "announcement_rule",
              "catalog_type",
              "custom_field",
              "debrief_invite_rule",
              "escalation_path",
              "follow_up_priority",
              "holiday_user_feed",
              "incident",
              "incident_call_setting",
              "incident_duration_metric",
              "incident_role",
              "incident_status",
              "incident_timestamp",
              "incident_type",
              "integration",
              "internal_status_page",
              "nudge",
              "schedule_override",
              "policy",
              "post_incident_task",
              "postmortem_template",
              "postmortem_template_section",
              "private_incident_membership",
              "rbac_role",
              "scim_group",
              "schedule",
              "severity",
              "status_page",
              "status_page_sub_page",
              "status_page_template",
              "user",
              "workflow"
            ],
            "example": "user",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "AuditLogUserRoleMembershipChangedMetadataV2": {
        "example": {
          "after_base_role_slug": "owner",
          "after_custom_role_slugs": "engineering,data",
          "before_base_role_slug": "admin",
          "before_custom_role_slugs": "engineering,security"
        },
        "properties": {
          "after_base_role_slug": {
            "description": "The base role slug of the user after their role memberships changed",
            "example": "owner",
            "type": "string"
          },
          "after_custom_role_slugs": {
            "description": "The custom role slugs of the user after their role memberships changed, separated by commas",
            "example": "engineering,data",
            "type": "string"
          },
          "before_base_role_slug": {
            "description": "The base role slug of the user before their role memberships changed",
            "example": "admin",
            "type": "string"
          },
          "before_custom_role_slugs": {
            "description": "The custom role slugs of the user before their role memberships changed, separated by commas",
            "example": "engineering,security",
            "type": "string"
          }
        },
        "required": [
          "before_base_role_slug",
          "before_custom_role_slugs",
          "after_base_role_slug",
          "after_custom_role_slugs"
        ],
        "type": "object"
      },
      "AuditLogUserSCIMGroupMappingChangedMetadataV2": {
        "example": {
          "after_base_role_slug": "owner",
          "after_custom_role_slugs": "engineering,data",
          "before_base_role_slug": "admin",
          "before_custom_role_slugs": "engineering,security"
        },
        "properties": {
          "after_base_role_slug": {
            "description": "The base role slug of this SCIM group after the mapping was changed (if any)",
            "example": "owner",
            "type": "string"
          },
          "after_custom_role_slugs": {
            "description": "The custom role slugs of this SCIM group after the mapping was changed (if any), separated by commas",
            "example": "engineering,data",
            "type": "string"
          },
          "before_base_role_slug": {
            "description": "The base role slug assigned to this SCIM group before the mapping was changed (if any)",
            "example": "admin",
            "type": "string"
          },
          "before_custom_role_slugs": {
            "description": "The custom role slugs of this SCIM group before the mapping was changed (if any), separated by commas",
            "example": "engineering,security",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditLogsAPIKeyCreatedV1": {
        "example": {
          "action": "api_key.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Development API Key",
              "type": "api_key"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "api_key.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Development API Key",
                "type": "api_key"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAPIKeyDeletedV1": {
        "example": {
          "action": "api_key.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Development API Key",
              "type": "api_key"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "api_key.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Development API Key",
                "type": "api_key"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertRouteCreatedV1": {
        "example": {
          "action": "alert_route.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Production incidents",
              "type": "alert_route"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_route.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Production incidents",
                "type": "alert_route"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertRouteDeletedV1": {
        "example": {
          "action": "alert_route.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Production incidents",
              "type": "alert_route"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_route.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Production incidents",
                "type": "alert_route"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertRouteUpdatedV1": {
        "example": {
          "action": "alert_route.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Production incidents",
              "type": "alert_route"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_route.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Production incidents",
                "type": "alert_route"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertSchemaUpdatedV1": {
        "example": {
          "action": "alert_schema.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Alert schema",
              "type": "alert_schema"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_schema.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Alert schema",
                "type": "alert_schema"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertSourceConfigCreatedV1": {
        "example": {
          "action": "alert_source_config.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Datadog alerts",
              "type": "alert_source"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_source_config.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Datadog alerts",
                "type": "alert_source"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertSourceConfigDeletedV1": {
        "example": {
          "action": "alert_source_config.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Datadog alerts",
              "type": "alert_source"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_source_config.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Datadog alerts",
                "type": "alert_source"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAlertSourceConfigUpdatedV1": {
        "example": {
          "action": "alert_source_config.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Datadog alerts",
              "type": "alert_source"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "alert_source_config.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Datadog alerts",
                "type": "alert_source"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAnnouncementRuleCreatedV1": {
        "example": {
          "action": "announcement_rule.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#engineering",
              "type": "announcement_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "announcement_rule.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#engineering",
                "type": "announcement_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAnnouncementRuleDeletedV1": {
        "example": {
          "action": "announcement_rule.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#engineering",
              "type": "announcement_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "announcement_rule.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#engineering",
                "type": "announcement_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsAnnouncementRuleUpdatedV1": {
        "example": {
          "action": "announcement_rule.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#engineering",
              "type": "announcement_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "announcement_rule.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#engineering",
                "type": "announcement_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsCatalogTypeCreatedV1": {
        "example": {
          "action": "catalog_type.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Service",
              "type": "catalog_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "catalog_type.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Service",
                "type": "catalog_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsCatalogTypeDeletedV1": {
        "example": {
          "action": "catalog_type.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Service",
              "type": "catalog_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "catalog_type.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Service",
                "type": "catalog_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsCatalogTypeUpdatedV1": {
        "example": {
          "action": "catalog_type.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Service",
              "type": "catalog_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "catalog_type.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Service",
                "type": "catalog_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsCustomFieldCreatedV1": {
        "example": {
          "action": "custom_field.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected teams",
              "type": "custom_field"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "custom_field.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected teams",
                "type": "custom_field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsCustomFieldDeletedV1": {
        "example": {
          "action": "custom_field.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected teams",
              "type": "custom_field"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "custom_field.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected teams",
                "type": "custom_field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsCustomFieldUpdatedV1": {
        "example": {
          "action": "custom_field.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected teams",
              "type": "custom_field"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "custom_field.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected teams",
                "type": "custom_field"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsDebriefInviteRuleCreatedV1": {
        "example": {
          "action": "debrief_invite_rule.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Invite founders for critical incidents",
              "type": "debrief_invite_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "debrief_invite_rule.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Invite founders for critical incidents",
                "type": "debrief_invite_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsDebriefInviteRuleDeletedV1": {
        "example": {
          "action": "debrief_invite_rule.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Invite founders for critical incidents",
              "type": "debrief_invite_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "debrief_invite_rule.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Invite founders for critical incidents",
                "type": "debrief_invite_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsDebriefInviteRuleUpdatedV1": {
        "example": {
          "action": "debrief_invite_rule.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Invite founders for critical incidents",
              "type": "debrief_invite_rule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "debrief_invite_rule.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Invite founders for critical incidents",
                "type": "debrief_invite_rule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsEscalationPathCreatedV1": {
        "example": {
          "action": "escalation_path.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Critical incidents",
              "type": "escalation_path"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "escalation_path.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Critical incidents",
                "type": "escalation_path"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsEscalationPathDeletedV1": {
        "example": {
          "action": "escalation_path.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Critical incidents",
              "type": "escalation_path"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "escalation_path.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Critical incidents",
                "type": "escalation_path"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsEscalationPathUpdatedV1": {
        "example": {
          "action": "escalation_path.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Critical incidents",
              "type": "escalation_path"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "escalation_path.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Critical incidents",
                "type": "escalation_path"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsFollowUpPriorityCreatedV1": {
        "example": {
          "action": "follow_up_priority.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Low",
              "type": "follow_up_priority"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "follow_up_priority.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Low",
                "type": "follow_up_priority"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsFollowUpPriorityDeletedV1": {
        "example": {
          "action": "follow_up_priority.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Low",
              "type": "follow_up_priority"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "follow_up_priority.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Low",
                "type": "follow_up_priority"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsFollowUpPriorityUpdatedV1": {
        "example": {
          "action": "follow_up_priority.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Low",
              "type": "follow_up_priority"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "follow_up_priority.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Low",
                "type": "follow_up_priority"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsHolidayUserFeedCreatedV1": {
        "example": {
          "action": "holiday_user_feed.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "US Team holidays",
              "type": "holiday_user_feed"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "holiday_user_feed.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "US Team holidays",
                "type": "holiday_user_feed"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsHolidayUserFeedDeletedV1": {
        "example": {
          "action": "holiday_user_feed.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "US Team holidays",
              "type": "holiday_user_feed"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "holiday_user_feed.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "US Team holidays",
                "type": "holiday_user_feed"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsHolidayUserFeedUpdatedV1": {
        "example": {
          "action": "holiday_user_feed.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "US Team holidays",
              "type": "holiday_user_feed"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "holiday_user_feed.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "US Team holidays",
                "type": "holiday_user_feed"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentCallSettingUpdatedV1": {
        "example": {
          "action": "incident_call_setting.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Incident call settings",
              "type": "incident_call_setting"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_call_setting.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Incident call settings",
                "type": "incident_call_setting"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentDurationMetricCreatedV1": {
        "example": {
          "action": "incident_duration_metric.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Time to resolve",
              "type": "incident_duration_metric"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_duration_metric.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Time to resolve",
                "type": "incident_duration_metric"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentDurationMetricDeletedV1": {
        "example": {
          "action": "incident_duration_metric.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Time to resolve",
              "type": "incident_duration_metric"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_duration_metric.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Time to resolve",
                "type": "incident_duration_metric"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentDurationMetricUpdatedV1": {
        "example": {
          "action": "incident_duration_metric.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Time to resolve",
              "type": "incident_duration_metric"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_duration_metric.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Time to resolve",
                "type": "incident_duration_metric"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentRoleCreatedV1": {
        "example": {
          "action": "incident_role.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Communications Lead",
              "type": "incident_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_role.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Communications Lead",
                "type": "incident_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentRoleDeletedV1": {
        "example": {
          "action": "incident_role.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Communications Lead",
              "type": "incident_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_role.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Communications Lead",
                "type": "incident_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentRoleUpdatedV1": {
        "example": {
          "action": "incident_role.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Communications Lead",
              "type": "incident_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_role.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Communications Lead",
                "type": "incident_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentStatusCreatedV1": {
        "example": {
          "action": "incident_status.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "incident_status"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_status.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "incident_status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentStatusDeletedV1": {
        "example": {
          "action": "incident_status.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "incident_status"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_status.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "incident_status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentStatusUpdatedV1": {
        "example": {
          "action": "incident_status.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "incident_status"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_status.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "incident_status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentTimestampCreatedV1": {
        "example": {
          "action": "incident_timestamp.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Fixed at",
              "type": "incident_timestamp"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_timestamp.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Fixed at",
                "type": "incident_timestamp"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentTimestampDeletedV1": {
        "example": {
          "action": "incident_timestamp.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Fixed at",
              "type": "incident_timestamp"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_timestamp.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Fixed at",
                "type": "incident_timestamp"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentTimestampUpdatedV1": {
        "example": {
          "action": "incident_timestamp.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Fixed at",
              "type": "incident_timestamp"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_timestamp.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Fixed at",
                "type": "incident_timestamp"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentTypeCreatedV1": {
        "example": {
          "action": "incident_type.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "incident_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_type.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "incident_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentTypeDeletedV1": {
        "example": {
          "action": "incident_type.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "incident_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_type.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "incident_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIncidentTypeUpdatedV1": {
        "example": {
          "action": "incident_type.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "incident_type"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "incident_type.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "incident_type"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIntegrationInstalledV1": {
        "example": {
          "action": "integration.installed",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "github",
              "name": "Github",
              "type": "integration"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "integration.installed",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "github",
                "name": "Github",
                "type": "integration"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsIntegrationUninstalledV1": {
        "example": {
          "action": "integration.uninstalled",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "github",
              "name": "Github",
              "type": "integration"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "integration.uninstalled",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "github",
                "name": "Github",
                "type": "integration"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsInternalStatusPageCreatedV1": {
        "example": {
          "action": "internal_status_page.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "internal_status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "internal_status_page.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "internal_status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsInternalStatusPageDeletedV1": {
        "example": {
          "action": "internal_status_page.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "internal_status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "internal_status_page.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "internal_status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsInternalStatusPageUpdatedV1": {
        "example": {
          "action": "internal_status_page.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "internal_status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "internal_status_page.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "internal_status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsNudgeCreatedV1": {
        "example": {
          "action": "nudge.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Reminder to take a break",
              "type": "nudge"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "nudge.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Reminder to take a break",
                "type": "nudge"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsNudgeDeletedV1": {
        "example": {
          "action": "nudge.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Reminder to take a break",
              "type": "nudge"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "nudge.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Reminder to take a break",
                "type": "nudge"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsNudgeUpdatedV1": {
        "example": {
          "action": "nudge.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Reminder to take a break",
              "type": "nudge"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "nudge.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Reminder to take a break",
                "type": "nudge"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPolicyCreatedV1": {
        "example": {
          "action": "policy.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Follow-ups must be closed within 3 weeks",
              "type": "policy"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "policy.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Follow-ups must be closed within 3 weeks",
                "type": "policy"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPolicyDeletedV1": {
        "example": {
          "action": "policy.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Follow-ups must be closed within 3 weeks",
              "type": "policy"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "policy.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Follow-ups must be closed within 3 weeks",
                "type": "policy"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPolicyUpdatedV1": {
        "example": {
          "action": "policy.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Follow-ups must be closed within 3 weeks",
              "type": "policy"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "policy.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Follow-ups must be closed within 3 weeks",
                "type": "policy"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostIncidentTaskCreatedV1": {
        "example": {
          "action": "post_incident_task.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "post_incident_task.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostIncidentTaskDeletedV1": {
        "example": {
          "action": "post_incident_task.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "post_incident_task.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostIncidentTaskUpdatedV1": {
        "example": {
          "action": "post_incident_task.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "post_incident_task.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemSectionCreatedV1": {
        "example": {
          "action": "postmortem_section.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_section.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemSectionCreatedV2": {
        "example": {
          "action": "postmortem_section.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "follow_ups",
              "type": "postmortem_template_section"
            }
          ],
          "version": 2
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_section.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "follow_ups",
                "type": "postmortem_template_section"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemSectionDeletedV1": {
        "example": {
          "action": "postmortem_section.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_section.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemSectionDeletedV2": {
        "example": {
          "action": "postmortem_section.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "follow_ups",
              "type": "postmortem_template_section"
            }
          ],
          "version": 2
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_section.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "follow_ups",
                "type": "postmortem_template_section"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemSectionUpdatedV1": {
        "example": {
          "action": "postmortem_section.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_section.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemSectionUpdatedV2": {
        "example": {
          "action": "postmortem_section.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "follow_ups",
              "type": "postmortem_template_section"
            }
          ],
          "version": 2
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_section.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "follow_ups",
                "type": "postmortem_template_section"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemTemplateCreatedV1": {
        "example": {
          "action": "postmortem_template.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_template.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemTemplateCreatedV2": {
        "example": {
          "action": "postmortem_template.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Root cause analysis (RCA)",
              "type": "postmortem_template"
            }
          ],
          "version": 2
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_template.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Root cause analysis (RCA)",
                "type": "postmortem_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemTemplateDeletedV1": {
        "example": {
          "action": "postmortem_template.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_template.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemTemplateDeletedV2": {
        "example": {
          "action": "postmortem_template.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Root cause analysis (RCA)",
              "type": "postmortem_template"
            }
          ],
          "version": 2
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_template.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Root cause analysis (RCA)",
                "type": "postmortem_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemTemplateUpdatedV1": {
        "example": {
          "action": "postmortem_template.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Schedule a debrief",
              "type": "post_incident_task"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_template.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Schedule a debrief",
                "type": "post_incident_task"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPostmortemTemplateUpdatedV2": {
        "example": {
          "action": "postmortem_template.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Root cause analysis (RCA)",
              "type": "postmortem_template"
            }
          ],
          "version": 2
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "postmortem_template.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Root cause analysis (RCA)",
                "type": "postmortem_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPrivateIncidentAccessAttemptedV1": {
        "example": {
          "action": "private_incident.access_attempted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "outcome": "granted"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident.access_attempted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogPrivateIncidentAccessAttemptedMetadataV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context",
          "metadata"
        ],
        "type": "object"
      },
      "AuditLogsPrivateIncidentAccessRequestedV1": {
        "example": {
          "action": "private_incident.access_requested",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident.access_requested",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPrivateIncidentMembershipGrantedV1": {
        "example": {
          "action": "private_incident_membership.granted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            },
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident_membership.granted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              },
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsPrivateIncidentMembershipRevokedV1": {
        "example": {
          "action": "private_incident_membership.revoked",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            },
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "#INC-123 The website is slow",
              "type": "incident"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "private_incident_membership.revoked",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              },
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "#INC-123 The website is slow",
                "type": "incident"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsRbacRoleCreatedV1": {
        "example": {
          "action": "rbac_role.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Engineering",
              "type": "rbac_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "rbac_role.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Engineering",
                "type": "rbac_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsRbacRoleDeletedV1": {
        "example": {
          "action": "rbac_role.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Engineering",
              "type": "rbac_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "rbac_role.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Engineering",
                "type": "rbac_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsRbacRoleUpdatedV1": {
        "example": {
          "action": "rbac_role.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Engineering",
              "type": "rbac_role"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "rbac_role.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Engineering",
                "type": "rbac_role"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScheduleCreatedV1": {
        "example": {
          "action": "schedule.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "On-call",
              "type": "schedule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "schedule.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "On-call",
                "type": "schedule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScheduleDeletedV1": {
        "example": {
          "action": "schedule.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "On-call",
              "type": "schedule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "schedule.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "On-call",
                "type": "schedule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScheduleOverrideCreatedV1": {
        "example": {
          "action": "schedule_override.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Override for Urgent Support",
              "type": "schedule_override"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "schedule_override.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Override for Urgent Support",
                "type": "schedule_override"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScheduleOverrideDeletedV1": {
        "example": {
          "action": "schedule_override.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Override for Urgent Support",
              "type": "schedule_override"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "schedule_override.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Override for Urgent Support",
                "type": "schedule_override"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScheduleOverrideUpdatedV1": {
        "example": {
          "action": "schedule_override.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Override for Urgent Support",
              "type": "schedule_override"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "schedule_override.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Override for Urgent Support",
                "type": "schedule_override"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScheduleUpdatedV1": {
        "example": {
          "action": "schedule.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "On-call",
              "type": "schedule"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "schedule.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "On-call",
                "type": "schedule"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsScimGroupRoleMappingsUpdatedV1": {
        "example": {
          "action": "scim_group.role_mappings_updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "after_base_role_slug": "owner",
            "after_custom_role_slugs": "engineering,data",
            "before_base_role_slug": "admin",
            "before_custom_role_slugs": "engineering,security"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Security",
              "type": "scim_group"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "scim_group.role_mappings_updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogUserSCIMGroupMappingChangedMetadataV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Security",
                "type": "scim_group"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context",
          "metadata"
        ],
        "type": "object"
      },
      "AuditLogsSeverityCreatedV1": {
        "example": {
          "action": "severity.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "type": "severity"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "severity.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "type": "severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsSeverityDeletedV1": {
        "example": {
          "action": "severity.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "type": "severity"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "severity.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "type": "severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsSeverityUpdatedV1": {
        "example": {
          "action": "severity.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "type": "severity"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "severity.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "type": "severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageCreatedV1": {
        "example": {
          "action": "status_page.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageDeletedV1": {
        "example": {
          "action": "status_page.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageSubPageCreatedV1": {
        "example": {
          "action": "status_page_sub_page.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Superpayments France",
              "type": "status_page_sub_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_sub_page.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Superpayments France",
                "type": "status_page_sub_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageSubPageDeletedV1": {
        "example": {
          "action": "status_page_sub_page.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Superpayments France",
              "type": "status_page_sub_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_sub_page.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Superpayments France",
                "type": "status_page_sub_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageSubPageUpdatedV1": {
        "example": {
          "action": "status_page_sub_page.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Superpayments France",
              "type": "status_page_sub_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_sub_page.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Superpayments France",
                "type": "status_page_sub_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageTemplateCreatedV1": {
        "example": {
          "action": "status_page_template.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "status_page_template"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_template.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "status_page_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageTemplateDeletedV1": {
        "example": {
          "action": "status_page_template.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "status_page_template"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_template.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "status_page_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageTemplateUpdatedV1": {
        "example": {
          "action": "status_page_template.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Investigating",
              "type": "status_page_template"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page_template.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Investigating",
                "type": "status_page_template"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsStatusPageUpdatedV1": {
        "example": {
          "action": "status_page.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Public Page",
              "type": "status_page"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "status_page.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Public Page",
                "type": "status_page"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsUserCreatedV1": {
        "example": {
          "action": "user.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsUserDeactivatedV1": {
        "example": {
          "action": "user.deactivated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.deactivated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsUserReinstatedV1": {
        "example": {
          "action": "user.reinstated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.reinstated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsUserRoleMembershipsUpdatedV1": {
        "example": {
          "action": "user.role_memberships_updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "metadata": {
            "after_base_role_slug": "owner",
            "after_custom_role_slugs": "engineering,data",
            "before_base_role_slug": "admin",
            "before_custom_role_slugs": "engineering,security"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.role_memberships_updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "metadata": {
            "$ref": "#/components/schemas/AuditLogUserRoleMembershipChangedMetadataV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context",
          "metadata"
        ],
        "type": "object"
      },
      "AuditLogsUserUpdatedV1": {
        "example": {
          "action": "user.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Bob the builder",
              "type": "user"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "user.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Bob the builder",
                "type": "user"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsWorkflowCreatedV1": {
        "example": {
          "action": "workflow.created",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Nudge to write a postmortem",
              "type": "workflow"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "workflow.created",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Nudge to write a postmortem",
                "type": "workflow"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsWorkflowDeletedV1": {
        "example": {
          "action": "workflow.deleted",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Nudge to write a postmortem",
              "type": "workflow"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "workflow.deleted",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Nudge to write a postmortem",
                "type": "workflow"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "AuditLogsWorkflowUpdatedV1": {
        "example": {
          "action": "workflow.updated",
          "actor": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "metadata": {
              "user_base_role_slug": "admin",
              "user_custom_role_slugs": "engineering,security"
            },
            "name": "John Doe",
            "type": "user"
          },
          "context": {
            "location": "1.2.3.4",
            "user_agent": "Chrome/91.0.4472.114"
          },
          "occurred_at": "2021-08-17T13:28:57.801578Z",
          "targets": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Nudge to write a postmortem",
              "type": "workflow"
            }
          ],
          "version": 1
        },
        "properties": {
          "action": {
            "description": "The type of log entry that this is",
            "example": "workflow.updated",
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActorV2"
          },
          "context": {
            "$ref": "#/components/schemas/AuditLogEntryContextV2"
          },
          "occurred_at": {
            "description": "When the entry occurred",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "targets": {
            "description": "The custom field that was created",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Nudge to write a postmortem",
                "type": "workflow"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/AuditLogTargetV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Which version the event is",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "action",
          "occurred_at",
          "version",
          "actor",
          "targets",
          "context"
        ],
        "type": "object"
      },
      "CatalogCreateEntryPayloadV2": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "type": "object"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "catalog_type_id",
          "name",
          "attribute_values"
        ],
        "type": "object"
      },
      "CatalogCreateEntryPayloadV3": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123"
                }
              ],
              "value": {
                "literal": "SEV123"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogEngineParamBindingPayloadV3"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "literal": "SEV123"
                }
              }
            },
            "type": "object"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "catalog_type_id",
          "name",
          "attribute_values"
        ],
        "type": "object"
      },
      "CatalogCreateEntryResultV2": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "abc123",
                    "image_url": "abc123",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "abc123",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "abc123",
                  "image_url": "abc123",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "abc123",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2"
          }
        },
        "required": [
          "catalog_entry"
        ],
        "type": "object"
      },
      "CatalogCreateEntryResultV3": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV3"
          }
        },
        "required": [
          "catalog_entry"
        ],
        "type": "object"
      },
      "CatalogCreateTypePayloadV2": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "alert",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "source_repo_url": "https://github.com/my-company/incident-io-catalog",
          "type_name": "Custom[\"BackstageGroup\"]"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "categories": {
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ],
            "items": {
              "enum": [
                "customer",
                "issue-tracker",
                "product-feature",
                "service",
                "on-call",
                "team",
                "user"
              ],
              "example": "issue-tracker",
              "type": "string"
            },
            "type": "array"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ],
            "example": "yellow",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "alert",
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "escalation-path",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "status-page",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "alert",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "source_repo_url": {
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog",
            "type": "string"
          },
          "type_name": {
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName\"]",
            "example": "Custom[\"BackstageGroup\"]",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "CatalogCreateTypePayloadV3": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "alert",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "source_repo_url": "https://github.com/my-company/incident-io-catalog",
          "type_name": "Custom[\"BackstageGroup\"]"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "categories": {
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ],
            "items": {
              "enum": [
                "customer",
                "issue-tracker",
                "product-feature",
                "service",
                "on-call",
                "team",
                "user"
              ],
              "example": "issue-tracker",
              "type": "string"
            },
            "type": "array"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ],
            "example": "yellow",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "alert",
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "escalation-path",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "status-page",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "alert",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "source_repo_url": {
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog",
            "type": "string"
          },
          "type_name": {
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName\"]",
            "example": "Custom[\"BackstageGroup\"]",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "CatalogCreateTypeResultV2": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogCreateTypeResultV3": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogEngineParamBindingPayloadV3": {
        "example": {
          "array_value": [
            {
              "literal": "SEV123"
            }
          ],
          "value": {
            "literal": "SEV123"
          }
        },
        "properties": {
          "array_value": {
            "description": "If set, this is the array value of the step parameter",
            "example": [
              {
                "literal": "SEV123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogEngineParamBindingValuePayloadV3"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/CatalogEngineParamBindingValuePayloadV3"
          }
        },
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogEngineParamBindingValuePayloadV3": {
        "example": {
          "literal": "SEV123"
        },
        "properties": {
          "literal": {
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogEntryEngineParamBindingV2": {
        "example": {
          "array_value": [
            {
              "catalog_entry": {
                "archived_at": "2021-08-17T14:28:57.801578Z",
                "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "catalog_entry_name": "Primary escalation",
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "helptext": "abc123",
              "image_url": "abc123",
              "is_image_slack_icon": false,
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity",
              "sort_key": "abc123",
              "unavailable": false,
              "value": "abc123"
            }
          ],
          "value": {
            "catalog_entry": {
              "archived_at": "2021-08-17T14:28:57.801578Z",
              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "catalog_entry_name": "Primary escalation",
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
            },
            "helptext": "abc123",
            "image_url": "abc123",
            "is_image_slack_icon": false,
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity",
            "sort_key": "abc123",
            "unavailable": false,
            "value": "abc123"
          }
        },
        "properties": {
          "array_value": {
            "description": "If array_value is set, this helps render the values",
            "example": [
              {
                "catalog_entry": {
                  "archived_at": "2021-08-17T14:28:57.801578Z",
                  "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "catalog_entry_name": "Primary escalation",
                  "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "helptext": "abc123",
                "image_url": "abc123",
                "is_image_slack_icon": false,
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity",
                "sort_key": "abc123",
                "unavailable": false,
                "value": "abc123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogEntryEngineParamBindingValueV2"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/CatalogEntryEngineParamBindingValueV2"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogEntryEngineParamBindingV3": {
        "example": {
          "array_value": [
            {
              "label": "Lawrence Jones",
              "literal": "SEV123"
            }
          ],
          "value": {
            "label": "Lawrence Jones",
            "literal": "SEV123"
          }
        },
        "properties": {
          "array_value": {
            "description": "If the attribute is multi-valued, the value will be returned here.",
            "example": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogEntryEngineParamBindingValueV3"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/CatalogEntryEngineParamBindingValueV3"
          }
        },
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogEntryEngineParamBindingValueV2": {
        "example": {
          "catalog_entry": {
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "catalog_entry_name": "Primary escalation",
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "helptext": "abc123",
          "image_url": "abc123",
          "is_image_slack_icon": false,
          "label": "Lawrence Jones",
          "literal": "SEV123",
          "reference": "incident.severity",
          "sort_key": "abc123",
          "unavailable": false,
          "value": "abc123"
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryReferenceV2"
          },
          "helptext": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": "abc123",
            "type": "string"
          },
          "image_url": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": "abc123",
            "type": "string"
          },
          "is_image_slack_icon": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": false,
            "type": "boolean"
          },
          "label": {
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones",
            "type": "string"
          },
          "literal": {
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123",
            "type": "string"
          },
          "reference": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": "incident.severity",
            "type": "string"
          },
          "sort_key": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": "abc123",
            "type": "string"
          },
          "unavailable": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": false,
            "type": "boolean"
          },
          "value": {
            "description": "This field is deprecated. It will not be present in any responses, and will be removed in a future version",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "label",
          "sort_key"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogEntryEngineParamBindingValueV3": {
        "example": {
          "label": "Lawrence Jones",
          "literal": "SEV123"
        },
        "properties": {
          "label": {
            "description": "A label for this attribute value. If the attribute refers to another Catalog entry, this will be the name of that entry.",
            "example": "Lawrence Jones",
            "type": "string"
          },
          "literal": {
            "description": "The underlying value of the attribute, serialized as a string.\n\nFor String, Text, Number, and Bool typed attributes, this will be empty. For attributes that refer to another catalog entry, this can be the ID, external ID, or one of the aliases of that catalog entry.",
            "example": "SEV123",
            "type": "string"
          }
        },
        "required": [
          "label",
          "sort_key"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogEntryReferenceV2": {
        "example": {
          "archived_at": "2021-08-17T14:28:57.801578Z",
          "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "catalog_entry_name": "Primary escalation",
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "properties": {
          "archived_at": {
            "description": "When this entry was archived",
            "example": "2021-08-17T14:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "catalog_entry_id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "catalog_entry_name": {
            "description": "The name of this entry",
            "example": "Primary escalation",
            "type": "string"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          }
        },
        "required": [
          "catalog_type_id",
          "catalog_entry_id",
          "catalog_entry_name"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogEntryV2": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "archived_at": "2021-08-17T14:28:57.801578Z",
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "abc123",
                  "image_url": "abc123",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "abc123",
                  "unavailable": false,
                  "value": "abc123"
                }
              ],
              "value": {
                "catalog_entry": {
                  "archived_at": "2021-08-17T14:28:57.801578Z",
                  "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "catalog_entry_name": "Primary escalation",
                  "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "helptext": "abc123",
                "image_url": "abc123",
                "is_image_slack_icon": false,
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity",
                "sort_key": "abc123",
                "unavailable": false,
                "value": "abc123"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call",
          "rank": 3,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "archived_at": {
            "description": "When this entry was archived",
            "example": "2021-08-17T14:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogEntryEngineParamBindingV2"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "abc123",
                    "image_url": "abc123",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "abc123",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "abc123",
                  "image_url": "abc123",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "abc123",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "type": "object"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "created_at": {
            "description": "When this entry was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          },
          "updated_at": {
            "description": "When this entry was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "catalog_type_id",
          "name",
          "aliases",
          "rank",
          "attribute_values",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogEntryV3": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "archived_at": "2021-08-17T14:28:57.801578Z",
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123"
              }
            }
          },
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call",
          "rank": 3,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "archived_at": {
            "description": "When this entry was archived",
            "example": "2021-08-17T14:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogEntryEngineParamBindingV3"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123"
                }
              }
            },
            "type": "object"
          },
          "catalog_type_id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "created_at": {
            "description": "When this entry was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          },
          "updated_at": {
            "description": "When this entry was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "catalog_type_id",
          "name",
          "aliases",
          "rank",
          "attribute_values",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogListEntriesResultV2": {
        "example": {
          "catalog_entries": [
            {
              "aliases": [
                "lawrence@incident.io",
                "lawrence"
              ],
              "archived_at": "2021-08-17T14:28:57.801578Z",
              "attribute_values": {
                "abc123": {
                  "array_value": [
                    {
                      "catalog_entry": {
                        "archived_at": "2021-08-17T14:28:57.801578Z",
                        "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "catalog_entry_name": "Primary escalation",
                        "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      },
                      "helptext": "abc123",
                      "image_url": "abc123",
                      "is_image_slack_icon": false,
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity",
                      "sort_key": "abc123",
                      "unavailable": false,
                      "value": "abc123"
                    }
                  ],
                  "value": {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "abc123",
                    "image_url": "abc123",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "abc123",
                    "unavailable": false,
                    "value": "abc123"
                  }
                }
              },
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Primary On-call",
              "rank": 3,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "catalog_entries": {
            "example": [
              {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "archived_at": "2021-08-17T14:28:57.801578Z",
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "catalog_entry": {
                          "archived_at": "2021-08-17T14:28:57.801578Z",
                          "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "catalog_entry_name": "Primary escalation",
                          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "helptext": "abc123",
                        "image_url": "abc123",
                        "is_image_slack_icon": false,
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity",
                        "sort_key": "abc123",
                        "unavailable": false,
                        "value": "abc123"
                      }
                    ],
                    "value": {
                      "catalog_entry": {
                        "archived_at": "2021-08-17T14:28:57.801578Z",
                        "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "catalog_entry_name": "Primary escalation",
                        "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      },
                      "helptext": "abc123",
                      "image_url": "abc123",
                      "is_image_slack_icon": false,
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity",
                      "sort_key": "abc123",
                      "unavailable": false,
                      "value": "abc123"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call",
                "rank": 3,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogEntryV2"
            },
            "type": "array"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultV2"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entries",
          "pagination_meta"
        ],
        "type": "object"
      },
      "CatalogListEntriesResultV3": {
        "example": {
          "catalog_entries": [
            {
              "aliases": [
                "lawrence@incident.io",
                "lawrence"
              ],
              "archived_at": "2021-08-17T14:28:57.801578Z",
              "attribute_values": {
                "abc123": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123"
                  }
                }
              },
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Primary On-call",
              "rank": 3,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "catalog_entries": {
            "example": [
              {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "archived_at": "2021-08-17T14:28:57.801578Z",
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call",
                "rank": 3,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogEntryV3"
            },
            "type": "array"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultV3"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entries",
          "pagination_meta"
        ],
        "type": "object"
      },
      "CatalogListResourcesResultV2": {
        "example": {
          "resources": [
            {
              "category": "custom",
              "description": "Boolean true or false value",
              "label": "GitHub Repository",
              "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
              "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
            }
          ]
        },
        "properties": {
          "resources": {
            "example": [
              {
                "category": "custom",
                "description": "Boolean true or false value",
                "label": "GitHub Repository",
                "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogResourceV2"
            },
            "type": "array"
          }
        },
        "required": [
          "resources"
        ],
        "type": "object"
      },
      "CatalogListResourcesResultV3": {
        "example": {
          "resources": [
            {
              "category": "custom",
              "description": "Boolean true or false value",
              "label": "GitHub Repository",
              "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
              "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
            }
          ]
        },
        "properties": {
          "resources": {
            "example": [
              {
                "category": "custom",
                "description": "Boolean true or false value",
                "label": "GitHub Repository",
                "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogResourceV3"
            },
            "type": "array"
          }
        },
        "required": [
          "resources"
        ],
        "type": "object"
      },
      "CatalogListTypesResultV2": {
        "example": {
          "catalog_types": [
            {
              "annotations": {
                "incident.io/catalog-importer/id": "id-of-config"
              },
              "categories": [
                "issue-tracker"
              ],
              "color": "yellow",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Represents Kubernetes clusters that we run inside of GKE.",
              "dynamic_resource_parameter": "abc123",
              "estimated_count": 7,
              "icon": "alert",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_editable": false,
              "last_synced_at": "2021-08-17T13:28:57.801578Z",
              "name": "Kubernetes Cluster",
              "ranked": true,
              "registry_type": "PagerDutyService",
              "required_integrations": [
                "pager_duty"
              ],
              "schema": {
                "attributes": [
                  {
                    "array": false,
                    "backlink_attribute": "abc123",
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "manual",
                    "name": "tier",
                    "path": [
                      {
                        "attribute_id": "abc123",
                        "attribute_name": "abc123"
                      }
                    ],
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              },
              "semantic_type": "custom",
              "source_repo_url": "https://github.com/my-company/incident-io-catalog",
              "type_name": "Custom[\"BackstageGroup\"]",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "catalog_types": {
            "example": [
              {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "dynamic_resource_parameter": "abc123",
                "estimated_count": 7,
                "icon": "alert",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_editable": false,
                "last_synced_at": "2021-08-17T13:28:57.801578Z",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "registry_type": "PagerDutyService",
                "required_integrations": [
                  "pager_duty"
                ],
                "schema": {
                  "attributes": [
                    {
                      "array": false,
                      "backlink_attribute": "abc123",
                      "id": "01GW2G3V0S59R238FAHPDS1R66",
                      "mode": "manual",
                      "name": "tier",
                      "path": [
                        {
                          "attribute_id": "abc123",
                          "attribute_name": "abc123"
                        }
                      ],
                      "type": "Custom[\"Service\"]"
                    }
                  ],
                  "version": 1
                },
                "semantic_type": "custom",
                "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                "type_name": "Custom[\"BackstageGroup\"]",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeV2"
            },
            "type": "array"
          }
        },
        "required": [
          "catalog_types"
        ],
        "type": "object"
      },
      "CatalogListTypesResultV3": {
        "example": {
          "catalog_types": [
            {
              "annotations": {
                "incident.io/catalog-importer/id": "id-of-config"
              },
              "categories": [
                "issue-tracker"
              ],
              "color": "yellow",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Represents Kubernetes clusters that we run inside of GKE.",
              "dynamic_resource_parameter": "abc123",
              "estimated_count": 7,
              "icon": "alert",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_editable": false,
              "last_synced_at": "2021-08-17T13:28:57.801578Z",
              "name": "Kubernetes Cluster",
              "ranked": true,
              "registry_type": "PagerDutyService",
              "required_integrations": [
                "pager_duty"
              ],
              "schema": {
                "attributes": [
                  {
                    "array": false,
                    "backlink_attribute": "abc123",
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "api",
                    "name": "tier",
                    "path": [
                      {
                        "attribute_id": "abc123",
                        "attribute_name": "abc123"
                      }
                    ],
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              },
              "source_repo_url": "https://github.com/my-company/incident-io-catalog",
              "type_name": "Custom[\"BackstageGroup\"]",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "catalog_types": {
            "example": [
              {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "dynamic_resource_parameter": "abc123",
                "estimated_count": 7,
                "icon": "alert",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_editable": false,
                "last_synced_at": "2021-08-17T13:28:57.801578Z",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "registry_type": "PagerDutyService",
                "required_integrations": [
                  "pager_duty"
                ],
                "schema": {
                  "attributes": [
                    {
                      "array": false,
                      "backlink_attribute": "abc123",
                      "id": "01GW2G3V0S59R238FAHPDS1R66",
                      "mode": "api",
                      "name": "tier",
                      "path": [
                        {
                          "attribute_id": "abc123",
                          "attribute_name": "abc123"
                        }
                      ],
                      "type": "Custom[\"Service\"]"
                    }
                  ],
                  "version": 1
                },
                "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                "type_name": "Custom[\"BackstageGroup\"]",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeV3"
            },
            "type": "array"
          }
        },
        "required": [
          "catalog_types"
        ],
        "type": "object"
      },
      "CatalogResourceV2": {
        "example": {
          "category": "custom",
          "description": "Boolean true or false value",
          "label": "GitHub Repository",
          "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
          "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
        },
        "properties": {
          "category": {
            "description": "Which category of resource",
            "enum": [
              "primitive",
              "custom",
              "external"
            ],
            "example": "custom",
            "type": "string"
          },
          "description": {
            "description": "Human readable description for this resource",
            "example": "Boolean true or false value",
            "type": "string"
          },
          "label": {
            "description": "Label for this catalog resource type",
            "example": "GitHub Repository",
            "type": "string"
          },
          "type": {
            "description": "Catalog type name for this resource",
            "example": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
            "type": "string"
          },
          "value_docstring": {
            "description": "Documentation for the literal string value of this resource",
            "example": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website",
            "type": "string"
          }
        },
        "required": [
          "type",
          "label",
          "description",
          "value_docstring",
          "category",
          "config",
          "is_user_link"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogResourceV3": {
        "example": {
          "category": "custom",
          "description": "Boolean true or false value",
          "label": "GitHub Repository",
          "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
          "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
        },
        "properties": {
          "category": {
            "description": "Which category of resource",
            "enum": [
              "primitive",
              "custom",
              "external"
            ],
            "example": "custom",
            "type": "string"
          },
          "description": {
            "description": "Human readable description for this resource",
            "example": "Boolean true or false value",
            "type": "string"
          },
          "label": {
            "description": "Label for this catalog resource type",
            "example": "GitHub Repository",
            "type": "string"
          },
          "type": {
            "description": "Catalog type name for this resource",
            "example": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
            "type": "string"
          },
          "value_docstring": {
            "description": "Documentation for the literal string value of this resource",
            "example": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website",
            "type": "string"
          }
        },
        "required": [
          "type",
          "label",
          "description",
          "value_docstring",
          "category",
          "config",
          "is_user_link"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogShowEntryResultV2": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "abc123",
                    "image_url": "abc123",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "abc123",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "abc123",
                  "image_url": "abc123",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "abc123",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entry"
        ],
        "type": "object"
      },
      "CatalogShowEntryResultV3": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV3"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entry"
        ],
        "type": "object"
      },
      "CatalogShowTypeResultV2": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogShowTypeResultV3": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogTypeAttributePathItemPayloadV2": {
        "example": {
          "attribute_id": "abc123"
        },
        "properties": {
          "attribute_id": {
            "description": "the ID of the attribute to use",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "attribute_id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogTypeAttributePathItemPayloadV3": {
        "example": {
          "attribute_id": "abc123"
        },
        "properties": {
          "attribute_id": {
            "description": "the ID of the attribute to use",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "attribute_id"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogTypeAttributePathItemV2": {
        "example": {
          "attribute_id": "abc123",
          "attribute_name": "abc123"
        },
        "properties": {
          "attribute_id": {
            "description": "the ID of the attribute to use",
            "example": "abc123",
            "type": "string"
          },
          "attribute_name": {
            "description": "the name of the attribute to use",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "attribute_id",
          "attribute_name"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogTypeAttributePathItemV3": {
        "example": {
          "attribute_id": "abc123",
          "attribute_name": "abc123"
        },
        "properties": {
          "attribute_id": {
            "description": "the ID of the attribute to use",
            "example": "abc123",
            "type": "string"
          },
          "attribute_name": {
            "description": "the name of the attribute to use",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "attribute_id",
          "attribute_name"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogTypeAttributePayloadV2": {
        "example": {
          "array": false,
          "backlink_attribute": "abc123",
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "",
          "name": "tier",
          "path": [
            {
              "attribute_id": "abc123"
            }
          ],
          "type": "Custom[\"Service\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "backlink_attribute": {
            "description": "The attribute to use (if this is a backlink)",
            "example": "abc123",
            "type": "string"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "mode": {
            "description": "Controls how this attribute is modified",
            "enum": [
              "",
              "manual",
              "external",
              "internal",
              "dynamic",
              "backlink",
              "path"
            ],
            "example": "",
            "type": "string",
            "x-public-api-version": "v2"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "tier",
            "type": "string"
          },
          "path": {
            "description": "The path to use (if this is an path)",
            "example": [
              {
                "attribute_id": "abc123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePathItemPayloadV2"
            },
            "type": "array"
          },
          "type": {
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogTypeAttributePayloadV3": {
        "example": {
          "array": false,
          "backlink_attribute": "abc123",
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "",
          "name": "tier",
          "path": [
            {
              "attribute_id": "abc123"
            }
          ],
          "type": "Custom[\"Service\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "backlink_attribute": {
            "description": "The attribute to use (if this is a backlink)",
            "example": "abc123",
            "type": "string"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "mode": {
            "description": "Controls how this attribute is modified",
            "enum": [
              "",
              "api",
              "dashboard",
              "external",
              "internal",
              "dynamic",
              "backlink",
              "path"
            ],
            "example": "",
            "type": "string",
            "x-public-api-version": "v3"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "tier",
            "type": "string"
          },
          "path": {
            "description": "The path to use (if this is an path)",
            "example": [
              {
                "attribute_id": "abc123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePathItemPayloadV3"
            },
            "type": "array"
          },
          "type": {
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogTypeAttributeV2": {
        "example": {
          "array": false,
          "backlink_attribute": "abc123",
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "",
          "name": "tier",
          "path": [
            {
              "attribute_id": "abc123",
              "attribute_name": "abc123"
            }
          ],
          "type": "Custom[\"Service\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "backlink_attribute": {
            "description": "The attribute to use (if this is a backlink)",
            "example": "abc123",
            "type": "string"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "mode": {
            "description": "Controls how this attribute is modified",
            "enum": [
              "",
              "manual",
              "external",
              "internal",
              "dynamic",
              "backlink",
              "path"
            ],
            "example": "",
            "type": "string",
            "x-public-api-version": "v2"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "tier",
            "type": "string"
          },
          "path": {
            "description": "The path to use (if this is a path attribute)",
            "example": [
              {
                "attribute_id": "abc123",
                "attribute_name": "abc123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePathItemV2"
            },
            "type": "array"
          },
          "type": {
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]",
            "type": "string"
          }
        },
        "required": [
          "id",
          "mode",
          "name",
          "type",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogTypeAttributeV3": {
        "example": {
          "array": false,
          "backlink_attribute": "abc123",
          "id": "01GW2G3V0S59R238FAHPDS1R66",
          "mode": "",
          "name": "tier",
          "path": [
            {
              "attribute_id": "abc123",
              "attribute_name": "abc123"
            }
          ],
          "type": "Custom[\"Service\"]"
        },
        "properties": {
          "array": {
            "description": "Whether this attribute is an array",
            "example": false,
            "type": "boolean"
          },
          "backlink_attribute": {
            "description": "The attribute to use (if this is a backlink)",
            "example": "abc123",
            "type": "string"
          },
          "id": {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "type": "string"
          },
          "mode": {
            "description": "Controls how this attribute is modified",
            "enum": [
              "",
              "api",
              "dashboard",
              "external",
              "internal",
              "dynamic",
              "backlink",
              "path"
            ],
            "example": "",
            "type": "string",
            "x-public-api-version": "v3"
          },
          "name": {
            "description": "Unique name of this attribute",
            "example": "tier",
            "type": "string"
          },
          "path": {
            "description": "The path to use (if this is a path attribute)",
            "example": [
              {
                "attribute_id": "abc123",
                "attribute_name": "abc123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePathItemV3"
            },
            "type": "array"
          },
          "type": {
            "description": "Catalog type name for this attribute",
            "example": "Custom[\"Service\"]",
            "type": "string"
          }
        },
        "required": [
          "id",
          "mode",
          "name",
          "type",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogTypeSchemaV2": {
        "example": {
          "attributes": [
            {
              "array": false,
              "backlink_attribute": "abc123",
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "",
              "name": "tier",
              "path": [
                {
                  "attribute_id": "abc123",
                  "attribute_name": "abc123"
                }
              ],
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "properties": {
          "attributes": {
            "description": "Attributes of this catalog type",
            "example": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123",
                    "attribute_name": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributeV2"
            },
            "type": "array"
          },
          "version": {
            "description": "The version number of this schema",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "attributes",
          "version"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogTypeSchemaV3": {
        "example": {
          "attributes": [
            {
              "array": false,
              "backlink_attribute": "abc123",
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "",
              "name": "tier",
              "path": [
                {
                  "attribute_id": "abc123",
                  "attribute_name": "abc123"
                }
              ],
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "properties": {
          "attributes": {
            "description": "Attributes of this catalog type",
            "example": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123",
                    "attribute_name": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributeV3"
            },
            "type": "array"
          },
          "version": {
            "description": "The version number of this schema",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "attributes",
          "version"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogTypeV2": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "customer"
          ],
          "color": "yellow",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "dynamic_resource_parameter": "abc123",
          "estimated_count": 7,
          "icon": "alert",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_editable": false,
          "last_synced_at": "2021-08-17T13:28:57.801578Z",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "registry_type": "PagerDutyService",
          "required_integrations": [
            "pager_duty"
          ],
          "schema": {
            "attributes": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123",
                    "attribute_name": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "version": 1
          },
          "semantic_type": "custom",
          "source_repo_url": "https://github.com/my-company/incident-io-catalog",
          "type_name": "Custom[\"BackstageGroup\"]",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "categories": {
            "description": "What categories is this type considered part of",
            "example": [
              "customer"
            ],
            "items": {
              "enum": [
                "customer",
                "issue-tracker",
                "product-feature",
                "service",
                "on-call",
                "team",
                "user"
              ],
              "example": "customer",
              "type": "string",
              "x-public-api-version": "v2"
            },
            "type": "array"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ],
            "example": "yellow",
            "type": "string"
          },
          "created_at": {
            "description": "When this type was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "dynamic_resource_parameter": {
            "description": "If this is a dynamic catalog type, this will be the unique parameter for identitfying this resource externally.",
            "example": "abc123",
            "type": "string"
          },
          "estimated_count": {
            "description": "If populated, gives an estimated count of entries for this type",
            "example": 7,
            "format": "int64",
            "type": "integer"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "alert",
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "escalation-path",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "status-page",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "alert",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_editable": {
            "description": "Catalog types that are synced with external resources can't be edited",
            "example": false,
            "type": "boolean"
          },
          "last_synced_at": {
            "description": "When this type was last synced (if it's ever been sync'd)",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "registry_type": {
            "description": "The registry resource this type is synced from, if any",
            "example": "PagerDutyService",
            "type": "string"
          },
          "required_integrations": {
            "description": "If populated, the integrations required for this type",
            "example": [
              "pager_duty"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "schema": {
            "$ref": "#/components/schemas/CatalogTypeSchemaV2"
          },
          "semantic_type": {
            "description": "This type has been deprecated, and will always be empty.",
            "example": "abc123",
            "type": "string",
            "x-public-api-version": "v2"
          },
          "source_repo_url": {
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog",
            "type": "string"
          },
          "type_name": {
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName\"]",
            "example": "Custom[\"BackstageGroup\"]",
            "type": "string"
          },
          "updated_at": {
            "description": "When this type was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type_name",
          "semantic_type",
          "ranked",
          "schema",
          "icon",
          "categories",
          "color",
          "is_editable",
          "annotations",
          "created_at",
          "updated_at",
          "engine_resource_type",
          "mode",
          "use_name_as_identifier"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CatalogTypeV3": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "customer"
          ],
          "color": "yellow",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "dynamic_resource_parameter": "abc123",
          "estimated_count": 7,
          "icon": "alert",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_editable": false,
          "last_synced_at": "2021-08-17T13:28:57.801578Z",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "registry_type": "PagerDutyService",
          "required_integrations": [
            "pager_duty"
          ],
          "schema": {
            "attributes": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123",
                    "attribute_name": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "version": 1
          },
          "source_repo_url": "https://github.com/my-company/incident-io-catalog",
          "type_name": "Custom[\"BackstageGroup\"]",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "categories": {
            "description": "What categories is this type considered part of",
            "example": [
              "customer"
            ],
            "items": {
              "enum": [
                "customer",
                "issue-tracker",
                "product-feature",
                "service",
                "on-call",
                "team",
                "user"
              ],
              "example": "customer",
              "type": "string",
              "x-public-api-version": "v3"
            },
            "type": "array"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ],
            "example": "yellow",
            "type": "string"
          },
          "created_at": {
            "description": "When this type was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "dynamic_resource_parameter": {
            "description": "If this is a dynamic catalog type, this will be the unique parameter for identitfying this resource externally.",
            "example": "abc123",
            "type": "string"
          },
          "estimated_count": {
            "description": "If populated, gives an estimated count of entries for this type",
            "example": 7,
            "format": "int64",
            "type": "integer"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "alert",
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "escalation-path",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "status-page",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "alert",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_editable": {
            "description": "Catalog types that are synced with external resources can't be edited",
            "example": false,
            "type": "boolean"
          },
          "last_synced_at": {
            "description": "When this type was last synced (if it's ever been sync'd)",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "registry_type": {
            "description": "The registry resource this type is synced from, if any",
            "example": "PagerDutyService",
            "type": "string"
          },
          "required_integrations": {
            "description": "If populated, the integrations required for this type",
            "example": [
              "pager_duty"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "schema": {
            "$ref": "#/components/schemas/CatalogTypeSchemaV3"
          },
          "source_repo_url": {
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog",
            "type": "string"
          },
          "type_name": {
            "description": "The type name of this catalog type, to be used when defining attributes. This is immutable once a CatalogType has been created. For non-externally sync types, it must follow the pattern Custom[\"SomeName\"]",
            "example": "Custom[\"BackstageGroup\"]",
            "type": "string"
          },
          "updated_at": {
            "description": "When this type was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type_name",
          "ranked",
          "schema",
          "icon",
          "categories",
          "color",
          "is_editable",
          "annotations",
          "created_at",
          "updated_at",
          "engine_resource_type",
          "mode",
          "use_name_as_identifier"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "CatalogUpdateEntryPayloadV2": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            },
            "type": "object"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "attribute_values"
        ],
        "type": "object"
      },
      "CatalogUpdateEntryPayloadV3": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "attribute_values": {
            "abc123": {
              "array_value": [
                {
                  "literal": "SEV123"
                }
              ],
              "value": {
                "literal": "SEV123"
              }
            }
          },
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "name": "Primary On-call",
          "rank": 3,
          "update_attributes": [
            "abc123"
          ]
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "attribute_values": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogEngineParamBindingPayloadV3"
            },
            "description": "Values of this entry",
            "example": {
              "abc123": {
                "array_value": [
                  {
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "literal": "SEV123"
                }
              }
            },
            "type": "object"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          },
          "rank": {
            "description": "When catalog type is ranked, this is used to help order things",
            "example": 3,
            "format": "int32",
            "type": "integer"
          },
          "update_attributes": {
            "description": "If provided, only update these attribute_values keys. If not provided, update all attribute values.\nIf you specify an attribute key that's not in your payload, the associated attribute value will be cleared.",
            "example": [
              "abc123"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "attribute_values"
        ],
        "type": "object"
      },
      "CatalogUpdateEntryResultV2": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "catalog_entry": {
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "catalog_entry_name": "Primary escalation",
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "helptext": "abc123",
                    "image_url": "abc123",
                    "is_image_slack_icon": false,
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity",
                    "sort_key": "abc123",
                    "unavailable": false,
                    "value": "abc123"
                  }
                ],
                "value": {
                  "catalog_entry": {
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "catalog_entry_name": "Primary escalation",
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  },
                  "helptext": "abc123",
                  "image_url": "abc123",
                  "is_image_slack_icon": false,
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity",
                  "sort_key": "abc123",
                  "unavailable": false,
                  "value": "abc123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV2"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entry"
        ],
        "type": "object"
      },
      "CatalogUpdateEntryResultV3": {
        "example": {
          "catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "archived_at": "2021-08-17T14:28:57.801578Z",
            "attribute_values": {
              "abc123": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123"
                }
              }
            },
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call",
            "rank": 3,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_entry": {
            "$ref": "#/components/schemas/CatalogEntryV3"
          },
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          }
        },
        "required": [
          "catalog_type",
          "catalog_entry"
        ],
        "type": "object"
      },
      "CatalogUpdateTypePayloadV2": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "alert",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "source_repo_url": "https://github.com/my-company/incident-io-catalog"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "categories": {
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ],
            "items": {
              "enum": [
                "customer",
                "issue-tracker",
                "product-feature",
                "service",
                "on-call",
                "team",
                "user"
              ],
              "example": "issue-tracker",
              "type": "string"
            },
            "type": "array"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ],
            "example": "yellow",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "alert",
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "escalation-path",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "status-page",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "alert",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "source_repo_url": {
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "CatalogUpdateTypePayloadV3": {
        "example": {
          "annotations": {
            "incident.io/catalog-importer/id": "id-of-config"
          },
          "categories": [
            "issue-tracker"
          ],
          "color": "yellow",
          "description": "Represents Kubernetes clusters that we run inside of GKE.",
          "icon": "alert",
          "name": "Kubernetes Cluster",
          "ranked": true,
          "source_repo_url": "https://github.com/my-company/incident-io-catalog"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about this type",
            "example": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "type": "object"
          },
          "categories": {
            "description": "What categories is this type considered part of",
            "example": [
              "issue-tracker"
            ],
            "items": {
              "enum": [
                "customer",
                "issue-tracker",
                "product-feature",
                "service",
                "on-call",
                "team",
                "user"
              ],
              "example": "issue-tracker",
              "type": "string"
            },
            "type": "array"
          },
          "color": {
            "description": "Sets the display color of this type in the dashboard",
            "enum": [
              "yellow",
              "green",
              "blue",
              "violet",
              "pink",
              "cyan",
              "orange"
            ],
            "example": "yellow",
            "type": "string"
          },
          "description": {
            "description": "Human readble description of this type",
            "example": "Represents Kubernetes clusters that we run inside of GKE.",
            "type": "string"
          },
          "icon": {
            "description": "Sets the display icon of this type in the dashboard",
            "enum": [
              "alert",
              "bolt",
              "box",
              "briefcase",
              "browser",
              "bulb",
              "calendar",
              "clock",
              "cog",
              "components",
              "database",
              "doc",
              "email",
              "escalation-path",
              "files",
              "flag",
              "folder",
              "globe",
              "money",
              "server",
              "severity",
              "status-page",
              "store",
              "star",
              "tag",
              "user",
              "users"
            ],
            "example": "alert",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this type",
            "example": "Kubernetes Cluster",
            "type": "string"
          },
          "ranked": {
            "description": "If this type should be ranked",
            "example": true,
            "type": "boolean"
          },
          "source_repo_url": {
            "description": "The url of the external repository where this type is managed",
            "example": "https://github.com/my-company/incident-io-catalog",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "CatalogUpdateTypeResultV2": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogUpdateTypeResultV3": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogUpdateTypeSchemaPayloadV2": {
        "example": {
          "attributes": [
            {
              "array": false,
              "backlink_attribute": "abc123",
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "manual",
              "name": "tier",
              "path": [
                {
                  "attribute_id": "abc123"
                }
              ],
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "properties": {
          "attributes": {
            "example": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "manual",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePayloadV2"
            },
            "type": "array"
          },
          "version": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "attributes",
          "version",
          "name",
          "description",
          "type_name",
          "semantic_type",
          "ranked",
          "schema",
          "icon",
          "categories",
          "color",
          "is_editable",
          "annotations",
          "created_at",
          "updated_at",
          "engine_resource_type",
          "mode",
          "use_name_as_identifier"
        ],
        "type": "object"
      },
      "CatalogUpdateTypeSchemaPayloadV3": {
        "example": {
          "attributes": [
            {
              "array": false,
              "backlink_attribute": "abc123",
              "id": "01GW2G3V0S59R238FAHPDS1R66",
              "mode": "api",
              "name": "tier",
              "path": [
                {
                  "attribute_id": "abc123"
                }
              ],
              "type": "Custom[\"Service\"]"
            }
          ],
          "version": 1
        },
        "properties": {
          "attributes": {
            "example": [
              {
                "array": false,
                "backlink_attribute": "abc123",
                "id": "01GW2G3V0S59R238FAHPDS1R66",
                "mode": "api",
                "name": "tier",
                "path": [
                  {
                    "attribute_id": "abc123"
                  }
                ],
                "type": "Custom[\"Service\"]"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CatalogTypeAttributePayloadV3"
            },
            "type": "array"
          },
          "version": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "attributes",
          "version",
          "name",
          "description",
          "type_name",
          "ranked",
          "schema",
          "icon",
          "categories",
          "color",
          "is_editable",
          "annotations",
          "created_at",
          "updated_at",
          "engine_resource_type",
          "mode",
          "use_name_as_identifier"
        ],
        "type": "object"
      },
      "CatalogUpdateTypeSchemaResultV2": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "manual",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "semantic_type": "custom",
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV2"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "CatalogUpdateTypeSchemaResultV3": {
        "example": {
          "catalog_type": {
            "annotations": {
              "incident.io/catalog-importer/id": "id-of-config"
            },
            "categories": [
              "issue-tracker"
            ],
            "color": "yellow",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Represents Kubernetes clusters that we run inside of GKE.",
            "dynamic_resource_parameter": "abc123",
            "estimated_count": 7,
            "icon": "alert",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_editable": false,
            "last_synced_at": "2021-08-17T13:28:57.801578Z",
            "name": "Kubernetes Cluster",
            "ranked": true,
            "registry_type": "PagerDutyService",
            "required_integrations": [
              "pager_duty"
            ],
            "schema": {
              "attributes": [
                {
                  "array": false,
                  "backlink_attribute": "abc123",
                  "id": "01GW2G3V0S59R238FAHPDS1R66",
                  "mode": "api",
                  "name": "tier",
                  "path": [
                    {
                      "attribute_id": "abc123",
                      "attribute_name": "abc123"
                    }
                  ],
                  "type": "Custom[\"Service\"]"
                }
              ],
              "version": 1
            },
            "source_repo_url": "https://github.com/my-company/incident-io-catalog",
            "type_name": "Custom[\"BackstageGroup\"]",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "catalog_type": {
            "$ref": "#/components/schemas/CatalogTypeV3"
          }
        },
        "required": [
          "catalog_type"
        ],
        "type": "object"
      },
      "ConditionGroupPayloadV2": {
        "example": {
          "conditions": [
            {
              "operation": "one_of",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": "incident.severity"
            }
          ]
        },
        "properties": {
          "conditions": {
            "description": "All conditions in this list must be satisfied for the group to be satisfied",
            "example": [
              {
                "operation": "one_of",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": "incident.severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionPayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "conditions"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ConditionGroupV2": {
        "example": {
          "conditions": [
            {
              "operation": {
                "label": "Lawrence Jones",
                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
              },
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": {
                "label": "Incident Severity",
                "reference": "incident.severity"
              }
            }
          ]
        },
        "properties": {
          "conditions": {
            "description": "All conditions in this list must be satisfied for the group to be satisfied",
            "example": [
              {
                "operation": {
                  "label": "Lawrence Jones",
                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                },
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": {
                  "label": "Incident Severity",
                  "reference": "incident.severity"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionV2"
            },
            "type": "array"
          }
        },
        "required": [
          "conditions"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ConditionOperationV2": {
        "example": {
          "label": "Lawrence Jones",
          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
        },
        "properties": {
          "label": {
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones",
            "type": "string"
          },
          "value": {
            "description": "Unique identifier for this option",
            "example": "01FCQSP07Z74QMMYPDDGQB9FTG",
            "type": "string"
          }
        },
        "required": [
          "label",
          "value",
          "sort_key"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ConditionPayloadV2": {
        "example": {
          "operation": "one_of",
          "param_bindings": [
            {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ],
          "subject": "incident.severity"
        },
        "properties": {
          "operation": {
            "description": "The name of the operation on the subject",
            "example": "one_of",
            "type": "string"
          },
          "param_bindings": {
            "description": "List of parameter bindings",
            "example": [
              {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "type": "array"
          },
          "subject": {
            "description": "The reference of the subject in the trigger scope",
            "example": "incident.severity",
            "type": "string"
          }
        },
        "required": [
          "subject",
          "operation",
          "param_bindings"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ConditionSubjectV2": {
        "example": {
          "label": "Incident Severity",
          "reference": "incident.severity"
        },
        "properties": {
          "label": {
            "description": "Human readable identifier for the subject",
            "example": "Incident Severity",
            "type": "string"
          },
          "reference": {
            "description": "Reference into the scope for the value of the subject",
            "example": "incident.severity",
            "type": "string"
          }
        },
        "required": [
          "label",
          "icon",
          "reference"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ConditionV2": {
        "example": {
          "operation": {
            "label": "Lawrence Jones",
            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
          },
          "param_bindings": [
            {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ],
          "subject": {
            "label": "Incident Severity",
            "reference": "incident.severity"
          }
        },
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/ConditionOperationV2"
          },
          "param_bindings": {
            "description": "Bindings for the operation parameters",
            "example": [
              {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingV2"
            },
            "type": "array"
          },
          "subject": {
            "$ref": "#/components/schemas/ConditionSubjectV2"
          }
        },
        "required": [
          "subject",
          "operation",
          "params",
          "param_bindings"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CreateHTTPRequestBody": {
        "example": {
          "deduplication_key": "4293868629",
          "description": "We've detected a number of timeouts on hello.world.com, the service may be down. To fix...",
          "metadata": {
            "service": "hello.world.com",
            "team": [
              "my-team"
            ]
          },
          "source_url": "https://www.my-alerting-platform.com/alerts/my-alert-123",
          "status": "firing",
          "title": "*errors.withMessage: PG::Error failed to connect"
        },
        "properties": {
          "deduplication_key": {
            "description": "A deduplication key can be provided to uniquely reference this alert from your alert source. If you send an event with the same deduplication_key multiple times, only one alert will be created in incident.io for this alert source config.",
            "example": "4293868629",
            "type": "string"
          },
          "description": {
            "description": "Description that optionally adds more detail to title. Supports markdown.",
            "example": "We've detected a number of timeouts on hello.world.com, the service may be down. To fix...",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Any additional metadata that you've configured your alert source to parse",
            "example": {
              "service": "hello.world.com",
              "team": [
                "my-team"
              ]
            },
            "type": "object"
          },
          "source_url": {
            "description": "If applicable, a link to the alert in the upstream system",
            "example": "https://www.my-alerting-platform.com/alerts/my-alert-123",
            "type": "string"
          },
          "status": {
            "description": "Current status of this alert",
            "enum": [
              "firing",
              "resolved"
            ],
            "example": "firing",
            "type": "string"
          },
          "title": {
            "description": "Alert title which is used when summarising the alert",
            "example": "*errors.withMessage: PG::Error failed to connect",
            "type": "string"
          }
        },
        "required": [
          "title",
          "status"
        ],
        "type": "object"
      },
      "CreateManagedResourceRequestBody": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "resource_id": "abc123",
          "resource_type": "schedule"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "type": "object"
          },
          "resource_id": {
            "description": "The ID of the related resource",
            "example": "abc123",
            "type": "string"
          },
          "resource_type": {
            "description": "The type of the related resource",
            "enum": [
              "escalation_path",
              "schedule",
              "workflow"
            ],
            "example": "schedule",
            "type": "string"
          }
        },
        "required": [
          "annotations",
          "resource_type",
          "resource_id",
          "managed_by"
        ],
        "type": "object"
      },
      "CreateManagedResourceResponseBody": {
        "example": {
          "managed_resource": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "managed_by": "dashboard",
            "resource_id": "abc123",
            "resource_type": "schedule",
            "source_url": "https://github.com/my-company/infrastructure"
          }
        },
        "properties": {
          "managed_resource": {
            "$ref": "#/components/schemas/ManagedResourceV2"
          }
        },
        "required": [
          "managed_resource"
        ],
        "type": "object"
      },
      "CreatePathResponseBody": {
        "example": {
          "escalation_path": {
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Urgent Support",
            "path": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "user",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "working_hours": [
              {
                "id": "abc123",
                "name": "abc123",
                "timezone": "abc123",
                "weekday_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "tuesday"
                  }
                ]
              }
            ]
          }
        },
        "properties": {
          "escalation_path": {
            "$ref": "#/components/schemas/EscalationPathV2"
          }
        },
        "required": [
          "escalation_path"
        ],
        "type": "object"
      },
      "CreateRequestBody": {
        "example": {
          "incident_id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "resource": {
            "external_id": "123",
            "resource_type": "pager_duty_incident"
          }
        },
        "properties": {
          "incident_id": {
            "description": "ID of the incident to add an attachment to",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "resource": {
            "example": {
              "external_id": "123",
              "resource_type": "pager_duty_incident"
            },
            "properties": {
              "external_id": {
                "description": "ID of the resource in the external system",
                "example": "123",
                "type": "string"
              },
              "resource_type": {
                "description": "E.g. PagerDuty: the external system that holds the resource",
                "enum": [
                  "pager_duty_incident",
                  "opsgenie_alert",
                  "datadog_monitor_alert",
                  "github_pull_request",
                  "gitlab_merge_request",
                  "sentry_issue",
                  "jira_issue",
                  "atlassian_statuspage_incident",
                  "zendesk_ticket",
                  "google_calendar_event",
                  "outlook_calendar_event",
                  "slack_file",
                  "scrubbed",
                  "statuspage_incident"
                ],
                "example": "pager_duty_incident",
                "type": "string"
              }
            },
            "required": [
              "id",
              "permalink",
              "external_id",
              "title",
              "resource_type",
              "resource_type_label",
              "created_at",
              "updated_at"
            ],
            "type": "object"
          }
        },
        "required": [
          "incident_id",
          "resource"
        ],
        "type": "object"
      },
      "CreateRequestBody2": {
        "example": {
          "incident_id": "01ET65M7ZADYFCKD4K1AE2QNMC",
          "user_id": "01FCQSP07Z74QMMYPDDGQB9FTG"
        },
        "properties": {
          "incident_id": {
            "example": "01ET65M7ZADYFCKD4K1AE2QNMC",
            "type": "string"
          },
          "user_id": {
            "example": "01FCQSP07Z74QMMYPDDGQB9FTG",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "incident_id"
        ],
        "type": "object"
      },
      "CreateRequestBody3": {
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "shortform": "lead"
        },
        "properties": {
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "DEPRECATED: this will always be false.",
            "example": false,
            "type": "boolean"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "required",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CreateRequestBody4": {
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "shortform": "lead"
        },
        "properties": {
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CreateRequestBody5": {
        "example": {
          "category": "live",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "name": "Closed"
        },
        "properties": {
          "category": {
            "description": "Whether the status should be considered 'live' (now renamed to active), 'learning' (now renamed to post-incident) or 'closed'. The triage and declined statuses cannot be created or modified.",
            "enum": [
              "live",
              "learning",
              "closed"
            ],
            "example": "live",
            "type": "string"
          },
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "category",
          "id",
          "rank",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CreateResponseBody": {
        "example": {
          "incident_attachment": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "resource": {
              "external_id": "123",
              "permalink": "https://my.pagerduty.com/incidents/ABC",
              "resource_type": "pager_duty_incident",
              "title": "The database has gone down"
            }
          }
        },
        "properties": {
          "incident_attachment": {
            "$ref": "#/components/schemas/IncidentAttachmentV1"
          }
        },
        "required": [
          "incident_attachment"
        ],
        "type": "object"
      },
      "CreateResponseBody2": {
        "example": {
          "incident_membership": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          }
        },
        "properties": {
          "incident_membership": {
            "$ref": "#/components/schemas/IncidentMembership"
          }
        },
        "required": [
          "incident_membership"
        ],
        "type": "object"
      },
      "CustomFieldEntryPayloadV1": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "values": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_text": "This is my text field, I hope you like it",
              "value_timestamp": ""
            }
          ]
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this entry is linked against",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "values": {
            "description": "List of values to associate with this entry. Use an empty array to unset the value of the custom field.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_text": "This is my text field, I hope you like it",
                "value_timestamp": ""
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValuePayloadV1"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field_id",
          "values"
        ],
        "type": "object"
      },
      "CustomFieldEntryPayloadV2": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "values": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "value_text": "This is my text field, I hope you like it",
              "value_timestamp": ""
            }
          ]
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this entry is linked against",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "values": {
            "description": "List of values to associate with this entry. Use an empty array to unset the value of the custom field.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "value_text": "This is my text field, I hope you like it",
                "value_timestamp": ""
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValuePayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field_id",
          "values"
        ],
        "type": "object"
      },
      "CustomFieldEntryV1": {
        "example": {
          "custom_field": {
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "values": [
            {
              "value_catalog_entry": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call"
              },
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              },
              "value_text": "This is my text field, I hope you like it"
            }
          ]
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldTypeInfoV1"
          },
          "values": {
            "description": "List of custom field values set on this entry",
            "example": [
              {
                "value_catalog_entry": {
                  "aliases": [
                    "lawrence@incident.io",
                    "lawrence"
                  ],
                  "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Primary On-call"
                },
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option": {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                },
                "value_text": "This is my text field, I hope you like it"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueV1"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field",
          "values"
        ],
        "type": "object"
      },
      "CustomFieldEntryV2": {
        "example": {
          "custom_field": {
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ]
          },
          "values": [
            {
              "value_catalog_entry": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Primary On-call"
              },
              "value_link": "https://google.com/",
              "value_numeric": "123.456",
              "value_option": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              },
              "value_text": "This is my text field, I hope you like it"
            }
          ]
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldTypeInfoV2"
          },
          "values": {
            "description": "List of custom field values set on this entry",
            "example": [
              {
                "value_catalog_entry": {
                  "aliases": [
                    "lawrence@incident.io",
                    "lawrence"
                  ],
                  "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Primary On-call"
                },
                "value_link": "https://google.com/",
                "value_numeric": "123.456",
                "value_option": {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                },
                "value_text": "This is my text field, I hope you like it"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueV2"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_field",
          "values"
        ],
        "type": "object"
      },
      "CustomFieldFilterByOptionsV2": {
        "example": {
          "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
          "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
        },
        "properties": {
          "catalog_attribute_id": {
            "description": "This must be an attribute of the catalog type of this custom field. It must be an attribute that points to another catalog type (so not a plain string, number, or boolean attribute).",
            "example": "01H2FW182TAH0NHEVBY34SCAK0",
            "type": "string"
          },
          "custom_field_id": {
            "description": "This must be the ID of a custom field, which must have values of the same type as the attribute you are filtering by.\n\nWhen this filtering field is set on an incident, the options for this custom field will be filtered to only those with the attribute value that matches the value of the filtering field.",
            "example": "01H2FW182TAH0NHEVBY34SCAK0",
            "type": "string"
          }
        },
        "required": [
          "custom_field_id",
          "catalog_attribute_id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CustomFieldOptionV1": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "id",
          "custom_field_id",
          "value",
          "sort_key"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "CustomFieldOptionV2": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "id",
          "custom_field_id",
          "value",
          "sort_key"
        ],
        "type": "object"
      },
      "CustomFieldOptionsCreatePayloadV1": {
        "example": {
          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "custom_field_id": {
            "description": "ID of the custom field this option belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "custom_field_id",
          "value"
        ],
        "type": "object"
      },
      "CustomFieldOptionsCreateResultV1": {
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1"
          }
        },
        "required": [
          "custom_field_option"
        ],
        "type": "object"
      },
      "CustomFieldOptionsListResultV1": {
        "example": {
          "custom_field_options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "custom_field_options": {
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultV1"
          }
        },
        "required": [
          "custom_field_options",
          "pagination_meta"
        ],
        "type": "object"
      },
      "CustomFieldOptionsShowResultV1": {
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1"
          }
        },
        "required": [
          "custom_field_option"
        ],
        "type": "object"
      },
      "CustomFieldOptionsUpdatePayloadV1": {
        "example": {
          "sort_key": 10,
          "value": "Product"
        },
        "properties": {
          "sort_key": {
            "default": 1000,
            "description": "Sort key used to order the custom field options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Human readable name for the custom field option",
            "example": "Product",
            "type": "string"
          }
        },
        "required": [
          "value",
          "custom_field_id",
          "sort_key"
        ],
        "type": "object"
      },
      "CustomFieldOptionsUpdateResultV1": {
        "example": {
          "custom_field_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          }
        },
        "properties": {
          "custom_field_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1"
          }
        },
        "required": [
          "custom_field_option"
        ],
        "type": "object"
      },
      "CustomFieldTypeInfoV1": {
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ]
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "options": {
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "name",
          "description",
          "dynamic_options",
          "rank",
          "field_type",
          "cannot_be_unset",
          "options",
          "is_usable",
          "condition_groups",
          "field_mode",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CustomFieldTypeInfoV2": {
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ]
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "options": {
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV2"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "name",
          "description",
          "dynamic_options",
          "rank",
          "field_type",
          "cannot_be_unset",
          "options",
          "is_usable",
          "condition_groups",
          "field_mode",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CustomFieldV1": {
        "example": {
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "options": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "sort_key": 10,
              "value": "Product"
            }
          ],
          "required": "never",
          "required_v2": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "catalog_type_id": {
            "description": "For catalog fields, the ID of the associated catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "options": {
            "description": "What options are available for this custom field, if this field has options",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionV1"
            },
            "type": "array"
          },
          "required": {
            "description": "When this custom field must be set during the incident lifecycle. [DEPRECATED: please use required_v2 instead].",
            "enum": [
              "never",
              "before_closure",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "required_v2": {
            "description": "When this custom field must be set during the incident lifecycle.",
            "enum": [
              "never",
              "before_resolution",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "show_before_closure": {
            "description": "Whether a custom field should be shown in the incident resolve modal. If this custom field is required before resolution, but no value has been set for it, the field will be shown in the resolve modal whatever the value of this setting.",
            "example": true,
            "type": "boolean"
          },
          "show_before_creation": {
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true,
            "type": "boolean"
          },
          "show_before_update": {
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true,
            "type": "boolean"
          },
          "show_in_announcement_post": {
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true,
            "type": "boolean"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "show_before_creation",
          "show_before_closure",
          "show_before_update",
          "options",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "CustomFieldV2": {
        "example": {
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "filter_by": {
            "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
            "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
          },
          "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Affected Team",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "catalog_type_id": {
            "description": "For catalog fields, the ID of the associated catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "filter_by": {
            "$ref": "#/components/schemas/CustomFieldFilterByOptionsV2"
          },
          "group_by_catalog_attribute_id": {
            "description": "For catalog fields, the ID of the attribute used to group catalog entries (if applicable)",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "helptext_catalog_attribute_id": {
            "description": "Which catalog attribute provides helptext for the options",
            "example": "01H2FW182TAH0NHEVBY34SCAK0",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "cannot_be_unset",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "CustomFieldValuePayloadV1": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_text": "This is my text field, I hope you like it",
          "value_timestamp": ""
        },
        "properties": {
          "id": {
            "description": "Unique identifier for the custom field value",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_catalog_entry_id": {
            "description": "ID of the catalog entry. You can also use an ExternalID or an Alias of the catalog entry.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option_id": {
            "description": "ID of the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          },
          "value_timestamp": {
            "description": "Deprecated: please use incident timestamp values instead",
            "example": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomFieldValuePayloadV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "value_text": "This is my text field, I hope you like it",
          "value_timestamp": ""
        },
        "properties": {
          "id": {
            "description": "Unique identifier for the custom field value",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_catalog_entry_id": {
            "description": "ID of the catalog entry. You can also use an ExternalID or an Alias of the catalog entry.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option_id": {
            "description": "ID of the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          },
          "value_timestamp": {
            "description": "Deprecated: please use incident timestamp values instead",
            "example": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomFieldValueV1": {
        "example": {
          "value_catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call"
          },
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          },
          "value_text": "This is my text field, I hope you like it"
        },
        "properties": {
          "value_catalog_entry": {
            "$ref": "#/components/schemas/EmbeddedCatalogEntryV1"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV1"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomFieldValueV2": {
        "example": {
          "value_catalog_entry": {
            "aliases": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Primary On-call"
          },
          "value_link": "https://google.com/",
          "value_numeric": "123.456",
          "value_option": {
            "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "sort_key": 10,
            "value": "Product"
          },
          "value_text": "This is my text field, I hope you like it"
        },
        "properties": {
          "value_catalog_entry": {
            "$ref": "#/components/schemas/EmbeddedCatalogEntryV2"
          },
          "value_link": {
            "description": "If the custom field type is 'link', this will contain the value assigned.",
            "example": "https://google.com/",
            "type": "string"
          },
          "value_numeric": {
            "description": "If the custom field type is 'numeric', this will contain the value assigned.",
            "example": "123.456",
            "type": "string"
          },
          "value_option": {
            "$ref": "#/components/schemas/CustomFieldOptionV2"
          },
          "value_text": {
            "description": "If the custom field type is 'text', this will contain the value assigned.",
            "example": "This is my text field, I hope you like it",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomFieldsCreatePayloadV1": {
        "example": {
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "name": "Affected Team",
          "required": "never",
          "required_v2": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "required": {
            "description": "When this custom field must be set during the incident lifecycle. [DEPRECATED: please use required_v2 instead].",
            "enum": [
              "never",
              "before_closure",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "required_v2": {
            "description": "When this custom field must be set during the incident lifecycle.",
            "enum": [
              "never",
              "before_resolution",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "show_before_closure": {
            "description": "Whether a custom field should be shown in the incident resolve modal. If this custom field is required before resolution, but no value has been set for it, the field will be shown in the resolve modal whatever the value of this setting.",
            "example": true,
            "type": "boolean"
          },
          "show_before_creation": {
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true,
            "type": "boolean"
          },
          "show_before_update": {
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true,
            "type": "boolean"
          },
          "show_in_announcement_post": {
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "show_before_creation",
          "show_before_closure",
          "show_before_update",
          "options",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CustomFieldsCreatePayloadV2": {
        "example": {
          "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "description": "Which team is impacted by this issue",
          "field_type": "single_select",
          "filter_by": {
            "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
            "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
          },
          "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
          "name": "Affected Team"
        },
        "properties": {
          "catalog_type_id": {
            "description": "For catalog fields, the ID of the associated catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "field_type": {
            "description": "Type of custom field",
            "enum": [
              "single_select",
              "multi_select",
              "text",
              "link",
              "numeric"
            ],
            "example": "single_select",
            "type": "string"
          },
          "filter_by": {
            "$ref": "#/components/schemas/CustomFieldFilterByOptionsV2"
          },
          "group_by_catalog_attribute_id": {
            "description": "For catalog fields, the ID of the attribute used to group catalog entries (if applicable)",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "helptext_catalog_attribute_id": {
            "description": "Which catalog attribute provides helptext for the options",
            "example": "01H2FW182TAH0NHEVBY34SCAK0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "field_type",
          "cannot_be_unset",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CustomFieldsCreateResultV1": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "required_v2": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1"
          }
        },
        "required": [
          "custom_field"
        ],
        "type": "object"
      },
      "CustomFieldsCreateResultV2": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "filter_by": {
              "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
              "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
            },
            "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV2"
          }
        },
        "required": [
          "custom_field"
        ],
        "type": "object"
      },
      "CustomFieldsListResultV1": {
        "example": {
          "custom_fields": [
            {
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Which team is impacted by this issue",
              "field_type": "single_select",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected Team",
              "options": [
                {
                  "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "sort_key": 10,
                  "value": "Product"
                }
              ],
              "required": "never",
              "required_v2": "never",
              "show_before_closure": true,
              "show_before_creation": true,
              "show_before_update": true,
              "show_in_announcement_post": true,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "custom_fields": {
            "example": [
              {
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ],
                "required": "never",
                "required_v2": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldV1"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_fields"
        ],
        "type": "object"
      },
      "CustomFieldsListResultV2": {
        "example": {
          "custom_fields": [
            {
              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Which team is impacted by this issue",
              "field_type": "single_select",
              "filter_by": {
                "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
              },
              "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Affected Team",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "custom_fields": {
            "example": [
              {
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "filter_by": {
                  "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                  "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                },
                "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldV2"
            },
            "type": "array"
          }
        },
        "required": [
          "custom_fields"
        ],
        "type": "object"
      },
      "CustomFieldsShowResultV1": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "required_v2": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1"
          }
        },
        "required": [
          "custom_field"
        ],
        "type": "object"
      },
      "CustomFieldsShowResultV2": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "filter_by": {
              "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
              "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
            },
            "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV2"
          }
        },
        "required": [
          "custom_field"
        ],
        "type": "object"
      },
      "CustomFieldsUpdatePayloadV1": {
        "example": {
          "description": "Which team is impacted by this issue",
          "name": "Affected Team",
          "required": "never",
          "required_v2": "never",
          "show_before_closure": true,
          "show_before_creation": true,
          "show_before_update": true,
          "show_in_announcement_post": true
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          },
          "required": {
            "description": "When this custom field must be set during the incident lifecycle. [DEPRECATED: please use required_v2 instead].",
            "enum": [
              "never",
              "before_closure",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "required_v2": {
            "description": "When this custom field must be set during the incident lifecycle.",
            "enum": [
              "never",
              "before_resolution",
              "always"
            ],
            "example": "never",
            "type": "string"
          },
          "show_before_closure": {
            "description": "Whether a custom field should be shown in the incident resolve modal. If this custom field is required before resolution, but no value has been set for it, the field will be shown in the resolve modal whatever the value of this setting.",
            "example": true,
            "type": "boolean"
          },
          "show_before_creation": {
            "description": "Whether a custom field should be shown in the incident creation modal. This must be true if the field is always required.",
            "example": true,
            "type": "boolean"
          },
          "show_before_update": {
            "description": "Whether a custom field should be shown in the incident update modal.",
            "example": true,
            "type": "boolean"
          },
          "show_in_announcement_post": {
            "description": "Whether a custom field should be shown in the list of fields as part of the announcement post when set.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "description",
          "field_type",
          "show_before_creation",
          "show_before_closure",
          "show_before_update",
          "options",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CustomFieldsUpdatePayloadV2": {
        "example": {
          "description": "Which team is impacted by this issue",
          "filter_by": {
            "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
            "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
          },
          "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
          "name": "Affected Team"
        },
        "properties": {
          "description": {
            "description": "Description of the custom field",
            "example": "Which team is impacted by this issue",
            "type": "string"
          },
          "filter_by": {
            "$ref": "#/components/schemas/CustomFieldFilterByOptionsV2"
          },
          "group_by_catalog_attribute_id": {
            "description": "For catalog fields, the ID of the attribute used to group catalog entries (if applicable)",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "helptext_catalog_attribute_id": {
            "description": "Which catalog attribute provides helptext for the options",
            "example": "01H2FW182TAH0NHEVBY34SCAK0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name for the custom field",
            "example": "Affected Team",
            "maxLength": 50,
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "field_type",
          "cannot_be_unset",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "CustomFieldsUpdateResultV1": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "options": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              }
            ],
            "required": "never",
            "required_v2": "never",
            "show_before_closure": true,
            "show_before_creation": true,
            "show_before_update": true,
            "show_in_announcement_post": true,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV1"
          }
        },
        "required": [
          "custom_field"
        ],
        "type": "object"
      },
      "CustomFieldsUpdateResultV2": {
        "example": {
          "custom_field": {
            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Which team is impacted by this issue",
            "field_type": "single_select",
            "filter_by": {
              "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
              "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
            },
            "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Affected Team",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "custom_field": {
            "$ref": "#/components/schemas/CustomFieldV2"
          }
        },
        "required": [
          "custom_field"
        ],
        "type": "object"
      },
      "EditRequestBody": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "custom_field_entries": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "incident_status_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "incident_timestamp_values": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "name": "Our database is sad",
            "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "slack_channel_name_override": "inc-123-database-down",
            "summary": "Our database is really really sad, and we don't know why yet."
          },
          "notify_incident_channel": true
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentEditPayloadV2"
          },
          "notify_incident_channel": {
            "description": "Should we send Slack channel notifications to inform responders of this update? Note that this won't work if the Slack channel has already been archived.",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "incident",
          "notify_incident_channel"
        ],
        "type": "object"
      },
      "EmbeddedCatalogEntryV1": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "catalog_type_id"
        ],
        "type": "object"
      },
      "EmbeddedCatalogEntryV2": {
        "example": {
          "aliases": [
            "lawrence@incident.io",
            "lawrence"
          ],
          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Primary On-call"
        },
        "properties": {
          "aliases": {
            "description": "Optional aliases that can be used to reference this entry",
            "example": [
              "lawrence@incident.io",
              "lawrence"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "external_id": {
            "description": "An optional alternative ID for this entry, which is ensured to be unique for the type",
            "example": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
            "type": "string"
          },
          "id": {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name is the human readable name of this entry",
            "example": "Primary On-call",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "catalog_type_id"
        ],
        "type": "object"
      },
      "EmbeddedIncidentRoleV2": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the role was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "This field is deprecated.",
            "example": false,
            "type": "boolean"
          },
          "role_type": {
            "description": "Type of incident role",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ],
            "example": "lead",
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          },
          "updated_at": {
            "description": "When the role was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "EngineParamBindingPayloadV2": {
        "example": {
          "array_value": [
            {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          ],
          "value": {
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        },
        "properties": {
          "array_value": {
            "description": "If set, this is the array value of the step parameter",
            "example": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingValuePayloadV2"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/EngineParamBindingValuePayloadV2"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "EngineParamBindingV2": {
        "example": {
          "array_value": [
            {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          ],
          "value": {
            "label": "Lawrence Jones",
            "literal": "SEV123",
            "reference": "incident.severity"
          }
        },
        "properties": {
          "array_value": {
            "description": "If array_value is set, this helps render the values",
            "example": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingValueV2"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/EngineParamBindingValueV2"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "EngineParamBindingValuePayloadV2": {
        "example": {
          "literal": "SEV123",
          "reference": "incident.severity"
        },
        "properties": {
          "literal": {
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123",
            "type": "string"
          },
          "reference": {
            "description": "If set, this is the reference into the trigger scope that is the value of this parameter",
            "example": "incident.severity",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "EngineParamBindingValueV2": {
        "example": {
          "label": "Lawrence Jones",
          "literal": "SEV123",
          "reference": "incident.severity"
        },
        "properties": {
          "label": {
            "description": "Human readable label to be displayed for user to select",
            "example": "Lawrence Jones",
            "type": "string"
          },
          "literal": {
            "description": "If set, this is the literal value of the step parameter",
            "example": "SEV123",
            "type": "string"
          },
          "reference": {
            "description": "If set, this is the reference into the trigger scope that is the value of this parameter",
            "example": "incident.severity",
            "type": "string"
          }
        },
        "required": [
          "label",
          "sort_key"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "EngineReferenceV2": {
        "example": {
          "array": false,
          "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
          "label": "Incident -\u003e Affected Team",
          "type": "IncidentSeverity"
        },
        "properties": {
          "array": {
            "description": "If true, the reference can refer to 0 to many items",
            "example": false,
            "type": "boolean"
          },
          "key": {
            "description": "Unique identifier of field will set",
            "example": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
            "type": "string"
          },
          "label": {
            "description": "Human readable label for the field (with context)",
            "example": "Incident -\u003e Affected Team",
            "type": "string"
          },
          "type": {
            "description": "The type of this resource in the engine",
            "example": "IncidentSeverity",
            "type": "string"
          }
        },
        "required": [
          "key",
          "label",
          "node_label",
          "type",
          "hide_filter",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "EscalationPathNodeIfElsePayloadV2": {
        "example": {
          "conditions": [
            {
              "operation": "one_of",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": "incident.severity"
            }
          ],
          "else_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "round_robin_config": {
                  "enabled": false,
                  "rotate_after_seconds": 120
                },
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "notify_channel": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "then_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "round_robin_config": {
                  "enabled": false,
                  "rotate_after_seconds": 120
                },
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "notify_channel": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ]
        },
        "properties": {
          "conditions": {
            "description": "The condition that defines which branch to take",
            "example": [
              {
                "operation": "one_of",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": "incident.severity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionPayloadV2"
            },
            "type": "array"
          },
          "else_path": {
            "description": "The nodes that form the levels if our condition is not met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodePayloadV2"
            },
            "type": "array"
          },
          "then_path": {
            "description": "The nodes that form the levels if our condition is met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodePayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "then_path",
          "else_path"
        ],
        "type": "object"
      },
      "EscalationPathNodeIfElseV2": {
        "example": {
          "conditions": [
            {
              "operation": {
                "label": "Lawrence Jones",
                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
              },
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ],
              "subject": {
                "label": "Incident Severity",
                "reference": "incident.severity"
              }
            }
          ],
          "else_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "round_robin_config": {
                  "enabled": false,
                  "rotate_after_seconds": 120
                },
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "notify_channel": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "then_path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "round_robin_config": {
                  "enabled": false,
                  "rotate_after_seconds": 120
                },
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "notify_channel": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ]
        },
        "properties": {
          "conditions": {
            "description": "The condition that defines which branch to take",
            "example": [
              {
                "operation": {
                  "label": "Lawrence Jones",
                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                },
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": {
                  "label": "Incident Severity",
                  "reference": "incident.severity"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionV2"
            },
            "type": "array"
          },
          "else_path": {
            "description": "The nodes that form the levels if our condition is not met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodeV2"
            },
            "type": "array"
          },
          "then_path": {
            "description": "The nodes that form the levels if our condition is met",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodeV2"
            },
            "type": "array"
          }
        },
        "required": [
          "conditions",
          "then_path",
          "else_path"
        ],
        "type": "object"
      },
      "EscalationPathNodeLevelV2": {
        "example": {
          "round_robin_config": {
            "enabled": false,
            "rotate_after_seconds": 120
          },
          "targets": [
            {
              "id": "lawrencejones",
              "schedule_mode": "currently_on_call",
              "type": "schedule",
              "urgency": "high"
            }
          ],
          "time_to_ack_interval_condition": "active",
          "time_to_ack_seconds": 1800,
          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "properties": {
          "round_robin_config": {
            "$ref": "#/components/schemas/EscalationPathRoundRobinConfigV2"
          },
          "targets": {
            "description": "The targets (users or schedules) for this level",
            "example": [
              {
                "id": "lawrencejones",
                "schedule_mode": "currently_on_call",
                "type": "schedule",
                "urgency": "high"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathTargetV2"
            },
            "type": "array"
          },
          "time_to_ack_interval_condition": {
            "description": "If the time to ack is relative to a time window, this defines whether we move when the window is active or inactive",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active",
            "type": "string"
          },
          "time_to_ack_seconds": {
            "description": "How long should we wait for this level to acknowledge before proceeding to the next node in the path?",
            "example": 1800,
            "format": "int64",
            "type": "integer"
          },
          "time_to_ack_weekday_interval_config_id": {
            "description": "If the time to ack is relative to a time window, this identifies which window it is relative to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          }
        },
        "required": [
          "targets"
        ],
        "type": "object"
      },
      "EscalationPathNodeNotifyChannelV2": {
        "example": {
          "targets": [
            {
              "id": "lawrencejones",
              "schedule_mode": "currently_on_call",
              "type": "schedule",
              "urgency": "high"
            }
          ],
          "time_to_ack_interval_condition": "active",
          "time_to_ack_seconds": 1800,
          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "properties": {
          "targets": {
            "description": "The targets (Slack channels) for this level",
            "example": [
              {
                "id": "lawrencejones",
                "schedule_mode": "currently_on_call",
                "type": "schedule",
                "urgency": "high"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathTargetV2"
            },
            "type": "array"
          },
          "time_to_ack_interval_condition": {
            "description": "If the time to ack is relative to a time window, this defines whether we move when the window is active or inactive",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active",
            "type": "string"
          },
          "time_to_ack_seconds": {
            "description": "How long should we wait for this level to acknowledge before moving on to the next node in the path?",
            "example": 1800,
            "format": "int64",
            "type": "integer"
          },
          "time_to_ack_weekday_interval_config_id": {
            "description": "If the time to ack is relative to a time window, this identifies which window it is relative to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          }
        },
        "required": [
          "targets"
        ],
        "type": "object"
      },
      "EscalationPathNodePayloadV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "if_else": {
            "conditions": [
              {
                "operation": "one_of",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": "incident.severity"
              }
            ],
            "else_path": [
              {}
            ],
            "then_path": [
              {}
            ]
          },
          "level": {
            "round_robin_config": {
              "enabled": false,
              "rotate_after_seconds": 120
            },
            "targets": [
              {
                "id": "lawrencejones",
                "schedule_mode": "currently_on_call",
                "type": "schedule",
                "urgency": "high"
              }
            ],
            "time_to_ack_interval_condition": "active",
            "time_to_ack_seconds": 1800,
            "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "notify_channel": {
            "targets": [
              {
                "id": "lawrencejones",
                "schedule_mode": "currently_on_call",
                "type": "schedule",
                "urgency": "high"
              }
            ],
            "time_to_ack_interval_condition": "active",
            "time_to_ack_seconds": 1800,
            "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "repeat": {
            "repeat_times": 3,
            "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "type": "if_else"
        },
        "properties": {
          "id": {
            "description": "An ID for this node, unique within the escalation path.\n\nThis allows you to reference the node in other nodes, such as when configuring a 'repeat' node.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "if_else": {
            "$ref": "#/components/schemas/EscalationPathNodeIfElsePayloadV2"
          },
          "level": {
            "$ref": "#/components/schemas/EscalationPathNodeLevelV2"
          },
          "notify_channel": {
            "$ref": "#/components/schemas/EscalationPathNodeNotifyChannelV2"
          },
          "repeat": {
            "$ref": "#/components/schemas/EscalationPathNodeRepeatV2"
          },
          "type": {
            "description": "The type of this node. Available types are:\n* level: A set of targets (users or schedules) that should be paged, either all at once, or with a round-robin configuration.\n* notify_channel: Send the escalation to a Slack channel, where it can be acked by anyone in the channel.\n* if_else: Branch the escalation based on a set of conditions.\n* repeat: Go back to a previous node and repeat the logic from there.",
            "enum": [
              "if_else",
              "repeat",
              "level",
              "notify_channel"
            ],
            "example": "if_else",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "EscalationPathNodeRepeatV2": {
        "example": {
          "repeat_times": 3,
          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "properties": {
          "repeat_times": {
            "description": "How many times to repeat these nodes",
            "example": 3,
            "format": "int64",
            "type": "integer"
          },
          "to_node": {
            "description": "Which node ID we begin repeating from.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          }
        },
        "required": [
          "to_node",
          "repeat_times"
        ],
        "type": "object"
      },
      "EscalationPathNodeV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "if_else": {
            "conditions": [
              {
                "operation": {
                  "label": "Lawrence Jones",
                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                },
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "subject": {
                  "label": "Incident Severity",
                  "reference": "incident.severity"
                }
              }
            ],
            "else_path": [
              {}
            ],
            "then_path": [
              {}
            ]
          },
          "level": {
            "round_robin_config": {
              "enabled": false,
              "rotate_after_seconds": 120
            },
            "targets": [
              {
                "id": "lawrencejones",
                "schedule_mode": "currently_on_call",
                "type": "schedule",
                "urgency": "high"
              }
            ],
            "time_to_ack_interval_condition": "active",
            "time_to_ack_seconds": 1800,
            "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "notify_channel": {
            "targets": [
              {
                "id": "lawrencejones",
                "schedule_mode": "currently_on_call",
                "type": "schedule",
                "urgency": "high"
              }
            ],
            "time_to_ack_interval_condition": "active",
            "time_to_ack_seconds": 1800,
            "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "repeat": {
            "repeat_times": 3,
            "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
          },
          "type": "if_else"
        },
        "properties": {
          "id": {
            "description": "An ID for this node, unique within the escalation path.\n\nThis allows you to reference the node in other nodes, such as when configuring a 'repeat' node.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "if_else": {
            "$ref": "#/components/schemas/EscalationPathNodeIfElseV2"
          },
          "level": {
            "$ref": "#/components/schemas/EscalationPathNodeLevelV2"
          },
          "notify_channel": {
            "$ref": "#/components/schemas/EscalationPathNodeNotifyChannelV2"
          },
          "repeat": {
            "$ref": "#/components/schemas/EscalationPathNodeRepeatV2"
          },
          "type": {
            "description": "The type of this node. Available types are:\n* level: A set of targets (users or schedules) that should be paged, either all at once, or with a round-robin configuration.\n* notify_channel: Send the escalation to a Slack channel, where it can be acked by anyone in the channel.\n* if_else: Branch the escalation based on a set of conditions.\n* repeat: Go back to a previous node and repeat the logic from there.",
            "enum": [
              "if_else",
              "repeat",
              "level",
              "notify_channel"
            ],
            "example": "if_else",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "EscalationPathPayloadV2": {
        "example": {
          "name": "Urgent Support",
          "path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "round_robin_config": {
                  "enabled": false,
                  "rotate_after_seconds": 120
                },
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "notify_channel": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "working_hours": [
            {
              "id": "abc123",
              "name": "abc123",
              "timezone": "abc123",
              "weekday_intervals": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "monday"
                }
              ]
            }
          ]
        },
        "properties": {
          "name": {
            "description": "The name of this escalation path, for the user's reference.",
            "example": "Urgent Support",
            "type": "string"
          },
          "path": {
            "description": "The nodes that form the levels and branches of this escalation path.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodePayloadV2"
            },
            "type": "array"
          },
          "working_hours": {
            "description": "The working hours for this escalation path.",
            "example": [
              {
                "id": "abc123",
                "name": "abc123",
                "timezone": "abc123",
                "weekday_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalConfigV2"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "path"
        ],
        "type": "object"
      },
      "EscalationPathRoundRobinConfigV2": {
        "example": {
          "enabled": false,
          "rotate_after_seconds": 120
        },
        "properties": {
          "enabled": {
            "description": "Whether round robin is enabled for this level",
            "example": false,
            "type": "boolean"
          },
          "rotate_after_seconds": {
            "description": "How long should we wait before rotating to the next target in a round robin, if not set will stick with a single target per level.",
            "example": 120,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "EscalationPathTargetV2": {
        "example": {
          "id": "lawrencejones",
          "schedule_mode": "currently_on_call",
          "type": "schedule",
          "urgency": "high"
        },
        "properties": {
          "id": {
            "description": "Uniquely identifies an entity of this type",
            "example": "lawrencejones",
            "type": "string"
          },
          "schedule_mode": {
            "description": "Only set for schedule targets, and either currently_on_call, all_users or all_users_for_rota and specifies which users to fetch from the schedule",
            "enum": [
              "currently_on_call",
              "all_users_for_rota",
              "all_users",
              ""
            ],
            "example": "currently_on_call",
            "type": "string"
          },
          "type": {
            "description": "Controls what type of entity this target identifies, such as EscalationPolicy or User",
            "enum": [
              "schedule",
              "user",
              "slack_channel"
            ],
            "example": "schedule",
            "type": "string"
          },
          "urgency": {
            "description": "The urgency of this escalation path target",
            "enum": [
              "high",
              "low"
            ],
            "example": "high",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "urgency"
        ],
        "type": "object"
      },
      "EscalationPathV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Urgent Support",
          "path": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "if_else": {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ],
                "else_path": [
                  {}
                ],
                "then_path": [
                  {}
                ]
              },
              "level": {
                "round_robin_config": {
                  "enabled": false,
                  "rotate_after_seconds": 120
                },
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "notify_channel": {
                "targets": [
                  {
                    "id": "lawrencejones",
                    "schedule_mode": "currently_on_call",
                    "type": "schedule",
                    "urgency": "high"
                  }
                ],
                "time_to_ack_interval_condition": "active",
                "time_to_ack_seconds": 1800,
                "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "repeat": {
                "repeat_times": 3,
                "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
              },
              "type": "if_else"
            }
          ],
          "working_hours": [
            {
              "id": "abc123",
              "name": "abc123",
              "timezone": "abc123",
              "weekday_intervals": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "monday"
                }
              ]
            }
          ]
        },
        "properties": {
          "id": {
            "description": "Unique identifier for this escalation path.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "The name of this escalation path, for the user's reference.",
            "example": "Urgent Support",
            "type": "string"
          },
          "path": {
            "description": "The nodes that form the levels and branches of this escalation path.",
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "if_else": {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "else_path": [
                    {}
                  ],
                  "then_path": [
                    {}
                  ]
                },
                "level": {
                  "round_robin_config": {
                    "enabled": false,
                    "rotate_after_seconds": 120
                  },
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "notify_channel": {
                  "targets": [
                    {
                      "id": "lawrencejones",
                      "schedule_mode": "currently_on_call",
                      "type": "schedule",
                      "urgency": "high"
                    }
                  ],
                  "time_to_ack_interval_condition": "active",
                  "time_to_ack_seconds": 1800,
                  "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "repeat": {
                  "repeat_times": 3,
                  "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                },
                "type": "if_else"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EscalationPathNodeV2"
            },
            "type": "array"
          },
          "working_hours": {
            "description": "The working hours for this escalation path.",
            "example": [
              {
                "id": "abc123",
                "name": "abc123",
                "timezone": "abc123",
                "weekday_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalConfigV2"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "path",
          "levels",
          "repeat_times"
        ],
        "type": "object"
      },
      "ExpressionBranchPayloadV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "result": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "condition_groups": {
            "description": "When one of these condition groups are satisfied, this branch will be evaluated",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "required": [
          "condition_groups",
          "result"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionBranchV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "result": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "condition_groups": {
            "description": "When one of these condition groups are satisfied, this branch will be evaluated",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "type": "array"
          },
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          }
        },
        "required": [
          "condition_groups",
          "result"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionBranchesOptsPayloadV2": {
        "example": {
          "branches": [
            {
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": "one_of",
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": "incident.severity"
                    }
                  ]
                }
              ],
              "result": {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          }
        },
        "properties": {
          "branches": {
            "description": "The branches to apply for this operation",
            "example": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionBranchPayloadV2"
            },
            "type": "array"
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          }
        },
        "required": [
          "branches",
          "returns"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionBranchesOptsV2": {
        "example": {
          "branches": [
            {
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ]
                }
              ],
              "result": {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            }
          ],
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          }
        },
        "properties": {
          "branches": {
            "description": "The branches to apply for this operation",
            "example": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionBranchV2"
            },
            "type": "array"
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          }
        },
        "required": [
          "branches",
          "returns"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionElseBranchPayloadV2": {
        "example": {
          "result": {
            "array_value": [
              {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
          }
        },
        "required": [
          "result"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionElseBranchV2": {
        "example": {
          "result": {
            "array_value": [
              {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            ],
            "value": {
              "label": "Lawrence Jones",
              "literal": "SEV123",
              "reference": "incident.severity"
            }
          }
        },
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EngineParamBindingV2"
          }
        },
        "required": [
          "result"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionFilterOptsPayloadV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ]
        },
        "properties": {
          "condition_groups": {
            "description": "The condition groups to apply in this filter. Only one group needs to be satisfied for the filter to pass.",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "condition_groups"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionFilterOptsV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ]
        },
        "properties": {
          "condition_groups": {
            "description": "The condition groups to apply in this filter. Only one group needs to be satisfied for the filter to pass.",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "type": "array"
          }
        },
        "required": [
          "condition_groups"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionNavigateOptsPayloadV2": {
        "example": {
          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
        },
        "properties": {
          "reference": {
            "description": "The reference that you want to navigate to",
            "example": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]",
            "type": "string"
          }
        },
        "required": [
          "reference"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionNavigateOptsV2": {
        "example": {
          "reference": "1235",
          "reference_label": "Teams"
        },
        "properties": {
          "reference": {
            "description": "The reference within the scope to navigate to",
            "example": "1235",
            "type": "string"
          },
          "reference_label": {
            "description": "The name of the reference to navigate to",
            "example": "Teams",
            "type": "string"
          }
        },
        "required": [
          "reference",
          "reference_label"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionOperationPayloadV2": {
        "example": {
          "branches": {
            "branches": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            }
          },
          "filter": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ]
          },
          "navigate": {
            "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
          },
          "operation_type": "navigate",
          "parse": {
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            },
            "source": "metadata.annotations[\"github.com/repo\"]"
          }
        },
        "properties": {
          "branches": {
            "$ref": "#/components/schemas/ExpressionBranchesOptsPayloadV2"
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionFilterOptsPayloadV2"
          },
          "navigate": {
            "$ref": "#/components/schemas/ExpressionNavigateOptsPayloadV2"
          },
          "operation_type": {
            "description": "The type of the operation",
            "enum": [
              "navigate",
              "filter",
              "count",
              "min",
              "max",
              "sum",
              "random",
              "first",
              "parse",
              "branches"
            ],
            "example": "navigate",
            "type": "string"
          },
          "parse": {
            "$ref": "#/components/schemas/ExpressionParseOptsPayloadV2"
          }
        },
        "required": [
          "operation_type",
          "returns"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionOperationV2": {
        "example": {
          "branches": {
            "branches": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              }
            ],
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            }
          },
          "filter": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ]
          },
          "navigate": {
            "reference": "1235",
            "reference_label": "Teams"
          },
          "operation_type": "navigate",
          "parse": {
            "returns": {
              "array": true,
              "type": "IncidentStatus"
            },
            "source": "metadata.annotations[\"github.com/repo\"]"
          },
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          }
        },
        "properties": {
          "branches": {
            "$ref": "#/components/schemas/ExpressionBranchesOptsV2"
          },
          "filter": {
            "$ref": "#/components/schemas/ExpressionFilterOptsV2"
          },
          "navigate": {
            "$ref": "#/components/schemas/ExpressionNavigateOptsV2"
          },
          "operation_type": {
            "description": "The type of the operation",
            "enum": [
              "navigate",
              "filter",
              "count",
              "min",
              "max",
              "sum",
              "random",
              "first",
              "parse",
              "branches"
            ],
            "example": "navigate",
            "type": "string"
          },
          "parse": {
            "$ref": "#/components/schemas/ExpressionParseOptsV2"
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          }
        },
        "required": [
          "operation_type",
          "returns"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionParseOptsPayloadV2": {
        "example": {
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          },
          "source": "metadata.annotations[\"github.com/repo\"]"
        },
        "properties": {
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          },
          "source": {
            "description": "Source expression that is evaluated to a result",
            "example": "metadata.annotations[\"github.com/repo\"]",
            "type": "string"
          }
        },
        "required": [
          "source",
          "returns"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionParseOptsV2": {
        "example": {
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          },
          "source": "metadata.annotations[\"github.com/repo\"]"
        },
        "properties": {
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          },
          "source": {
            "description": "Source expression that is evaluated to a result",
            "example": "metadata.annotations[\"github.com/repo\"]",
            "type": "string"
          }
        },
        "required": [
          "source",
          "returns"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionPayloadV2": {
        "example": {
          "else_branch": {
            "result": {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "label": "Team Slack channel",
          "operations": [
            {
              "branches": {
                "branches": [
                  {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ],
                    "result": {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                }
              },
              "filter": {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ]
              },
              "navigate": {
                "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
              },
              "operation_type": "navigate",
              "parse": {
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "source": "metadata.annotations[\"github.com/repo\"]"
              }
            }
          ],
          "reference": "abc123",
          "root_reference": "incident.status"
        },
        "properties": {
          "else_branch": {
            "$ref": "#/components/schemas/ExpressionElseBranchPayloadV2"
          },
          "label": {
            "description": "The human readable label of the expression",
            "example": "Team Slack channel",
            "type": "string"
          },
          "operations": {
            "example": [
              {
                "branches": {
                  "branches": [
                    {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ],
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                },
                "filter": {
                  "condition_groups": [
                    {
                      "conditions": [
                        {
                          "operation": "one_of",
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": "incident.severity"
                        }
                      ]
                    }
                  ]
                },
                "navigate": {
                  "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                },
                "operation_type": "navigate",
                "parse": {
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "source": "metadata.annotations[\"github.com/repo\"]"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionOperationPayloadV2"
            },
            "type": "array"
          },
          "reference": {
            "description": "A short ID that can be used to reference the expression",
            "example": "abc123",
            "type": "string"
          },
          "root_reference": {
            "description": "The root reference for this expression (i.e. where the expression starts)",
            "example": "incident.status",
            "type": "string"
          }
        },
        "required": [
          "label",
          "reference",
          "root_reference",
          "operations"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExpressionV2": {
        "example": {
          "else_branch": {
            "result": {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          },
          "label": "Team Slack channel",
          "operations": [
            {
              "branches": {
                "branches": [
                  {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                }
              },
              "filter": {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ]
              },
              "navigate": {
                "reference": "1235",
                "reference_label": "Teams"
              },
              "operation_type": "navigate",
              "parse": {
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "source": "metadata.annotations[\"github.com/repo\"]"
              },
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              }
            }
          ],
          "reference": "abc123",
          "returns": {
            "array": true,
            "type": "IncidentStatus"
          },
          "root_reference": "incident.status"
        },
        "properties": {
          "else_branch": {
            "$ref": "#/components/schemas/ExpressionElseBranchV2"
          },
          "label": {
            "description": "The human readable label of the expression",
            "example": "Team Slack channel",
            "type": "string"
          },
          "operations": {
            "example": [
              {
                "branches": {
                  "branches": [
                    {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ],
                      "result": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                },
                "filter": {
                  "condition_groups": [
                    {
                      "conditions": [
                        {
                          "operation": {
                            "label": "Lawrence Jones",
                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                          },
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": {
                            "label": "Incident Severity",
                            "reference": "incident.severity"
                          }
                        }
                      ]
                    }
                  ]
                },
                "navigate": {
                  "reference": "1235",
                  "reference_label": "Teams"
                },
                "operation_type": "navigate",
                "parse": {
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "source": "metadata.annotations[\"github.com/repo\"]"
                },
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionOperationV2"
            },
            "type": "array"
          },
          "reference": {
            "description": "A short ID that can be used to reference the expression",
            "example": "abc123",
            "type": "string"
          },
          "returns": {
            "$ref": "#/components/schemas/ReturnsMetaV2"
          },
          "root_reference": {
            "description": "The root reference for this expression (i.e. where the expression starts)",
            "example": "incident.status",
            "type": "string"
          }
        },
        "required": [
          "label",
          "reference",
          "returns",
          "root_reference",
          "operations",
          "id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExternalIssueReferenceV1": {
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "properties": {
          "issue_name": {
            "description": "Human readable ID for the issue",
            "example": "INC-123",
            "type": "string"
          },
          "issue_permalink": {
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "type": "string"
          },
          "provider": {
            "description": "ID of the issue tracker provider",
            "enum": [
              "asana",
              "azure_devops",
              "click_up",
              "linear",
              "jira",
              "jira_server",
              "github",
              "gitlab",
              "shortcut"
            ],
            "example": "asana",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v1"
      },
      "ExternalIssueReferenceV2": {
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "properties": {
          "issue_name": {
            "description": "Human readable ID for the issue",
            "example": "INC-123",
            "type": "string"
          },
          "issue_permalink": {
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "type": "string"
          },
          "provider": {
            "description": "ID of the issue tracker provider",
            "enum": [
              "asana",
              "azure_devops",
              "click_up",
              "linear",
              "jira",
              "jira_server",
              "github",
              "gitlab",
              "shortcut"
            ],
            "example": "asana",
            "type": "string"
          }
        },
        "required": [
          "provider",
          "issue_name",
          "issue_permalink"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ExternalIssueReferenceV4": {
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "properties": {
          "issue_name": {
            "description": "Human readable ID for the issue",
            "example": "INC-123",
            "type": "string"
          },
          "issue_permalink": {
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "type": "string"
          },
          "provider": {
            "description": "ID of the issue tracker provider",
            "enum": [
              "asana",
              "azure_devops",
              "click_up",
              "linear",
              "jira",
              "jira_server",
              "github",
              "gitlab",
              "shortcut"
            ],
            "example": "asana",
            "type": "string"
          }
        },
        "required": [
          "provider",
          "provider_instance_id",
          "issue_name",
          "issue_permalink",
          "issue_id"
        ],
        "type": "object"
      },
      "ExternalIssueReferenceV6": {
        "example": {
          "issue_name": "INC-123",
          "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
          "provider": "asana"
        },
        "properties": {
          "issue_name": {
            "description": "Human readable ID for the issue",
            "example": "INC-123",
            "type": "string"
          },
          "issue_permalink": {
            "description": "URL linking directly to the action in the issue tracker",
            "example": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "type": "string"
          },
          "provider": {
            "description": "ID of the issue tracker provider",
            "enum": [
              "asana",
              "azure_devops",
              "click_up",
              "linear",
              "jira",
              "jira_server",
              "github",
              "gitlab",
              "shortcut"
            ],
            "example": "asana",
            "type": "string"
          }
        },
        "required": [
          "provider",
          "provider_instance_id",
          "issue_name",
          "issue_permalink",
          "issue_id"
        ],
        "type": "object"
      },
      "ExternalResourceV1": {
        "example": {
          "external_id": "123",
          "permalink": "https://my.pagerduty.com/incidents/ABC",
          "resource_type": "pager_duty_incident",
          "title": "The database has gone down"
        },
        "properties": {
          "external_id": {
            "description": "ID of the resource in the external system",
            "example": "123",
            "type": "string"
          },
          "permalink": {
            "description": "URL of the resource",
            "example": "https://my.pagerduty.com/incidents/ABC",
            "type": "string"
          },
          "resource_type": {
            "description": "E.g. PagerDuty: the external system that holds the resource",
            "enum": [
              "pager_duty_incident",
              "opsgenie_alert",
              "datadog_monitor_alert",
              "github_pull_request",
              "gitlab_merge_request",
              "sentry_issue",
              "jira_issue",
              "atlassian_statuspage_incident",
              "zendesk_ticket",
              "google_calendar_event",
              "outlook_calendar_event",
              "slack_file",
              "scrubbed",
              "statuspage_incident"
            ],
            "example": "pager_duty_incident",
            "type": "string"
          },
          "title": {
            "description": "Title of resource",
            "example": "The database has gone down",
            "type": "string"
          }
        },
        "required": [
          "id",
          "permalink",
          "external_id",
          "title",
          "resource_type",
          "resource_type_label",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "FollowUpPriorityV2": {
        "example": {
          "description": "A follow-up that requires immediate attention.",
          "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
          "name": "Urgent",
          "rank": 10
        },
        "properties": {
          "description": {
            "description": "Description of the follow-up priority option",
            "example": "A follow-up that requires immediate attention.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the follow-up priority option",
            "example": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
            "type": "string"
          },
          "name": {
            "description": "Name of the follow-up priority option",
            "example": "Urgent",
            "type": "string"
          },
          "rank": {
            "description": "Rank is used to order the follow-up priority options correctly",
            "example": 10,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "rank"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "FollowUpV2": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "completed_at": "2021-08-17T13:28:57.801578Z",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Call the fire brigade",
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "priority": {
            "description": "A follow-up that requires immediate attention.",
            "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
            "name": "Urgent",
            "rank": 10
          },
          "status": "outstanding",
          "title": "Cat is stuck in the tree",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV2"
          },
          "completed_at": {
            "description": "When the follow-up was completed",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "When the follow-up was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the follow-up",
            "example": "Call the fire brigade",
            "type": "string"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV2"
          },
          "id": {
            "description": "Unique identifier for the follow-up",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident the follow-up belongs to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/FollowUpPriorityV2"
          },
          "status": {
            "description": "Status of the follow-up",
            "enum": [
              "outstanding",
              "completed",
              "deleted",
              "not_doing"
            ],
            "example": "outstanding",
            "type": "string"
          },
          "title": {
            "description": "Title of the follow-up",
            "example": "Cat is stuck in the tree",
            "type": "string"
          },
          "updated_at": {
            "description": "When the follow-up was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "incident_id",
          "title",
          "status",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "FollowUpsListResultV2": {
        "example": {
          "follow_ups": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "completed_at": "2021-08-17T13:28:57.801578Z",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Call the fire brigade",
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "priority": {
                "description": "A follow-up that requires immediate attention.",
                "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                "name": "Urgent",
                "rank": 10
              },
              "status": "outstanding",
              "title": "Cat is stuck in the tree",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "follow_ups": {
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "completed_at": "2021-08-17T13:28:57.801578Z",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Call the fire brigade",
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "priority": {
                  "description": "A follow-up that requires immediate attention.",
                  "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                  "name": "Urgent",
                  "rank": 10
                },
                "status": "outstanding",
                "title": "Cat is stuck in the tree",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/FollowUpV2"
            },
            "type": "array"
          }
        },
        "required": [
          "follow_ups"
        ],
        "type": "object"
      },
      "FollowUpsShowResultV2": {
        "example": {
          "follow_up": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "priority": {
              "description": "A follow-up that requires immediate attention.",
              "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
              "name": "Urgent",
              "rank": 10
            },
            "status": "outstanding",
            "title": "Cat is stuck in the tree",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "follow_up": {
            "$ref": "#/components/schemas/FollowUpV2"
          }
        },
        "required": [
          "follow_up"
        ],
        "type": "object"
      },
      "GroupingKeyV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYDG0"
        },
        "properties": {
          "id": {
            "description": "Unique identifier of the alert attribute the user wishes to group on",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "IdentityV1": {
        "example": {
          "dashboard_url": "https://app.incident.io/my-org",
          "name": "Alertmanager token",
          "roles": [
            "viewer"
          ]
        },
        "properties": {
          "dashboard_url": {
            "description": "The dashboard URL for this organisation",
            "example": "https://app.incident.io/my-org",
            "type": "string"
          },
          "name": {
            "description": "The name assigned to the current API Key",
            "example": "Alertmanager token",
            "type": "string"
          },
          "roles": {
            "description": "Which roles have been enabled for this key",
            "example": [
              "viewer"
            ],
            "items": {
              "description": "API key roles",
              "enum": [
                "viewer",
                "incident_creator",
                "incident_editor",
                "manage_settings",
                "global_access",
                "catalog_viewer",
                "catalog_editor",
                "incident_memberships_editor",
                "schedules_editor",
                "schedules_reader",
                "schedule_overrides_editor",
                "workflows_editor",
                "private_workflows_editor",
                "on_call_editor"
              ],
              "example": "viewer",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "roles",
          "dashboard_url"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "IncidentAttachmentV1": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "resource": {
            "external_id": "123",
            "permalink": "https://my.pagerduty.com/incidents/ABC",
            "resource_type": "pager_duty_incident",
            "title": "The database has gone down"
          }
        },
        "properties": {
          "id": {
            "description": "Unique identifier of this incident membership",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/ExternalResourceV1"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "incident_id",
          "resource",
          "creator",
          "created_at"
        ],
        "type": "object"
      },
      "IncidentCreatePayloadV1": {
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "idempotency_key": "alert-uuid",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "mode": "real",
          "name": "Our database is sad",
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_team_id": "T02A1FSLE8J",
          "source_message_channel_id": "C02AW36C1M5",
          "source_message_timestamp": "1653650280.526509",
          "status": "triage",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "visibility": "public"
        },
        "properties": {
          "custom_field_entries": {
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV1"
            },
            "type": "array"
          },
          "idempotency_key": {
            "description": "Unique string used to de-duplicate incident create requests",
            "example": "alert-uuid",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV1"
            },
            "type": "array"
          },
          "incident_type_id": {
            "description": "Incident type to create this incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "mode": {
            "description": "Whether the incident is real or test",
            "enum": [
              "real",
              "test"
            ],
            "example": "real",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "severity_id": {
            "description": "Severity to create incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "source_message_channel_id": {
            "description": "Channel ID of the source message, if this incident was created from one",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "source_message_timestamp": {
            "description": "Timestamp of the source message, if this incident was created from one",
            "example": "1653650280.526509",
            "type": "string"
          },
          "status": {
            "description": "Current status of the incident",
            "enum": [
              "triage",
              "investigating",
              "fixing",
              "monitoring",
              "closed",
              "declined"
            ],
            "example": "triage",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/articles/5905558102-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          }
        },
        "required": [
          "idempotency_key",
          "visibility"
        ],
        "type": "object"
      },
      "IncidentCreatePayloadV2": {
        "example": {
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "idempotency_key": "alert-uuid",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_status_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "incident_timestamp_values": [
            {
              "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "value": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "mode": "standard",
          "name": "Our database is sad",
          "retrospective_incident_options": {
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "slack_channel_id": "abc123"
          },
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_channel_name_override": "inc-123-database-down",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "visibility": "public"
        },
        "properties": {
          "custom_field_entries": {
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV2"
            },
            "type": "array"
          },
          "idempotency_key": {
            "description": "Unique string used to de-duplicate incident create requests",
            "example": "alert-uuid",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV2"
            },
            "type": "array"
          },
          "incident_status_id": {
            "description": "Incident status to assign to the incident",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "incident_timestamp_values": {
            "description": "Assign the incident's timestamps to these values",
            "example": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampValuePayloadV2"
            },
            "type": "array"
          },
          "incident_type_id": {
            "description": "Incident type to create this incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ],
            "example": "standard",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "retrospective_incident_options": {
            "$ref": "#/components/schemas/RetrospectiveIncidentOptionsV2"
          },
          "severity_id": {
            "description": "Severity to create incident as",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "slack_channel_name_override": {
            "description": "Name of the Slack channel to create for this incident",
            "example": "inc-123-database-down",
            "type": "string"
          },
          "slack_team_id": {
            "description": "Slack Team to create the incident in",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/articles/5905558102-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          }
        },
        "required": [
          "idempotency_key",
          "visibility"
        ],
        "type": "object"
      },
      "IncidentDurationMetricV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Lasted"
        },
        "properties": {
          "id": {
            "description": "Unique ID of this incident duration metric",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this duration metric",
            "example": "Lasted",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "rank",
          "from_timestamp_id",
          "to_timestamp_id",
          "metric_type",
          "calculation_mode",
          "created_at",
          "updated_at",
          "validate"
        ],
        "type": "object"
      },
      "IncidentDurationMetricWithValueV2": {
        "example": {
          "duration_metric": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Lasted"
          },
          "value_seconds": 1
        },
        "properties": {
          "duration_metric": {
            "$ref": "#/components/schemas/IncidentDurationMetricV2"
          },
          "value_seconds": {
            "description": "The calculated durations for this metric",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "duration_metric"
        ],
        "type": "object"
      },
      "IncidentEditPayloadV2": {
        "example": {
          "call_url": "https://zoom.us/foo",
          "custom_field_entries": [
            {
              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "values": [
                {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "value_text": "This is my text field, I hope you like it",
                  "value_timestamp": ""
                }
              ]
            }
          ],
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              },
              "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
            }
          ],
          "incident_status_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "incident_timestamp_values": [
            {
              "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "value": "2021-08-17T13:28:57.801578Z"
            }
          ],
          "name": "Our database is sad",
          "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
          "slack_channel_name_override": "inc-123-database-down",
          "summary": "Our database is really really sad, and we don't know why yet."
        },
        "properties": {
          "call_url": {
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo",
            "type": "string"
          },
          "custom_field_entries": {
            "description": "Set the incident's custom fields to these values",
            "example": [
              {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "values": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "value_text": "This is my text field, I hope you like it",
                    "value_timestamp": ""
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryPayloadV2"
            },
            "type": "array"
          },
          "incident_role_assignments": {
            "description": "Assign incident roles to these people",
            "example": [
              {
                "assignee": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                },
                "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentPayloadV2"
            },
            "type": "array"
          },
          "incident_status_id": {
            "description": "Incident status to change incident to (you can only change an incident from one active status to another, any other lifecycle changes must be taken via the app.)",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "incident_timestamp_values": {
            "description": "Assign the incident's timestamps to these values",
            "example": [
              {
                "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "value": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampValuePayloadV2"
            },
            "type": "array"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "severity_id": {
            "description": "Severity to change incident to",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          },
          "slack_channel_name_override": {
            "description": "Override the name of the incident Slack channel",
            "example": "inc-123-database-down",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IncidentMembership": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "created_at": {
            "description": "When the membership was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of this incident membership",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "incident_id": {
            "description": "Unique identifier of the incident",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "updated_at": {
            "description": "When the membership was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserV2"
          }
        },
        "required": [
          "id",
          "user",
          "incident_id",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "IncidentRoleAssignmentPayloadV1": {
        "example": {
          "assignee": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          },
          "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserReferencePayloadV1"
          },
          "incident_role_id": {
            "description": "Unique ID of an incident role. Note that the 'reporter' role can only be assigned when creating an incident.",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          }
        },
        "required": [
          "incident_role_id",
          "assignee"
        ],
        "type": "object"
      },
      "IncidentRoleAssignmentPayloadV2": {
        "example": {
          "assignee": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          },
          "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserReferencePayloadV2"
          },
          "incident_role_id": {
            "description": "Unique ID of an incident role",
            "example": "01FH5TZRWMNAFB0DZ23FD1TV96",
            "type": "string"
          }
        },
        "required": [
          "incident_role_id"
        ],
        "type": "object"
      },
      "IncidentRoleAssignmentV1": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": false,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV1"
          },
          "role": {
            "$ref": "#/components/schemas/IncidentRoleV1"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "IncidentRoleAssignmentV2": {
        "example": {
          "assignee": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          },
          "role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": false,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/UserV2"
          },
          "role": {
            "$ref": "#/components/schemas/EmbeddedIncidentRoleV2"
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "IncidentRoleV1": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the role was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "DEPRECATED: this will always be false.",
            "example": false,
            "type": "boolean"
          },
          "role_type": {
            "description": "Type of incident role",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ],
            "example": "lead",
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          },
          "updated_at": {
            "description": "When the role was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "IncidentRoleV2": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "The person currently coordinating the incident",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "role_type": "lead",
          "shortform": "lead",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the role was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "role_type": {
            "description": "Type of incident role",
            "enum": [
              "lead",
              "reporter",
              "custom"
            ],
            "example": "lead",
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          },
          "updated_at": {
            "description": "When the role was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "id",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "IncidentStatusV1": {
        "example": {
          "category": "triage",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Closed",
          "rank": 4,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "category": {
            "description": "What category of status it is. All statuses apart from live (renamed in the app to Active) and learning (renamed in the app to Post-incident) are managed by incident.io and cannot be configured",
            "enum": [
              "triage",
              "declined",
              "merged",
              "canceled",
              "live",
              "learning",
              "closed",
              "paused"
            ],
            "example": "triage",
            "type": "string"
          },
          "created_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          },
          "rank": {
            "description": "Order of this incident status",
            "example": 4,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "category",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "IncidentStatusV2": {
        "example": {
          "category": "triage",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Closed",
          "rank": 4,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "category": {
            "description": "What category of status it is. All statuses apart from live (renamed in the app to Active) and learning (renamed in the app to Post-incident) are managed by incident.io and cannot be configured",
            "enum": [
              "triage",
              "declined",
              "merged",
              "canceled",
              "live",
              "learning",
              "closed",
              "paused"
            ],
            "example": "triage",
            "type": "string"
          },
          "created_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          },
          "rank": {
            "description": "Order of this incident status",
            "example": 4,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "category",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "IncidentTimestampV1": {
        "example": {
          "last_occurred_at": "2021-08-17T13:28:57.801578Z",
          "name": "last_activity"
        },
        "properties": {
          "last_occurred_at": {
            "description": "When this last occurred, if it did",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the lifecycle event",
            "example": "last_activity",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "IncidentTimestampV2": {
        "example": {
          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "name": "Impact started",
          "rank": 1
        },
        "properties": {
          "id": {
            "description": "Unique ID of this incident timestamp",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this timestamp",
            "example": "Impact started",
            "type": "string"
          },
          "rank": {
            "description": "Order in which this timestamp should be shown",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "set_on_creation",
          "set_on_acceptance",
          "set_on_resolution",
          "set_by_rules",
          "timestamp_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "IncidentTimestampValuePayloadV2": {
        "example": {
          "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
          "value": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "incident_timestamp_id": {
            "description": "The id of the incident timestamp that this incident timestamp value is associated with.",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "type": "string"
          },
          "value": {
            "description": "The current value of this timestamp, for this incident",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "incident_timestamp_id",
          "id",
          "incident_id",
          "created_at"
        ],
        "type": "object"
      },
      "IncidentTimestampValueV2": {
        "example": {
          "value": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "value": {
            "description": "The current value of this timestamp, for this incident",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "incident_id",
          "incident_timestamp_id",
          "created_at"
        ],
        "type": "object"
      },
      "IncidentTimestampWithValueV2": {
        "example": {
          "incident_timestamp": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Impact started",
            "rank": 1
          },
          "value": {
            "value": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_timestamp": {
            "$ref": "#/components/schemas/IncidentTimestampV2"
          },
          "value": {
            "$ref": "#/components/schemas/IncidentTimestampValueV2"
          }
        },
        "required": [
          "incident_timestamp"
        ],
        "type": "object"
      },
      "IncidentTypeV1": {
        "example": {
          "create_in_triage": "always",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Customer facing production outages",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_default": false,
          "name": "Production Outage",
          "private_incidents_only": false,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "create_in_triage": {
            "description": "Whether incidents of this must always, or can optionally, be created in triage",
            "enum": [
              "always",
              "optional"
            ],
            "example": "always",
            "type": "string"
          },
          "created_at": {
            "description": "When this resource was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "What is this incident type for?",
            "example": "Customer facing production outages",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this Incident Type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_default": {
            "description": "The default Incident Type is used when no other type is explicitly specified",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The name of this Incident Type",
            "example": "Production Outage",
            "type": "string"
          },
          "private_incidents_only": {
            "description": "Should all incidents created with this Incident Type be private?",
            "example": false,
            "type": "boolean"
          },
          "updated_at": {
            "description": "When this resource was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "is_default",
          "description",
          "private_incidents_only",
          "created_at",
          "updated_at",
          "create_in_triage",
          "severity_aliases",
          "rank",
          "override_auto_close_incidents",
          "auto_close_incidents",
          "auto_close_incidents_delay_days",
          "override_auto_archive_slack_channels",
          "auto_archive_slack_channels",
          "auto_archive_slack_channels_delay_days"
        ],
        "type": "object"
      },
      "IncidentTypeV2": {
        "example": {
          "create_in_triage": "always",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Customer facing production outages",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "is_default": false,
          "name": "Production Outage",
          "private_incidents_only": false,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "create_in_triage": {
            "description": "Whether incidents of this must always, or can optionally, be created in triage",
            "enum": [
              "always",
              "optional"
            ],
            "example": "always",
            "type": "string"
          },
          "created_at": {
            "description": "When this resource was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "What is this incident type for?",
            "example": "Customer facing production outages",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this Incident Type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "is_default": {
            "description": "The default Incident Type is used when no other type is explicitly specified",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The name of this Incident Type",
            "example": "Production Outage",
            "type": "string"
          },
          "private_incidents_only": {
            "description": "Should all incidents created with this Incident Type be private?",
            "example": false,
            "type": "boolean"
          },
          "updated_at": {
            "description": "When this resource was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "is_default",
          "description",
          "private_incidents_only",
          "created_at",
          "updated_at",
          "create_in_triage",
          "severity_aliases",
          "rank",
          "override_auto_close_incidents",
          "auto_close_incidents",
          "auto_close_incidents_delay_days",
          "override_auto_archive_slack_channels",
          "auto_archive_slack_channels",
          "auto_archive_slack_channels_delay_days"
        ],
        "type": "object"
      },
      "IncidentUpdateV2": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "merged_into_incident_id": "abc123",
          "message": "We're working on a fix, hoping to ship in the next 30 minutes",
          "new_incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "new_severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "updater": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          }
        },
        "properties": {
          "created_at": {
            "description": "When the update was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for this incident update",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "incident_id": {
            "description": "The incident this update relates to",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "merged_into_incident_id": {
            "description": "The ID of the incident that this incident was merged into, if it was merged in to another incident",
            "example": "abc123",
            "type": "string"
          },
          "message": {
            "description": "Message that explains the context behind the update",
            "example": "We're working on a fix, hoping to ship in the next 30 minutes",
            "type": "string"
          },
          "new_incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV2"
          },
          "new_severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "updater": {
            "$ref": "#/components/schemas/ActorV2"
          }
        },
        "required": [
          "id",
          "incident_id",
          "new_incident_status",
          "updater",
          "created_at",
          "next_update_in_minutes"
        ],
        "type": "object"
      },
      "IncidentV1": {
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "real",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "status": "triage",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "timestamps": [
            {
              "last_occurred_at": "2021-08-17T13:28:57.801578Z",
              "name": "last_activity"
            }
          ],
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public"
        },
        "properties": {
          "call_url": {
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo",
            "type": "string"
          },
          "created_at": {
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV1"
          },
          "custom_field_entries": {
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV1"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV1"
            },
            "type": "array"
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "real",
              "test",
              "tutorial"
            ],
            "example": "real",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "permalink": {
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123",
            "type": "string"
          },
          "postmortem_document_url": {
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id",
            "type": "string"
          },
          "reference": {
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV1"
          },
          "slack_channel_id": {
            "description": "ID of the Slack channel in the organisation Slack workspace. Note that the channel is sometimes created asynchronously, so may not be present when the incident is just created.",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "slack_channel_name": {
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "status": {
            "description": "Current status of the incident",
            "enum": [
              "triage",
              "investigating",
              "fixing",
              "monitoring",
              "closed",
              "declined"
            ],
            "example": "triage",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "timestamps": {
            "description": "Incident lifecycle events and when they last occurred",
            "example": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampV1"
            },
            "type": "array"
          },
          "updated_at": {
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/articles/5905558102-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          }
        },
        "required": [
          "status",
          "id",
          "external_id",
          "reference",
          "name",
          "incident_status",
          "idempotency_key",
          "did_opt_out_of_post_incident_flow",
          "visibility",
          "mode",
          "organisation_id",
          "creator",
          "last_activity_at",
          "incident_role_assignments",
          "custom_field_entries",
          "slack_team_id",
          "slack_channel_id",
          "postmortem_status",
          "created_at",
          "updated_at",
          "reported_at"
        ],
        "type": "object"
      },
      "IncidentV2": {
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "duration_metrics": [
            {
              "duration_metric": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Lasted"
              },
              "value_seconds": 1
            }
          ],
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "has_debrief": false,
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "incident_timestamp_values": [
            {
              "incident_timestamp": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              },
              "value": {
                "value": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "standard",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public",
          "workload_minutes_late": 40.7,
          "workload_minutes_sleeping": 0,
          "workload_minutes_total": 60.7,
          "workload_minutes_working": 20
        },
        "properties": {
          "call_url": {
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo",
            "type": "string"
          },
          "created_at": {
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV2"
          },
          "custom_field_entries": {
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV2"
            },
            "type": "array"
          },
          "duration_metrics": {
            "description": "Incident duration metrics and their measurements for this incident",
            "example": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentDurationMetricWithValueV2"
            },
            "type": "array"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV4"
          },
          "has_debrief": {
            "description": "If this incident has a debrief attached",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV2"
            },
            "type": "array"
          },
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV2"
          },
          "incident_timestamp_values": {
            "description": "Incident lifecycle events and when they occurred",
            "example": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampWithValueV2"
            },
            "type": "array"
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV2"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ],
            "example": "standard",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "permalink": {
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123",
            "type": "string"
          },
          "postmortem_document_url": {
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id",
            "type": "string"
          },
          "reference": {
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "slack_channel_id": {
            "description": "ID of the Slack channel in the organisation Slack workspace. Note that the channel is sometimes created asynchronously, so may not be present when the incident is just created.",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "slack_channel_name": {
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "updated_at": {
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/articles/5905558102-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          },
          "workload_minutes_late": {
            "description": "Amount of time spent on the incident in late hours",
            "example": 40.7,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_sleeping": {
            "description": "Amount of time spent on the incident in sleeping hours",
            "example": 0,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_total": {
            "description": "Amount of time spent on the incident in total",
            "example": 60.7,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_working": {
            "description": "Amount of time spent on the incident in working hours",
            "example": 20,
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "incident_status",
          "id",
          "external_id",
          "reference",
          "name",
          "idempotency_key",
          "did_opt_out_of_post_incident_flow",
          "visibility",
          "mode",
          "organisation_id",
          "creator",
          "last_activity_at",
          "incident_role_assignments",
          "custom_field_entries",
          "slack_team_id",
          "slack_channel_id",
          "postmortem_status",
          "created_at",
          "updated_at",
          "reported_at"
        ],
        "type": "object"
      },
      "IncidentWithStatusChangeV2": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "has_debrief": false,
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          },
          "message": "We're working on a fix, hoping to ship in the next 30 minutes",
          "new_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "previous_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2"
          },
          "message": {
            "description": "Message that explains the context behind the update",
            "example": "We're working on a fix, hoping to ship in the next 30 minutes",
            "type": "string"
          },
          "new_status": {
            "$ref": "#/components/schemas/IncidentStatusV2"
          },
          "previous_status": {
            "$ref": "#/components/schemas/IncidentStatusV2"
          }
        },
        "required": [
          "incident",
          "previous_status",
          "new_status"
        ],
        "type": "object"
      },
      "ListResponseBody": {
        "example": {
          "incident_attachments": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "resource": {
                "external_id": "123",
                "permalink": "https://my.pagerduty.com/incidents/ABC",
                "resource_type": "pager_duty_incident",
                "title": "The database has gone down"
              }
            }
          ]
        },
        "properties": {
          "incident_attachments": {
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "resource": {
                  "external_id": "123",
                  "permalink": "https://my.pagerduty.com/incidents/ABC",
                  "resource_type": "pager_duty_incident",
                  "title": "The database has gone down"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentAttachmentV1"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_attachments"
        ],
        "type": "object"
      },
      "ListResponseBody2": {
        "example": {
          "incident_roles": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "The person currently coordinating the incident",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
              "name": "Incident Lead",
              "required": false,
              "role_type": "lead",
              "shortform": "lead",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_roles": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleV1"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_roles"
        ],
        "type": "object"
      },
      "ListResponseBody3": {
        "example": {
          "incident_roles": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "The person currently coordinating the incident",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
              "name": "Incident Lead",
              "role_type": "lead",
              "shortform": "lead",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_roles": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleV2"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_roles"
        ],
        "type": "object"
      },
      "ListResponseBody4": {
        "example": {
          "incident_statuses": [
            {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_statuses": {
            "example": [
              {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentStatusV1"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_statuses"
        ],
        "type": "object"
      },
      "ListResponseBody5": {
        "example": {
          "incident_timestamps": [
            {
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Impact started",
              "rank": 1
            }
          ]
        },
        "properties": {
          "incident_timestamps": {
            "example": [
              {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampV2"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_timestamps"
        ],
        "type": "object"
      },
      "ListResponseBody6": {
        "example": {
          "incident_types": [
            {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "incident_types": {
            "example": [
              {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTypeV1"
            },
            "type": "array"
          }
        },
        "required": [
          "incident_types"
        ],
        "type": "object"
      },
      "ListResponseBody7": {
        "example": {
          "incident_updates": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "merged_into_incident_id": "abc123",
              "message": "We're working on a fix, hoping to ship in the next 30 minutes",
              "new_incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "new_severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "updater": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          }
        },
        "properties": {
          "incident_updates": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "merged_into_incident_id": "abc123",
                "message": "We're working on a fix, hoping to ship in the next 30 minutes",
                "new_incident_status": {
                  "category": "triage",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Closed",
                  "rank": 4,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "new_severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "updater": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentUpdateV2"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResult"
          }
        },
        "required": [
          "incident_updates"
        ],
        "type": "object"
      },
      "ListResponseBody8": {
        "example": {
          "incidents": [
            {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "real",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "status": "triage",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "timestamps": [
                {
                  "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                  "name": "last_activity"
                }
              ],
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public"
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          }
        },
        "properties": {
          "incidents": {
            "example": [
              {
                "call_url": "https://zoom.us/foo",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "creator": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "custom_field_entries": [
                  {
                    "custom_field": {
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ]
                    },
                    "values": [
                      {
                        "value_catalog_entry": {
                          "aliases": [
                            "lawrence@incident.io",
                            "lawrence"
                          ],
                          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Primary On-call"
                        },
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option": {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        },
                        "value_text": "This is my text field, I hope you like it"
                      }
                    ]
                  }
                ],
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "role": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": false,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_type": {
                  "create_in_triage": "always",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Customer facing production outages",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "is_default": false,
                  "name": "Production Outage",
                  "private_incidents_only": false,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "mode": "real",
                "name": "Our database is sad",
                "permalink": "https://app.incident.io/incidents/123",
                "postmortem_document_url": "https://docs.google.com/my_doc_id",
                "reference": "INC-123",
                "severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "slack_channel_id": "C02AW36C1M5",
                "slack_channel_name": "inc-165-green-parrot",
                "slack_team_id": "T02A1FSLE8J",
                "status": "triage",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "timestamps": [
                  {
                    "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                    "name": "last_activity"
                  }
                ],
                "updated_at": "2021-08-17T13:28:57.801578Z",
                "visibility": "public"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentV1"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotal"
          }
        },
        "required": [
          "incidents"
        ],
        "type": "object"
      },
      "ListResponseBody9": {
        "example": {
          "incidents": [
            {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "duration_metrics": [
                {
                  "duration_metric": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Lasted"
                  },
                  "value_seconds": 1
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "has_debrief": false,
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            }
          ],
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          }
        },
        "properties": {
          "incidents": {
            "example": [
              {
                "call_url": "https://zoom.us/foo",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "creator": {
                  "api_key": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "My test API key"
                  },
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "custom_field_entries": [
                  {
                    "custom_field": {
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ]
                    },
                    "values": [
                      {
                        "value_catalog_entry": {
                          "aliases": [
                            "lawrence@incident.io",
                            "lawrence"
                          ],
                          "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Primary On-call"
                        },
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option": {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        },
                        "value_text": "This is my text field, I hope you like it"
                      }
                    ]
                  }
                ],
                "duration_metrics": [
                  {
                    "duration_metric": {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Lasted"
                    },
                    "value_seconds": 1
                  }
                ],
                "external_issue_reference": {
                  "issue_name": "INC-123",
                  "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                  "provider": "asana"
                },
                "has_debrief": false,
                "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "role": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": false,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_status": {
                  "category": "triage",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Closed",
                  "rank": 4,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "incident_timestamp_values": [
                  {
                    "incident_timestamp": {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Impact started",
                      "rank": 1
                    },
                    "value": {
                      "value": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                ],
                "incident_type": {
                  "create_in_triage": "always",
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Customer facing production outages",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "is_default": false,
                  "name": "Production Outage",
                  "private_incidents_only": false,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "mode": "standard",
                "name": "Our database is sad",
                "permalink": "https://app.incident.io/incidents/123",
                "postmortem_document_url": "https://docs.google.com/my_doc_id",
                "reference": "INC-123",
                "severity": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "Issues with **low impact**.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Minor",
                  "rank": 1,
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                },
                "slack_channel_id": "C02AW36C1M5",
                "slack_channel_name": "inc-165-green-parrot",
                "slack_team_id": "T02A1FSLE8J",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "updated_at": "2021-08-17T13:28:57.801578Z",
                "visibility": "public",
                "workload_minutes_late": 40.7,
                "workload_minutes_sleeping": 0,
                "workload_minutes_total": 60.7,
                "workload_minutes_working": 20
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentV2"
            },
            "type": "array"
          },
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotal"
          }
        },
        "required": [
          "incidents"
        ],
        "type": "object"
      },
      "ManagedResourceV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "managed_by": "dashboard",
          "resource_id": "abc123",
          "resource_type": "escalation_path",
          "source_url": "https://github.com/my-company/infrastructure"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "type": "object"
          },
          "managed_by": {
            "description": "How is this resource managed",
            "enum": [
              "dashboard",
              "terraform",
              "external"
            ],
            "example": "dashboard",
            "type": "string"
          },
          "resource_id": {
            "description": "The ID of the related resource",
            "example": "abc123",
            "type": "string"
          },
          "resource_type": {
            "enum": [
              "escalation_path",
              "schedule",
              "workflow"
            ],
            "example": "escalation_path",
            "type": "string"
          },
          "source_url": {
            "description": "The url of the external repository where this resource is managed (if there is one)",
            "example": "https://github.com/my-company/infrastructure",
            "type": "string"
          }
        },
        "required": [
          "resource_type",
          "resource_id",
          "managed_by",
          "annotations"
        ],
        "type": "object"
      },
      "ManagementMetaV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "managed_by": "dashboard",
          "source_url": "https://github.com/my-company/infrastructure"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "type": "object"
          },
          "managed_by": {
            "description": "How is this resource managed",
            "enum": [
              "dashboard",
              "terraform",
              "external"
            ],
            "example": "dashboard",
            "type": "string"
          },
          "source_url": {
            "description": "The url of the external repository where this resource is managed (if there is one)",
            "example": "https://github.com/my-company/infrastructure",
            "type": "string"
          }
        },
        "required": [
          "annotations",
          "managed_by"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "PaginationMetaResult": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "type": "object"
      },
      "PaginationMetaResultV1": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "PaginationMetaResultV2": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "PaginationMetaResultV3": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "type": "object",
        "x-public-api-version": "v3"
      },
      "PaginationMetaResultWithTotal": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25,
          "total_record_count": 238
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          },
          "total_record_count": {
            "description": "How many matching records were there in total, if known",
            "example": 238,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "type": "object"
      },
      "PaginationMetaResultWithTotalV2": {
        "example": {
          "after": "01FCNDV6P870EA6S7TK1DSYDG0",
          "page_size": 25,
          "total_record_count": 238
        },
        "properties": {
          "after": {
            "description": "If provided, pass this as the 'after' param to load the next page",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "page_size": {
            "default": 25,
            "description": "What was the maximum number of results requested",
            "example": 25,
            "format": "int64",
            "type": "integer"
          },
          "total_record_count": {
            "description": "How many matching records were there in total, if known",
            "example": 238,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "page_size"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "PrivateIncidentActionCreatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.action_created_v1",
          "private_incident.action_created_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.action_created_v1",
            "type": "string"
          },
          "private_incident.action_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.action_created_v1"
        ],
        "type": "object"
      },
      "PrivateIncidentActionUpdatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.action_updated_v1",
          "private_incident.action_updated_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.action_updated_v1",
            "type": "string"
          },
          "private_incident.action_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.action_updated_v1"
        ],
        "type": "object"
      },
      "PrivateIncidentFollowUpCreatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.follow_up_created_v1",
          "private_incident.follow_up_created_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.follow_up_created_v1",
            "type": "string"
          },
          "private_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.follow_up_created_v1"
        ],
        "type": "object"
      },
      "PrivateIncidentFollowUpUpdatedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.follow_up_updated_v1",
          "private_incident.follow_up_updated_v1": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.follow_up_updated_v1",
            "type": "string"
          },
          "private_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.follow_up_updated_v1"
        ],
        "type": "object"
      },
      "PrivateIncidentIncidentCreatedV2ResponseBody": {
        "example": {
          "event_type": "private_incident.incident_created_v2",
          "private_incident.incident_created_v2": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.incident_created_v2",
            "type": "string"
          },
          "private_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.incident_created_v2"
        ],
        "type": "object"
      },
      "PrivateIncidentIncidentUpdatedV2ResponseBody": {
        "example": {
          "event_type": "private_incident.incident_updated_v2",
          "private_incident.incident_updated_v2": {
            "id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.incident_updated_v2",
            "type": "string"
          },
          "private_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookPrivateResourceV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.incident_updated_v2"
        ],
        "type": "object"
      },
      "PrivateIncidentMembershipGrantedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.membership_granted_v1",
          "private_incident.membership_granted_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.membership_granted_v1",
            "type": "string"
          },
          "private_incident.membership_granted_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.membership_granted_v1"
        ],
        "type": "object"
      },
      "PrivateIncidentMembershipRevokedV1ResponseBody": {
        "example": {
          "event_type": "private_incident.membership_revoked_v1",
          "private_incident.membership_revoked_v1": {
            "actor_user_id": "abc123",
            "incident_id": "abc123",
            "user_id": "abc123"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "private_incident.membership_revoked_v1",
            "type": "string"
          },
          "private_incident.membership_revoked_v1": {
            "$ref": "#/components/schemas/WebhookIncidentUserV2"
          }
        },
        "required": [
          "event_type",
          "private_incident.membership_revoked_v1"
        ],
        "type": "object"
      },
      "PublicIncidentActionCreatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.action_created_v1",
          "public_incident.action_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.action_created_v1",
            "type": "string"
          },
          "public_incident.action_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "required": [
          "event_type",
          "public_incident.action_created_v1"
        ],
        "type": "object"
      },
      "PublicIncidentActionUpdatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.action_updated_v1",
          "public_incident.action_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.action_updated_v1",
            "type": "string"
          },
          "public_incident.action_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "required": [
          "event_type",
          "public_incident.action_updated_v1"
        ],
        "type": "object"
      },
      "PublicIncidentFollowUpCreatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.follow_up_created_v1",
          "public_incident.follow_up_created_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.follow_up_created_v1",
            "type": "string"
          },
          "public_incident.follow_up_created_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "required": [
          "event_type",
          "public_incident.follow_up_created_v1"
        ],
        "type": "object"
      },
      "PublicIncidentFollowUpUpdatedV1ResponseBody": {
        "example": {
          "event_type": "public_incident.follow_up_updated_v1",
          "public_incident.follow_up_updated_v1": {
            "assignee": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            },
            "completed_at": "2021-08-17T13:28:57.801578Z",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Call the fire brigade",
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "follow_up": true,
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "status": "outstanding",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.follow_up_updated_v1",
            "type": "string"
          },
          "public_incident.follow_up_updated_v1": {
            "$ref": "#/components/schemas/ActionV1"
          }
        },
        "required": [
          "event_type",
          "public_incident.follow_up_updated_v1"
        ],
        "type": "object"
      },
      "PublicIncidentIncidentCreatedV2ResponseBody": {
        "example": {
          "event_type": "public_incident.incident_created_v2",
          "public_incident.incident_created_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "has_debrief": false,
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.incident_created_v2",
            "type": "string"
          },
          "public_incident.incident_created_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_created_v2"
        ],
        "type": "object"
      },
      "PublicIncidentIncidentStatusUpdatedV2ResponseBody": {
        "example": {
          "event_type": "public_incident.incident_status_updated_v2",
          "public_incident.incident_status_updated_v2": {
            "incident": {
              "call_url": "https://zoom.us/foo",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "creator": {
                "api_key": {
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "My test API key"
                },
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              },
              "custom_field_entries": [
                {
                  "custom_field": {
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ]
                  },
                  "values": [
                    {
                      "value_catalog_entry": {
                        "aliases": [
                          "lawrence@incident.io",
                          "lawrence"
                        ],
                        "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Primary On-call"
                      },
                      "value_link": "https://google.com/",
                      "value_numeric": "123.456",
                      "value_option": {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      },
                      "value_text": "This is my text field, I hope you like it"
                    }
                  ]
                }
              ],
              "duration_metrics": [
                {
                  "duration_metric": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Lasted"
                  },
                  "value_seconds": 1
                }
              ],
              "external_issue_reference": {
                "issue_name": "INC-123",
                "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                "provider": "asana"
              },
              "has_debrief": false,
              "id": "01FDAG4SAP5TYPT98WGR2N7W91",
              "incident_role_assignments": [
                {
                  "assignee": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  },
                  "role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_status": {
                "category": "triage",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Closed",
                "rank": 4,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "incident_timestamp_values": [
                {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  },
                  "value": {
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                }
              ],
              "incident_type": {
                "create_in_triage": "always",
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Customer facing production outages",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "is_default": false,
                "name": "Production Outage",
                "private_incidents_only": false,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "mode": "standard",
              "name": "Our database is sad",
              "permalink": "https://app.incident.io/incidents/123",
              "postmortem_document_url": "https://docs.google.com/my_doc_id",
              "reference": "INC-123",
              "severity": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              },
              "slack_channel_id": "C02AW36C1M5",
              "slack_channel_name": "inc-165-green-parrot",
              "slack_team_id": "T02A1FSLE8J",
              "summary": "Our database is really really sad, and we don't know why yet.",
              "updated_at": "2021-08-17T13:28:57.801578Z",
              "visibility": "public",
              "workload_minutes_late": 40.7,
              "workload_minutes_sleeping": 0,
              "workload_minutes_total": 60.7,
              "workload_minutes_working": 20
            },
            "message": "We're working on a fix, hoping to ship in the next 30 minutes",
            "new_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "previous_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.incident_status_updated_v2",
            "type": "string"
          },
          "public_incident.incident_status_updated_v2": {
            "$ref": "#/components/schemas/IncidentWithStatusChangeV2"
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_status_updated_v2"
        ],
        "type": "object"
      },
      "PublicIncidentIncidentUpdatedV2ResponseBody": {
        "example": {
          "event_type": "public_incident.incident_updated_v2",
          "public_incident.incident_updated_v2": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "has_debrief": false,
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "related_incidents": [
              "INC-237"
            ],
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "event_type": {
            "description": "What type of event is this webhook for?",
            "enum": [
              "public_incident.incident_created_v2",
              "private_incident.incident_created_v2",
              "public_incident.incident_updated_v2",
              "private_incident.incident_updated_v2",
              "public_incident.incident_status_updated_v2",
              "public_incident.follow_up_created_v1",
              "private_incident.follow_up_created_v1",
              "public_incident.follow_up_updated_v1",
              "private_incident.follow_up_updated_v1",
              "public_incident.action_created_v1",
              "private_incident.action_created_v1",
              "public_incident.action_updated_v1",
              "private_incident.action_updated_v1",
              "private_incident.membership_granted_v1",
              "private_incident.membership_revoked_v1"
            ],
            "example": "public_incident.incident_updated_v2",
            "type": "string"
          },
          "public_incident.incident_updated_v2": {
            "$ref": "#/components/schemas/WebhookIncidentV2"
          }
        },
        "required": [
          "event_type",
          "public_incident.incident_updated_v2"
        ],
        "type": "object"
      },
      "RBACRoleV2": {
        "example": {
          "description": "Elevated permissions for the customer success team.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Customer Success",
          "slug": "customer-success"
        },
        "properties": {
          "description": {
            "description": "Description of the purpose for the RBAC role",
            "example": "Elevated permissions for the customer success team.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the RBAC role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name of the RBAC role",
            "example": "Customer Success",
            "type": "string"
          },
          "slug": {
            "description": "Unique human-readable slug for the RBAC role",
            "example": "customer-success",
            "type": "string"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "name",
          "slug",
          "privileges",
          "is_base_role",
          "rank",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "RetrospectiveIncidentOptionsV2": {
        "example": {
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "slack_channel_id": "abc123"
        },
        "properties": {
          "postmortem_document_url": {
            "description": "If the incident mode is 'retrospective', pass the URL of the postmortem to attach it to the incident",
            "example": "https://docs.google.com/my_doc_id",
            "type": "string"
          },
          "slack_channel_id": {
            "description": "If the incident mode is 'retrospective', pass the ID of a Slack channel in your workspace to attach the incident to an existing channel, rather than creating a new one",
            "example": "abc123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReturnsMetaV2": {
        "example": {
          "array": true,
          "type": "IncidentStatus"
        },
        "properties": {
          "array": {
            "description": "Whether the return value should be single or multi-value",
            "example": true,
            "type": "boolean"
          },
          "type": {
            "description": "Expected return type of this expression (what to try casting the result to)",
            "example": "IncidentStatus",
            "type": "string"
          }
        },
        "required": [
          "type",
          "array"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleConfigCreatePayloadV2": {
        "example": {
          "rotations": [
            {
              "effective_from": "2021-08-17T13:28:57.801578Z",
              "handover_start_at": "2021-08-17T13:28:57.801578Z",
              "handovers": [
                {
                  "interval": 1,
                  "interval_type": "hourly"
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layers": [
                {
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "name": "Layer 1"
                }
              ],
              "name": "My Rotation",
              "users": [
                {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                }
              ],
              "working_interval": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "monday"
                }
              ]
            }
          ]
        },
        "properties": {
          "rotations": {
            "example": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "hourly"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationCreatePayloadV2"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleConfigUpdatePayloadV2": {
        "example": {
          "rotations": [
            {
              "effective_from": "2021-08-17T13:28:57.801578Z",
              "handover_start_at": "2021-08-17T13:28:57.801578Z",
              "handovers": [
                {
                  "interval": 1,
                  "interval_type": "hourly"
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layers": [
                {
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "name": "Layer 1"
                }
              ],
              "name": "My Rotation",
              "users": [
                {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                }
              ],
              "working_interval": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "monday"
                }
              ]
            }
          ]
        },
        "properties": {
          "rotations": {
            "example": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "hourly"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationUpdatePayloadV2"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleConfigV2": {
        "example": {
          "rotations": [
            {
              "effective_from": "2021-08-17T13:28:57.801578Z",
              "handover_start_at": "2021-08-17T13:28:57.801578Z",
              "handovers": [
                {
                  "interval": 1,
                  "interval_type": "hourly"
                }
              ],
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layers": [
                {
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "name": "Layer 1"
                }
              ],
              "name": "Primary On-Call Schedule",
              "users": [
                {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              ],
              "working_interval": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "monday"
                }
              ],
              "working_intervals": [
                {
                  "end_time": "17:00",
                  "start_time": "09:00",
                  "weekday": "monday"
                }
              ]
            }
          ]
        },
        "properties": {
          "rotations": {
            "description": "Rotas in this schedule",
            "example": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "hourly"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "Primary On-Call Schedule",
                "users": [
                  {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ],
                "working_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationV2"
            },
            "type": "array"
          }
        },
        "required": [
          "rotations",
          "version"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleCreatePayloadV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "version-of-terraform"
          },
          "config": {
            "rotations": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "hourly"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ]
          },
          "holidays_public_config": {
            "country_codes": [
              "abc123"
            ]
          },
          "name": "My Schedule",
          "timezone": "America/Los_Angeles"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about the schedule",
            "example": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "type": "object"
          },
          "config": {
            "$ref": "#/components/schemas/ScheduleConfigCreatePayloadV2"
          },
          "holidays_public_config": {
            "$ref": "#/components/schemas/ScheduleHolidaysPublicConfigPayloadV2"
          },
          "name": {
            "description": "Name of the schedule",
            "example": "My Schedule",
            "type": "string"
          },
          "timezone": {
            "description": "Timezone of the schedule",
            "example": "America/Los_Angeles",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleEntriesListPayloadV2": {
        "example": {
          "final": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ],
          "overrides": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ],
          "scheduled": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ]
        },
        "properties": {
          "final": {
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "type": "array"
          },
          "overrides": {
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "type": "array"
          },
          "scheduled": {
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "type": "array"
          }
        },
        "required": [
          "scheduled",
          "overrides",
          "final"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleEntryV2": {
        "example": {
          "end_at": "2021-08-17T13:28:57.801578Z",
          "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
          "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "start_at": "2021-08-17T13:28:57.801578Z",
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "end_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "entry_id": {
            "description": "Unique identifier of the schedule entry",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "fingerprint": {
            "description": "A unique identifier for this entry, used to determine a unique shift",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "layer_id": {
            "description": "If present, the layer this entry applies to on the rota",
            "example": "01G0J1EXE7AXZ2C93K61WBPYNH",
            "type": "string"
          },
          "rotation_id": {
            "description": "If present, the rotation this entry applies to on the schedule",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "start_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserV2"
          }
        },
        "required": [
          "user_id",
          "external_user_id",
          "start_at",
          "end_at"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleHolidaysPublicConfigPayloadV2": {
        "example": {
          "country_codes": [
            "abc123"
          ]
        },
        "properties": {
          "country_codes": {
            "description": "ISO 3166-1 alpha-2 country codes for the countries that this schedule is configured to view holidays for",
            "example": [
              "abc123"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "country_codes"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleHolidaysPublicConfigV2": {
        "example": {
          "country_codes": [
            "GB",
            "FR"
          ]
        },
        "properties": {
          "country_codes": {
            "description": "ISO 3166-1 alpha-2 country codes for the countries that this schedule is configured to view holidays for",
            "example": [
              "GB",
              "FR"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "country_codes"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleLayerCreatePayloadV2": {
        "example": {
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Layer 1"
        },
        "properties": {
          "id": {
            "description": "Unique identifier of the layer",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "name": {
            "description": "Name of the layer",
            "example": "Layer 1",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleLayerUpdatePayloadV2": {
        "example": {
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Layer 1"
        },
        "properties": {
          "id": {
            "description": "Unique identifier of the layer",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "name": {
            "description": "Name of the layer",
            "example": "Layer 1",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleLayerV2": {
        "example": {
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Layer 1"
        },
        "properties": {
          "id": {
            "description": "Unique identifier of the layer",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "name": {
            "description": "Name of the layer",
            "example": "Layer 1",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleOverrideV2": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "end_at": "2021-08-17T13:28:57.801578Z",
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layer_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "schedule_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "start_at": "2021-08-17T13:28:57.801578Z",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "user": {
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "created_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "end_at": {
            "description": "End of the override",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique internal ID of the schedule override",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "layer_id": {
            "description": "The layer on the rotation on the schedule that this override applies to",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "rotation_id": {
            "description": "The rotation on the schedule that this override applies to",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "schedule_id": {
            "description": "The schedule that this override applies to",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "start_at": {
            "description": "Start of the override",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserV2"
          }
        },
        "required": [
          "id",
          "schedule_id",
          "rotation_id",
          "layer_id",
          "start_at",
          "end_at",
          "created_at",
          "updated_at",
          "user_id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationCreatePayloadV2": {
        "example": {
          "effective_from": "2021-08-17T13:28:57.801578Z",
          "handover_start_at": "2021-08-17T13:28:57.801578Z",
          "handovers": [
            {
              "interval": 1,
              "interval_type": "hourly"
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layers": [
            {
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Layer 1"
            }
          ],
          "name": "My Rotation",
          "users": [
            {
              "email": "bob@example.com",
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "slack_user_id": "USER123"
            }
          ],
          "working_interval": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "monday"
            }
          ]
        },
        "properties": {
          "effective_from": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "handover_start_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "handovers": {
            "example": [
              {
                "interval": 1,
                "interval_type": "hourly"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationHandoverV2"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier of the rotation",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "layers": {
            "example": [
              {
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Layer 1"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleLayerCreatePayloadV2"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the rotation",
            "example": "My Rotation",
            "type": "string"
          },
          "users": {
            "example": [
              {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UserReferencePayloadV2"
            },
            "type": "array"
          },
          "working_interval": {
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "monday"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationWorkingIntervalCreatePayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationHandoverV2": {
        "example": {
          "interval": 1,
          "interval_type": "hourly"
        },
        "properties": {
          "interval": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "interval_type": {
            "description": "How often a handover occurs",
            "enum": [
              "hourly",
              "daily",
              "weekly"
            ],
            "example": "hourly",
            "type": "string",
            "x-public-api-version": "v2"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationUpdatePayloadV2": {
        "example": {
          "effective_from": "2021-08-17T13:28:57.801578Z",
          "handover_start_at": "2021-08-17T13:28:57.801578Z",
          "handovers": [
            {
              "interval": 1,
              "interval_type": "hourly"
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layers": [
            {
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Layer 1"
            }
          ],
          "name": "My Rotation",
          "users": [
            {
              "email": "bob@example.com",
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "slack_user_id": "USER123"
            }
          ],
          "working_interval": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "monday"
            }
          ]
        },
        "properties": {
          "effective_from": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "handover_start_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "handovers": {
            "example": [
              {
                "interval": 1,
                "interval_type": "hourly"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationHandoverV2"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier of the rotation",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "layers": {
            "example": [
              {
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Layer 1"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleLayerUpdatePayloadV2"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the rotation",
            "example": "My Rotation",
            "type": "string"
          },
          "users": {
            "example": [
              {
                "email": "bob@example.com",
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "slack_user_id": "USER123"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UserReferencePayloadV2"
            },
            "type": "array"
          },
          "working_interval": {
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "monday"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationWorkingIntervalUpdatePayloadV2"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationV2": {
        "example": {
          "effective_from": "2021-08-17T13:28:57.801578Z",
          "handover_start_at": "2021-08-17T13:28:57.801578Z",
          "handovers": [
            {
              "interval": 1,
              "interval_type": "hourly"
            }
          ],
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "layers": [
            {
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Layer 1"
            }
          ],
          "name": "Primary On-Call Schedule",
          "users": [
            {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          ],
          "working_interval": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "monday"
            }
          ],
          "working_intervals": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "monday"
            }
          ]
        },
        "properties": {
          "effective_from": {
            "description": "When this rotation config will be effective from",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "handover_start_at": {
            "description": "Defines the next moment we'll trigger a handover",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "handovers": {
            "description": "Defines the handover intervals for this rota, in order they should apply",
            "example": [
              {
                "interval": 1,
                "interval_type": "hourly"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationHandoverV2"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique internal ID of the rotation",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "layers": {
            "description": "Controls how many people are on-call concurrently",
            "example": [
              {
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Layer 1"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleLayerV2"
            },
            "type": "array"
          },
          "name": {
            "description": "Human readable name synced from external provider",
            "example": "Primary On-Call Schedule",
            "type": "string"
          },
          "users": {
            "description": "Users who are available to be scheduled on this rota",
            "example": [
              {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UserV2"
            },
            "type": "array"
          },
          "working_interval": {
            "description": "DEPRECATED: Use working_intervals instead.",
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "monday"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationWorkingIntervalV2"
            },
            "type": "array"
          },
          "working_intervals": {
            "description": "Optional restrictions that define when to schedule people for this rota",
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "monday"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleRotationWorkingIntervalV2"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "layers",
          "user_ids",
          "users",
          "working_intervals",
          "handover_start_at",
          "handovers"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationWorkingIntervalCreatePayloadV2": {
        "example": {
          "end_time": "17:00",
          "start_time": "09:00",
          "weekday": "monday"
        },
        "properties": {
          "end_time": {
            "description": "End time of the interval, in 24hr format",
            "example": "17:00",
            "type": "string"
          },
          "start_time": {
            "description": "Start time of the interval, in 24hr format",
            "example": "09:00",
            "type": "string"
          },
          "weekday": {
            "description": "Weekdays for use with a schedule",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ],
            "example": "monday",
            "type": "string",
            "x-public-api-version": "v2"
          }
        },
        "required": [
          "weekday",
          "start_time",
          "end_time"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationWorkingIntervalUpdatePayloadV2": {
        "example": {
          "end_time": "17:00",
          "start_time": "09:00",
          "weekday": "monday"
        },
        "properties": {
          "end_time": {
            "description": "End time of the interval, in 24hr format",
            "example": "17:00",
            "type": "string"
          },
          "start_time": {
            "description": "Start time of the interval, in 24hr format",
            "example": "09:00",
            "type": "string"
          },
          "weekday": {
            "description": "Weekdays for use with a schedule",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ],
            "example": "monday",
            "type": "string",
            "x-public-api-version": "v2"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleRotationWorkingIntervalV2": {
        "example": {
          "end_time": "17:00",
          "start_time": "09:00",
          "weekday": "monday"
        },
        "properties": {
          "end_time": {
            "description": "End time of the interval, in 24hr format",
            "example": "17:00",
            "type": "string"
          },
          "start_time": {
            "description": "Start time of the interval, in 24hr format",
            "example": "09:00",
            "type": "string"
          },
          "weekday": {
            "description": "Weekdays for use with a schedule",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ],
            "example": "monday",
            "type": "string",
            "x-public-api-version": "v2"
          }
        },
        "required": [
          "weekday",
          "start_time",
          "end_time"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleUpdatePayloadV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "version-of-terraform"
          },
          "config": {
            "rotations": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "hourly"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "My Rotation",
                "users": [
                  {
                    "email": "bob@example.com",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "slack_user_id": "USER123"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ]
          },
          "holidays_public_config": {
            "country_codes": [
              "abc123"
            ]
          },
          "name": "My Schedule",
          "timezone": "America/Los_Angeles"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that can track metadata about the schedule",
            "example": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "type": "object"
          },
          "config": {
            "$ref": "#/components/schemas/ScheduleConfigUpdatePayloadV2"
          },
          "holidays_public_config": {
            "$ref": "#/components/schemas/ScheduleHolidaysPublicConfigPayloadV2"
          },
          "name": {
            "description": "Name of the schedule",
            "example": "My Schedule",
            "type": "string"
          },
          "timezone": {
            "description": "Timezone of the schedule",
            "example": "America/Los_Angeles",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "ScheduleV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "config": {
            "rotations": [
              {
                "effective_from": "2021-08-17T13:28:57.801578Z",
                "handover_start_at": "2021-08-17T13:28:57.801578Z",
                "handovers": [
                  {
                    "interval": 1,
                    "interval_type": "hourly"
                  }
                ],
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layers": [
                  {
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Layer 1"
                  }
                ],
                "name": "Primary On-Call Schedule",
                "users": [
                  {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                ],
                "working_interval": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ],
                "working_intervals": [
                  {
                    "end_time": "17:00",
                    "start_time": "09:00",
                    "weekday": "monday"
                  }
                ]
              }
            ]
          },
          "created_at": "2021-08-17T13:28:57.801578Z",
          "current_shifts": [
            {
              "end_at": "2021-08-17T13:28:57.801578Z",
              "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
              "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "start_at": "2021-08-17T13:28:57.801578Z",
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            }
          ],
          "holidays_public_config": {
            "country_codes": [
              "GB",
              "FR"
            ]
          },
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "name": "Primary On-Call Schedule",
          "timezone": "Europe/London",
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "type": "object"
          },
          "config": {
            "$ref": "#/components/schemas/ScheduleConfigV2"
          },
          "created_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "current_shifts": {
            "description": "Shifts that are on-going for this schedule, if a native schedule",
            "example": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleEntryV2"
            },
            "type": "array"
          },
          "holidays_public_config": {
            "$ref": "#/components/schemas/ScheduleHolidaysPublicConfigV2"
          },
          "id": {
            "description": "Unique internal ID of the schedule",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "name": {
            "description": "Human readable name synced from external provider",
            "example": "Primary On-Call Schedule",
            "type": "string"
          },
          "timezone": {
            "description": "Timezone of the schedule, as interpreted at the point of generating the report",
            "example": "Europe/London",
            "type": "string"
          },
          "updated_at": {
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "timezone",
          "external_provider",
          "external_provider_id",
          "created_at",
          "updated_at",
          "annotations",
          "managed_by"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "SchedulesCreateOverridePayloadV2": {
        "example": {
          "end_at": "2021-08-17T14:00:00.000000Z",
          "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
          "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "schedule_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "start_at": "2021-08-17T13:00:00.000000Z",
          "user": {
            "email": "bob@example.com",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "slack_user_id": "USER123"
          }
        },
        "properties": {
          "end_at": {
            "description": "End time of the override",
            "example": "2021-08-17T14:00:00.000000Z",
            "format": "date-time",
            "type": "string"
          },
          "layer_id": {
            "description": "The layer this override applies to",
            "example": "01G0J1EXE7AXZ2C93K61WBPYNH",
            "type": "string"
          },
          "rotation_id": {
            "description": "The rotation this override applies to",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "schedule_id": {
            "description": "The schedule this override applies to",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "start_at": {
            "description": "Start time of the override",
            "example": "2021-08-17T13:00:00.000000Z",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserReferencePayloadV2"
          }
        },
        "required": [
          "start_at",
          "end_at",
          "schedule_id",
          "rotation_id",
          "layer_id",
          "user"
        ],
        "type": "object"
      },
      "SchedulesCreateOverrideResultV2": {
        "example": {
          "override": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "end_at": "2021-08-17T13:28:57.801578Z",
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "layer_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "schedule_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "start_at": "2021-08-17T13:28:57.801578Z",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          }
        },
        "properties": {
          "override": {
            "$ref": "#/components/schemas/ScheduleOverrideV2"
          }
        },
        "required": [
          "override"
        ],
        "type": "object"
      },
      "SchedulesCreatePayloadV2": {
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "My Rotation",
                  "users": [
                    {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "holidays_public_config": {
              "country_codes": [
                "abc123"
              ]
            },
            "name": "My Schedule",
            "timezone": "America/Los_Angeles"
          }
        },
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleCreatePayloadV2"
          }
        },
        "required": [
          "schedule"
        ],
        "type": "object"
      },
      "SchedulesCreateResultV2": {
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "Primary On-Call Schedule",
                  "users": [
                    {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ],
                  "working_intervals": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "created_at": "2021-08-17T13:28:57.801578Z",
            "current_shifts": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "holidays_public_config": {
              "country_codes": [
                "GB",
                "FR"
              ]
            },
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "name": "Primary On-Call Schedule",
            "timezone": "Europe/London",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleV2"
          }
        },
        "required": [
          "schedule"
        ],
        "type": "object"
      },
      "SchedulesListResultV2": {
        "example": {
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25,
            "total_record_count": 238
          },
          "schedules": [
            {
              "annotations": {
                "incident.io/terraform/version": "3.0.0"
              },
              "config": {
                "rotations": [
                  {
                    "effective_from": "2021-08-17T13:28:57.801578Z",
                    "handover_start_at": "2021-08-17T13:28:57.801578Z",
                    "handovers": [
                      {
                        "interval": 1,
                        "interval_type": "daily"
                      }
                    ],
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "layers": [
                      {
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "name": "Layer 1"
                      }
                    ],
                    "name": "Primary On-Call Schedule",
                    "users": [
                      {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    ],
                    "working_interval": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "tuesday"
                      }
                    ],
                    "working_intervals": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "tuesday"
                      }
                    ]
                  }
                ]
              },
              "created_at": "2021-08-17T13:28:57.801578Z",
              "current_shifts": [
                {
                  "end_at": "2021-08-17T13:28:57.801578Z",
                  "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                  "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "start_at": "2021-08-17T13:28:57.801578Z",
                  "user": {
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                }
              ],
              "holidays_public_config": {
                "country_codes": [
                  "GB",
                  "FR"
                ]
              },
              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "name": "Primary On-Call Schedule",
              "timezone": "Europe/London",
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultWithTotalV2"
          },
          "schedules": {
            "example": [
              {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "config": {
                  "rotations": [
                    {
                      "effective_from": "2021-08-17T13:28:57.801578Z",
                      "handover_start_at": "2021-08-17T13:28:57.801578Z",
                      "handovers": [
                        {
                          "interval": 1,
                          "interval_type": "daily"
                        }
                      ],
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "layers": [
                        {
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "name": "Layer 1"
                        }
                      ],
                      "name": "Primary On-Call Schedule",
                      "users": [
                        {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      ],
                      "working_interval": [
                        {
                          "end_time": "17:00",
                          "start_time": "09:00",
                          "weekday": "tuesday"
                        }
                      ],
                      "working_intervals": [
                        {
                          "end_time": "17:00",
                          "start_time": "09:00",
                          "weekday": "tuesday"
                        }
                      ]
                    }
                  ]
                },
                "created_at": "2021-08-17T13:28:57.801578Z",
                "current_shifts": [
                  {
                    "end_at": "2021-08-17T13:28:57.801578Z",
                    "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                    "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "start_at": "2021-08-17T13:28:57.801578Z",
                    "user": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  }
                ],
                "holidays_public_config": {
                  "country_codes": [
                    "GB",
                    "FR"
                  ]
                },
                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "name": "Primary On-Call Schedule",
                "timezone": "Europe/London",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ScheduleV2"
            },
            "type": "array"
          }
        },
        "required": [
          "schedules"
        ],
        "type": "object"
      },
      "SchedulesListScheduleEntriesResultV2": {
        "example": {
          "pagination_meta": {
            "after": "abc123",
            "after_url": "abc123"
          },
          "schedule_entries": {
            "final": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "overrides": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "scheduled": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ]
          }
        },
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/AfterPaginationMetaResultV2"
          },
          "schedule_entries": {
            "$ref": "#/components/schemas/ScheduleEntriesListPayloadV2"
          }
        },
        "required": [
          "schedule_entries"
        ],
        "type": "object"
      },
      "SchedulesShowResultV2": {
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "Primary On-Call Schedule",
                  "users": [
                    {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ],
                  "working_intervals": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "created_at": "2021-08-17T13:28:57.801578Z",
            "current_shifts": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "holidays_public_config": {
              "country_codes": [
                "GB",
                "FR"
              ]
            },
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "name": "Primary On-Call Schedule",
            "timezone": "Europe/London",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleV2"
          }
        },
        "required": [
          "schedule"
        ],
        "type": "object"
      },
      "SchedulesUpdatePayloadV2": {
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "version-of-terraform"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "My Rotation",
                  "users": [
                    {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "holidays_public_config": {
              "country_codes": [
                "abc123"
              ]
            },
            "name": "My Schedule",
            "timezone": "America/Los_Angeles"
          }
        },
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleUpdatePayloadV2"
          }
        },
        "required": [
          "schedule",
          "name",
          "timezone",
          "external_provider",
          "external_provider_id",
          "created_at",
          "updated_at",
          "annotations",
          "managed_by"
        ],
        "type": "object"
      },
      "SchedulesUpdateResultV2": {
        "example": {
          "schedule": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "config": {
              "rotations": [
                {
                  "effective_from": "2021-08-17T13:28:57.801578Z",
                  "handover_start_at": "2021-08-17T13:28:57.801578Z",
                  "handovers": [
                    {
                      "interval": 1,
                      "interval_type": "daily"
                    }
                  ],
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "layers": [
                    {
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Layer 1"
                    }
                  ],
                  "name": "Primary On-Call Schedule",
                  "users": [
                    {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  ],
                  "working_interval": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ],
                  "working_intervals": [
                    {
                      "end_time": "17:00",
                      "start_time": "09:00",
                      "weekday": "tuesday"
                    }
                  ]
                }
              ]
            },
            "created_at": "2021-08-17T13:28:57.801578Z",
            "current_shifts": [
              {
                "end_at": "2021-08-17T13:28:57.801578Z",
                "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:28:57.801578Z",
                "user": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                }
              }
            ],
            "holidays_public_config": {
              "country_codes": [
                "GB",
                "FR"
              ]
            },
            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "name": "Primary On-Call Schedule",
            "timezone": "Europe/London",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleV2"
          }
        },
        "required": [
          "schedule"
        ],
        "type": "object"
      },
      "SeveritiesCreatePayloadV1": {
        "example": {
          "description": "Issues with **low impact**.",
          "name": "Minor",
          "rank": 1
        },
        "properties": {
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "description",
          "id"
        ],
        "type": "object"
      },
      "SeveritiesCreateResultV1": {
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV1"
          }
        },
        "required": [
          "severity"
        ],
        "type": "object"
      },
      "SeveritiesListResultV1": {
        "example": {
          "severities": [
            {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            }
          ]
        },
        "properties": {
          "severities": {
            "example": [
              {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "Issues with **low impact**.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Minor",
                "rank": 1,
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SeverityV1"
            },
            "type": "array"
          }
        },
        "required": [
          "severities"
        ],
        "type": "object"
      },
      "SeveritiesShowResultV1": {
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV1"
          }
        },
        "required": [
          "severity"
        ],
        "type": "object"
      },
      "SeveritiesUpdatePayloadV1": {
        "example": {
          "description": "Issues with **low impact**.",
          "name": "Minor",
          "rank": 1
        },
        "properties": {
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "type": "object"
      },
      "SeveritiesUpdateResultV1": {
        "example": {
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SeverityV1"
          }
        },
        "required": [
          "severity"
        ],
        "type": "object"
      },
      "SeverityV1": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Issues with **low impact**.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Minor",
          "rank": 1,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "rank",
          "created_at",
          "updated_at",
          "id",
          "name",
          "description"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "SeverityV2": {
        "example": {
          "created_at": "2021-08-17T13:28:57.801578Z",
          "description": "Issues with **low impact**.",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Minor",
          "rank": 1,
          "updated_at": "2021-08-17T13:28:57.801578Z"
        },
        "properties": {
          "created_at": {
            "description": "When the action was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the severity",
            "example": "Issues with **low impact**.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the severity",
            "example": "Minor",
            "maxLength": 50,
            "type": "string"
          },
          "rank": {
            "description": "Rank to help sort severities (lower numbers are less severe)",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "updated_at": {
            "description": "When the action was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "rank",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "ShowResponseBody": {
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "required": false,
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV1"
          }
        },
        "required": [
          "incident_role"
        ],
        "type": "object"
      },
      "ShowResponseBody2": {
        "example": {
          "incident_role": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "The person currently coordinating the incident",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
            "name": "Incident Lead",
            "role_type": "lead",
            "shortform": "lead",
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_role": {
            "$ref": "#/components/schemas/IncidentRoleV2"
          }
        },
        "required": [
          "incident_role"
        ],
        "type": "object"
      },
      "ShowResponseBody3": {
        "example": {
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV1"
          }
        },
        "required": [
          "incident_status"
        ],
        "type": "object"
      },
      "ShowResponseBody4": {
        "example": {
          "incident_timestamp": {
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Impact started",
            "rank": 1
          }
        },
        "properties": {
          "incident_timestamp": {
            "$ref": "#/components/schemas/IncidentTimestampV2"
          }
        },
        "required": [
          "incident_timestamp"
        ],
        "type": "object"
      },
      "ShowResponseBody5": {
        "example": {
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          }
        },
        "properties": {
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV1"
          }
        },
        "required": [
          "incident_type"
        ],
        "type": "object"
      },
      "ShowResponseBody6": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "real",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "status": "triage",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "timestamps": [
              {
                "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                "name": "last_activity"
              }
            ],
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public"
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV1"
          }
        },
        "required": [
          "incident"
        ],
        "type": "object"
      },
      "ShowResponseBody7": {
        "example": {
          "incident": {
            "call_url": "https://zoom.us/foo",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "creator": {
              "api_key": {
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "My test API key"
              },
              "user": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            },
            "custom_field_entries": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "duration_metrics": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "external_issue_reference": {
              "issue_name": "INC-123",
              "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
              "provider": "asana"
            },
            "has_debrief": false,
            "id": "01FDAG4SAP5TYPT98WGR2N7W91",
            "incident_role_assignments": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_status": {
              "category": "triage",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
              "id": "01FCNDV6P870EA6S7TK1DSYD5H",
              "name": "Closed",
              "rank": 4,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "incident_timestamp_values": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "incident_type": {
              "create_in_triage": "always",
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Customer facing production outages",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "is_default": false,
              "name": "Production Outage",
              "private_incidents_only": false,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "mode": "standard",
            "name": "Our database is sad",
            "permalink": "https://app.incident.io/incidents/123",
            "postmortem_document_url": "https://docs.google.com/my_doc_id",
            "reference": "INC-123",
            "severity": {
              "created_at": "2021-08-17T13:28:57.801578Z",
              "description": "Issues with **low impact**.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Minor",
              "rank": 1,
              "updated_at": "2021-08-17T13:28:57.801578Z"
            },
            "slack_channel_id": "C02AW36C1M5",
            "slack_channel_name": "inc-165-green-parrot",
            "slack_team_id": "T02A1FSLE8J",
            "summary": "Our database is really really sad, and we don't know why yet.",
            "updated_at": "2021-08-17T13:28:57.801578Z",
            "visibility": "public",
            "workload_minutes_late": 40.7,
            "workload_minutes_sleeping": 0,
            "workload_minutes_total": 60.7,
            "workload_minutes_working": 20
          }
        },
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentV2"
          }
        },
        "required": [
          "incident"
        ],
        "type": "object"
      },
      "StepConfigPayloadV2": {
        "example": {
          "for_each": "abc123",
          "id": "abc123",
          "name": "pagerduty.escalate",
          "param_bindings": [
            {
              "array_value": [
                {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ]
        },
        "properties": {
          "for_each": {
            "description": "Reference to an expression that returns resources to run this step over",
            "example": "abc123",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of this step in a workflow",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "Unique name of the step in the engine",
            "example": "pagerduty.escalate",
            "type": "string"
          },
          "param_bindings": {
            "description": "List of parameter bindings",
            "example": [
              {
                "array_value": [
                  {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingPayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "param_bindings",
          "organisation_is_eligible",
          "release_channel",
          "label",
          "description",
          "params",
          "group_label"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "StepConfigSlimV2": {
        "example": {
          "label": "PagerDuty Escalate",
          "name": "pagerduty.escalate"
        },
        "properties": {
          "label": {
            "description": "Human readable identifier for this step",
            "example": "PagerDuty Escalate",
            "type": "string"
          },
          "name": {
            "description": "Unique name of the step in the engine",
            "example": "pagerduty.escalate",
            "type": "string"
          }
        },
        "required": [
          "name",
          "label",
          "group_label",
          "organisation_is_eligible",
          "release_channel",
          "description",
          "params"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "StepConfigV2": {
        "example": {
          "for_each": "abc123",
          "id": "abc123",
          "label": "PagerDuty Escalate",
          "name": "pagerduty.escalate",
          "param_bindings": [
            {
              "array_value": [
                {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              ],
              "value": {
                "label": "Lawrence Jones",
                "literal": "SEV123",
                "reference": "incident.severity"
              }
            }
          ]
        },
        "properties": {
          "for_each": {
            "description": "Reference to an expression that returns resources to run this step over",
            "example": "abc123",
            "type": "string"
          },
          "id": {
            "description": "Unique ID of this step in a workflow",
            "example": "abc123",
            "type": "string"
          },
          "label": {
            "description": "Human readable identifier for this step",
            "example": "PagerDuty Escalate",
            "type": "string"
          },
          "name": {
            "description": "Unique name of the step in the engine",
            "example": "pagerduty.escalate",
            "type": "string"
          },
          "param_bindings": {
            "description": "Bindings for the step parameters",
            "example": [
              {
                "array_value": [
                  {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                ],
                "value": {
                  "label": "Lawrence Jones",
                  "literal": "SEV123",
                  "reference": "incident.severity"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineParamBindingV2"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "label",
          "description",
          "params",
          "param_bindings",
          "organisation_is_eligible",
          "release_channel",
          "group_label"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "TriggerSlimV2": {
        "example": {
          "label": "Incident Updated",
          "name": "incident.updated"
        },
        "properties": {
          "label": {
            "description": "Human readable identifier for this trigger",
            "example": "Incident Updated",
            "type": "string"
          },
          "name": {
            "description": "Unique name of the trigger",
            "example": "incident.updated",
            "type": "string"
          }
        },
        "required": [
          "name",
          "icon",
          "label",
          "group_label",
          "when_description",
          "default_once_for",
          "default_condition_groups",
          "scope"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "UpdateRequestBody": {
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "required": false,
          "shortform": "lead"
        },
        "properties": {
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "required": {
            "description": "DEPRECATED: this will always be false.",
            "example": false,
            "type": "boolean"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "UpdateRequestBody2": {
        "example": {
          "description": "The person currently coordinating the incident",
          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
          "name": "Incident Lead",
          "shortform": "lead"
        },
        "properties": {
          "description": {
            "description": "Describes the purpose of the role",
            "example": "The person currently coordinating the incident",
            "minLength": 1,
            "type": "string"
          },
          "instructions": {
            "description": "Provided to whoever is nominated for the role. Note that this will be empty for the 'reporter' role.",
            "example": "Take point on the incident; Make sure people are clear on responsibilities",
            "type": "string"
          },
          "name": {
            "description": "Human readable name of the incident role",
            "example": "Incident Lead",
            "minLength": 1,
            "type": "string"
          },
          "shortform": {
            "description": "Short human readable name for Slack. Note that this will be empty for the 'reporter' role.",
            "example": "lead",
            "type": "string"
          }
        },
        "required": [
          "name",
          "shortform",
          "description",
          "instructions",
          "condition_groups",
          "role_type",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "UpdateRequestBody3": {
        "example": {
          "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
          "name": "Closed"
        },
        "properties": {
          "description": {
            "description": "Rich text description of the incident status",
            "example": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "type": "string"
          },
          "name": {
            "description": "Unique name of this status",
            "example": "Closed",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "rank",
          "category",
          "created_at",
          "updated_at"
        ],
        "type": "object"
      },
      "UserReferencePayloadV1": {
        "example": {
          "email": "bob@example.com",
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "slack_user_id": "USER123"
        },
        "properties": {
          "email": {
            "description": "The user's email address, matching the email on their Slack account",
            "example": "bob@example.com",
            "type": "string"
          },
          "id": {
            "description": "The incident.io ID of a user",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "slack_user_id": {
            "description": "The ID of the user's Slack account.",
            "example": "USER123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserReferencePayloadV2": {
        "example": {
          "email": "bob@example.com",
          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
          "slack_user_id": "USER123"
        },
        "properties": {
          "email": {
            "description": "The user's email address, matching the email on their Slack account",
            "example": "bob@example.com",
            "type": "string"
          },
          "id": {
            "description": "The incident.io ID of a user",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "type": "string"
          },
          "slack_user_id": {
            "description": "The ID of the user's Slack account.",
            "example": "USER123",
            "type": "string"
          }
        },
        "type": "object",
        "x-public-api-version": "v2"
      },
      "UserV1": {
        "example": {
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "properties": {
          "email": {
            "description": "Email address of the user.",
            "example": "lisa@incident.io",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis",
            "type": "string"
          },
          "role": {
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ],
            "example": "viewer",
            "type": "string"
          },
          "slack_user_id": {
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM",
            "type": "string"
          }
        },
        "required": [
          "role",
          "id",
          "slack_role",
          "name",
          "deprecated_base_role",
          "organisation_id"
        ],
        "type": "object",
        "x-public-api-version": "v1"
      },
      "UserV2": {
        "example": {
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "properties": {
          "email": {
            "description": "Email address of the user.",
            "example": "lisa@incident.io",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis",
            "type": "string"
          },
          "role": {
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ],
            "example": "viewer",
            "type": "string"
          },
          "slack_user_id": {
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM",
            "type": "string"
          }
        },
        "required": [
          "role",
          "id",
          "slack_role",
          "name",
          "deprecated_base_role",
          "organisation_id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "UserWithRolesV2": {
        "example": {
          "base_role": {
            "description": "Elevated permissions for the customer success team.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Customer Success",
            "slug": "customer-success"
          },
          "custom_roles": [
            {
              "description": "Elevated permissions for the customer success team.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Customer Success",
              "slug": "customer-success"
            }
          ],
          "email": "lisa@incident.io",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "name": "Lisa Karlin Curtis",
          "role": "viewer",
          "slack_user_id": "U02AYNF2XJM"
        },
        "properties": {
          "base_role": {
            "$ref": "#/components/schemas/RBACRoleV2"
          },
          "custom_roles": {
            "example": [
              {
                "description": "Elevated permissions for the customer success team.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Customer Success",
                "slug": "customer-success"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/RBACRoleV2"
            },
            "type": "array"
          },
          "email": {
            "description": "Email address of the user.",
            "example": "lisa@incident.io",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "example": "Lisa Karlin Curtis",
            "type": "string"
          },
          "role": {
            "description": "DEPRECATED: Role of the user as of March 9th 2023, this value is no longer updated.",
            "enum": [
              "viewer",
              "responder",
              "administrator",
              "owner",
              "unset"
            ],
            "example": "viewer",
            "type": "string"
          },
          "slack_user_id": {
            "description": "Slack ID of the user",
            "example": "U02AYNF2XJM",
            "type": "string"
          }
        },
        "required": [
          "base_role",
          "custom_roles",
          "role",
          "id",
          "slack_role",
          "name",
          "deprecated_base_role",
          "organisation_id"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "UsersListResultV2": {
        "example": {
          "pagination_meta": {
            "after": "01FCNDV6P870EA6S7TK1DSYDG0",
            "page_size": 25
          },
          "users": [
            {
              "base_role": {
                "description": "Elevated permissions for the customer success team.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Customer Success",
                "slug": "customer-success"
              },
              "custom_roles": [
                {
                  "description": "Elevated permissions for the customer success team.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Customer Success",
                  "slug": "customer-success"
                }
              ],
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          ]
        },
        "properties": {
          "pagination_meta": {
            "$ref": "#/components/schemas/PaginationMetaResultV2"
          },
          "users": {
            "example": [
              {
                "base_role": {
                  "description": "Elevated permissions for the customer success team.",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Customer Success",
                  "slug": "customer-success"
                },
                "custom_roles": [
                  {
                    "description": "Elevated permissions for the customer success team.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Customer Success",
                    "slug": "customer-success"
                  }
                ],
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/UserWithRolesV2"
            },
            "type": "array"
          }
        },
        "required": [
          "users",
          "pagination_meta"
        ],
        "type": "object"
      },
      "UsersShowResultV2": {
        "example": {
          "user": {
            "base_role": {
              "description": "Elevated permissions for the customer success team.",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Customer Success",
              "slug": "customer-success"
            },
            "custom_roles": [
              {
                "description": "Elevated permissions for the customer success team.",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Customer Success",
                "slug": "customer-success"
              }
            ],
            "email": "lisa@incident.io",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Lisa Karlin Curtis",
            "role": "viewer",
            "slack_user_id": "U02AYNF2XJM"
          }
        },
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserWithRolesV2"
          }
        },
        "required": [
          "user"
        ],
        "type": "object"
      },
      "UtilitiesIdentityResultV1": {
        "example": {
          "identity": {
            "dashboard_url": "https://app.incident.io/my-org",
            "name": "Alertmanager token",
            "roles": [
              "incident_creator"
            ]
          }
        },
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/IdentityV1"
          }
        },
        "required": [
          "identity"
        ],
        "type": "object"
      },
      "WebhookIncidentUserV2": {
        "example": {
          "actor_user_id": "abc123",
          "incident_id": "abc123",
          "user_id": "abc123"
        },
        "properties": {
          "actor_user_id": {
            "description": "The ID of the user who performed this action. If the action was not taken by a user, for example it was taken by a Workflow, this will be empty.",
            "example": "abc123",
            "type": "string"
          },
          "incident_id": {
            "description": "The ID of the incident",
            "example": "abc123",
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "incident_id",
          "user_id"
        ],
        "type": "object"
      },
      "WebhookIncidentV2": {
        "example": {
          "call_url": "https://zoom.us/foo",
          "created_at": "2021-08-17T13:28:57.801578Z",
          "creator": {
            "api_key": {
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "My test API key"
            },
            "user": {
              "email": "lisa@incident.io",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "name": "Lisa Karlin Curtis",
              "role": "viewer",
              "slack_user_id": "U02AYNF2XJM"
            }
          },
          "custom_field_entries": [
            {
              "custom_field": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Affected Team",
                "options": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                ]
              },
              "values": [
                {
                  "value_catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call"
                  },
                  "value_link": "https://google.com/",
                  "value_numeric": "123.456",
                  "value_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  },
                  "value_text": "This is my text field, I hope you like it"
                }
              ]
            }
          ],
          "duration_metrics": [
            {
              "duration_metric": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Lasted"
              },
              "value_seconds": 1
            }
          ],
          "external_issue_reference": {
            "issue_name": "INC-123",
            "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
            "provider": "asana"
          },
          "has_debrief": false,
          "id": "01FDAG4SAP5TYPT98WGR2N7W91",
          "incident_role_assignments": [
            {
              "assignee": {
                "email": "lisa@incident.io",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "name": "Lisa Karlin Curtis",
                "role": "viewer",
                "slack_user_id": "U02AYNF2XJM"
              },
              "role": {
                "created_at": "2021-08-17T13:28:57.801578Z",
                "description": "The person currently coordinating the incident",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "role_type": "lead",
                "shortform": "lead",
                "updated_at": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_status": {
            "category": "triage",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
            "name": "Closed",
            "rank": 4,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "incident_timestamp_values": [
            {
              "incident_timestamp": {
                "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "name": "Impact started",
                "rank": 1
              },
              "value": {
                "value": "2021-08-17T13:28:57.801578Z"
              }
            }
          ],
          "incident_type": {
            "create_in_triage": "always",
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Customer facing production outages",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "is_default": false,
            "name": "Production Outage",
            "private_incidents_only": false,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "mode": "standard",
          "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
          "name": "Our database is sad",
          "permalink": "https://app.incident.io/incidents/123",
          "postmortem_document_url": "https://docs.google.com/my_doc_id",
          "reference": "INC-123",
          "related_incidents": [
            "INC-237"
          ],
          "severity": {
            "created_at": "2021-08-17T13:28:57.801578Z",
            "description": "Issues with **low impact**.",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "name": "Minor",
            "rank": 1,
            "updated_at": "2021-08-17T13:28:57.801578Z"
          },
          "slack_channel_id": "C02AW36C1M5",
          "slack_channel_name": "inc-165-green-parrot",
          "slack_team_id": "T02A1FSLE8J",
          "summary": "Our database is really really sad, and we don't know why yet.",
          "updated_at": "2021-08-17T13:28:57.801578Z",
          "visibility": "public",
          "workload_minutes_late": 40.7,
          "workload_minutes_sleeping": 0,
          "workload_minutes_total": 60.7,
          "workload_minutes_working": 20
        },
        "properties": {
          "call_url": {
            "description": "The call URL attached to this incident",
            "example": "https://zoom.us/foo",
            "type": "string"
          },
          "created_at": {
            "description": "When the incident was created",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/ActorV2"
          },
          "custom_field_entries": {
            "description": "Custom field entries for this incident",
            "example": [
              {
                "custom_field": {
                  "description": "Which team is impacted by this issue",
                  "field_type": "single_select",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Affected Team",
                  "options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ]
                },
                "values": [
                  {
                    "value_catalog_entry": {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call"
                    },
                    "value_link": "https://google.com/",
                    "value_numeric": "123.456",
                    "value_option": {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    },
                    "value_text": "This is my text field, I hope you like it"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomFieldEntryV2"
            },
            "type": "array"
          },
          "duration_metrics": {
            "description": "Incident duration metrics and their measurements for this incident",
            "example": [
              {
                "duration_metric": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Lasted"
                },
                "value_seconds": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentDurationMetricWithValueV2"
            },
            "type": "array"
          },
          "external_issue_reference": {
            "$ref": "#/components/schemas/ExternalIssueReferenceV6"
          },
          "has_debrief": {
            "description": "If this incident has a debrief attached",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "type": "string"
          },
          "incident_role_assignments": {
            "description": "A list of who is assigned to each role for this incident",
            "example": [
              {
                "assignee": {
                  "email": "lisa@incident.io",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "name": "Lisa Karlin Curtis",
                  "role": "viewer",
                  "slack_user_id": "U02AYNF2XJM"
                },
                "role": {
                  "created_at": "2021-08-17T13:28:57.801578Z",
                  "description": "The person currently coordinating the incident",
                  "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                  "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                  "name": "Incident Lead",
                  "required": false,
                  "role_type": "lead",
                  "shortform": "lead",
                  "updated_at": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentRoleAssignmentV2"
            },
            "type": "array"
          },
          "incident_status": {
            "$ref": "#/components/schemas/IncidentStatusV2"
          },
          "incident_timestamp_values": {
            "description": "Incident lifecycle events and when they occurred",
            "example": [
              {
                "incident_timestamp": {
                  "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                  "name": "Impact started",
                  "rank": 1
                },
                "value": {
                  "value": "2021-08-17T13:28:57.801578Z"
                }
              }
            ],
            "items": {
              "$ref": "#/components/schemas/IncidentTimestampWithValueV2"
            },
            "type": "array"
          },
          "incident_type": {
            "$ref": "#/components/schemas/IncidentTypeV2"
          },
          "mode": {
            "description": "Whether the incident is real, a test, a tutorial, or importing as a retrospective incident",
            "enum": [
              "standard",
              "retrospective",
              "test",
              "tutorial"
            ],
            "example": "standard",
            "type": "string"
          },
          "most_recent_update_message": {
            "description": "Message that explains the context behind the update",
            "example": "We're working on a fix, hoping to ship in the next 30 minutes",
            "type": "string"
          },
          "name": {
            "description": "Explanation of the incident",
            "example": "Our database is sad",
            "type": "string"
          },
          "permalink": {
            "description": "A permanent link to the homepage for this incident",
            "example": "https://app.incident.io/incidents/123",
            "type": "string"
          },
          "postmortem_document_url": {
            "description": "Description of the incident",
            "example": "https://docs.google.com/my_doc_id",
            "type": "string"
          },
          "reference": {
            "description": "Reference to this incident, as displayed across the product",
            "example": "INC-123",
            "type": "string"
          },
          "related_incidents": {
            "description": "Incident IDs of incidents related to this incident",
            "example": [
              "INC-237"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityV2"
          },
          "slack_channel_id": {
            "description": "ID of the Slack channel in the organisation Slack workspace. Note that the channel is sometimes created asynchronously, so may not be present when the incident is just created.",
            "example": "C02AW36C1M5",
            "type": "string"
          },
          "slack_channel_name": {
            "description": "Name of the slack channel",
            "example": "inc-165-green-parrot",
            "type": "string"
          },
          "slack_team_id": {
            "description": "ID of the Slack team / workspace. This is only required if you are using a Slack Enterprise Grid with multiple teams.",
            "example": "T02A1FSLE8J",
            "type": "string"
          },
          "summary": {
            "description": "Detailed description of the incident",
            "example": "Our database is really really sad, and we don't know why yet.",
            "type": "string"
          },
          "updated_at": {
            "description": "When the incident was last updated",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "description": "Whether the incident should be open to anyone in your Slack workspace (public), or invite-only (private). For more information on Private Incidents see our [help centre](https://help.incident.io/articles/5905558102-can-we-mark-incidents-as-sensitive-and-restrict-access).",
            "enum": [
              "public",
              "private"
            ],
            "example": "public",
            "type": "string"
          },
          "workload_minutes_late": {
            "description": "Amount of time spent on the incident in late hours",
            "example": 40.7,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_sleeping": {
            "description": "Amount of time spent on the incident in sleeping hours",
            "example": 0,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_total": {
            "description": "Amount of time spent on the incident in total",
            "example": 60.7,
            "format": "double",
            "type": "number"
          },
          "workload_minutes_working": {
            "description": "Amount of time spent on the incident in working hours",
            "example": 20,
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "incident_status",
          "id",
          "external_id",
          "reference",
          "name",
          "idempotency_key",
          "did_opt_out_of_post_incident_flow",
          "visibility",
          "mode",
          "organisation_id",
          "creator",
          "last_activity_at",
          "incident_role_assignments",
          "custom_field_entries",
          "slack_team_id",
          "slack_channel_id",
          "postmortem_status",
          "created_at",
          "updated_at",
          "reported_at"
        ],
        "type": "object"
      },
      "WebhookPrivateResourceV2": {
        "example": {
          "id": "abc123"
        },
        "properties": {
          "id": {
            "description": "The ID of the resource",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "WeekdayIntervalConfigV2": {
        "example": {
          "id": "abc123",
          "name": "abc123",
          "timezone": "abc123",
          "weekday_intervals": [
            {
              "end_time": "17:00",
              "start_time": "09:00",
              "weekday": "monday"
            }
          ]
        },
        "properties": {
          "id": {
            "description": "The unique identifier for this set of working intervals",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "A human readable label for this set of working intervals",
            "example": "abc123",
            "type": "string"
          },
          "timezone": {
            "description": "How to interpret all the intervals",
            "example": "abc123",
            "type": "string"
          },
          "weekday_intervals": {
            "example": [
              {
                "end_time": "17:00",
                "start_time": "09:00",
                "weekday": "monday"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/WeekdayIntervalV2"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "timezone",
          "weekday_intervals"
        ],
        "type": "object"
      },
      "WeekdayIntervalV2": {
        "example": {
          "end_time": "17:00",
          "start_time": "09:00",
          "weekday": "monday"
        },
        "properties": {
          "end_time": {
            "description": "End time of the interval, in 24hr format",
            "example": "17:00",
            "type": "string"
          },
          "start_time": {
            "description": "Start time of the interval, in 24hr format",
            "example": "09:00",
            "type": "string"
          },
          "weekday": {
            "description": "Weekdays for use within a schedule or escalation path",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ],
            "example": "monday",
            "type": "string"
          }
        },
        "required": [
          "weekday",
          "start_time",
          "end_time"
        ],
        "type": "object"
      },
      "WorkflowDelayV2": {
        "example": {
          "conditions_apply_over_delay": false,
          "for_seconds": 60
        },
        "properties": {
          "conditions_apply_over_delay": {
            "description": "If this workflow is delayed, whether the conditions should be rechecked between trigger firing and execution",
            "example": false,
            "type": "boolean"
          },
          "for_seconds": {
            "description": "Delay in seconds between trigger firing and running the workflow",
            "example": 60,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "for_seconds",
          "conditions_apply_over_delay"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "WorkflowSlimV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "1235",
                    "reference_label": "Teams"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  },
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                }
              ],
              "reference": "abc123",
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              },
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "include_private_incidents": true,
          "name": "My little workflow",
          "once_for": [
            {
              "array": false,
              "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
              "label": "Incident -\u003e Affected Team",
              "type": "IncidentSeverity"
            }
          ],
          "runs_from": "2021-08-17T13:28:57.801578Z",
          "runs_on_incident_modes": [
            "standard",
            "test",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "shortform": "page-the-ceo",
          "state": "active",
          "steps": [
            {
              "label": "PagerDuty Escalate",
              "name": "pagerduty.escalate"
            }
          ],
          "trigger": {
            "label": "Incident Updated",
            "name": "incident.updated"
          },
          "version": 3
        },
        "properties": {
          "condition_groups": {
            "description": "Conditions that apply to the workflow trigger",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "type": "array"
          },
          "continue_on_step_error": {
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true,
            "type": "boolean"
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelayV2"
          },
          "expressions": {
            "description": "Expressions that make variables available in the scope",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionV2"
            },
            "type": "array"
          },
          "folder": {
            "description": "Folder to display the workflow in",
            "example": "My folder 01",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the workflow",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "include_private_incidents": {
            "description": "Whether to include private incidents",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name provided by the user when creating the workflow",
            "example": "My little workflow",
            "type": "string"
          },
          "once_for": {
            "description": "This workflow will run 'once for' a list of references",
            "example": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -\u003e Affected Team",
                "type": "IncidentSeverity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineReferenceV2"
            },
            "type": "array"
          },
          "runs_from": {
            "description": "The time from which this workflow will run on incidents",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "runs_on_incident_modes": {
            "description": "Which incident modes should this workflow run on? By default, workflows only run on standard incidents, but can also be configured to run on test and retrospective incidents.",
            "example": [
              "standard",
              "test",
              "retrospective"
            ],
            "items": {
              "description": "Incident mode that workflows can run on",
              "enum": [
                "standard",
                "test",
                "retrospective"
              ],
              "example": "standard",
              "type": "string",
              "x-public-api-version": "v2"
            },
            "type": "array"
          },
          "runs_on_incidents": {
            "description": "Which incidents should the workflow be applied to?",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ],
            "example": "newly_created",
            "type": "string"
          },
          "shortform": {
            "description": "The shortform used to trigger this workflow (only applicable for manual triggers)",
            "example": "page-the-ceo",
            "type": "string"
          },
          "state": {
            "description": "What state this workflow is in",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ],
            "example": "active",
            "type": "string"
          },
          "steps": {
            "description": "Steps that are executed as part of the workflow",
            "example": [
              {
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/StepConfigSlimV2"
            },
            "type": "array"
          },
          "trigger": {
            "$ref": "#/components/schemas/TriggerSlimV2"
          },
          "version": {
            "description": "Revision of the workflow, uniquely identifying it's version",
            "example": 3,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "name",
          "trigger",
          "once_for",
          "version",
          "expressions",
          "condition_groups",
          "steps",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents",
          "state"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "WorkflowV2": {
        "example": {
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": {
                    "label": "Lawrence Jones",
                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                  },
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": {
                    "label": "Incident Severity",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "1235",
                    "reference_label": "Teams"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  },
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  }
                }
              ],
              "reference": "abc123",
              "returns": {
                "array": true,
                "type": "IncidentStatus"
              },
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
          "include_private_incidents": true,
          "name": "My little workflow",
          "once_for": [
            {
              "array": false,
              "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
              "label": "Incident -\u003e Affected Team",
              "type": "IncidentSeverity"
            }
          ],
          "runs_from": "2021-08-17T13:28:57.801578Z",
          "runs_on_incident_modes": [
            "standard",
            "test",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "shortform": "page-the-ceo",
          "state": "active",
          "steps": [
            {
              "for_each": "abc123",
              "id": "abc123",
              "label": "PagerDuty Escalate",
              "name": "pagerduty.escalate",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "label": "Lawrence Jones",
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "trigger": {
            "label": "Incident Updated",
            "name": "incident.updated"
          },
          "version": 3
        },
        "properties": {
          "condition_groups": {
            "description": "Conditions that apply to the workflow trigger",
            "example": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupV2"
            },
            "type": "array"
          },
          "continue_on_step_error": {
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true,
            "type": "boolean"
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelayV2"
          },
          "expressions": {
            "description": "Expressions that make variables available in the scope",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionV2"
            },
            "type": "array"
          },
          "folder": {
            "description": "Folder to display the workflow in",
            "example": "My folder 01",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the workflow",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "type": "string"
          },
          "include_private_incidents": {
            "description": "Whether to include private incidents",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name provided by the user when creating the workflow",
            "example": "My little workflow",
            "type": "string"
          },
          "once_for": {
            "description": "This workflow will run 'once for' a list of references",
            "example": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -\u003e Affected Team",
                "type": "IncidentSeverity"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/EngineReferenceV2"
            },
            "type": "array"
          },
          "runs_from": {
            "description": "The time from which this workflow will run on incidents",
            "example": "2021-08-17T13:28:57.801578Z",
            "format": "date-time",
            "type": "string"
          },
          "runs_on_incident_modes": {
            "description": "Which incident modes should this workflow run on? By default, workflows only run on standard incidents, but can also be configured to run on test and retrospective incidents.",
            "example": [
              "standard",
              "test",
              "retrospective"
            ],
            "items": {
              "description": "Incident mode that workflows can run on",
              "enum": [
                "standard",
                "test",
                "retrospective"
              ],
              "example": "standard",
              "type": "string",
              "x-public-api-version": "v2"
            },
            "type": "array"
          },
          "runs_on_incidents": {
            "description": "Which incidents should the workflow be applied to?",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ],
            "example": "newly_created",
            "type": "string"
          },
          "shortform": {
            "description": "The shortform used to trigger this workflow (only applicable for manual triggers)",
            "example": "page-the-ceo",
            "type": "string"
          },
          "state": {
            "description": "What state this workflow is in",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ],
            "example": "active",
            "type": "string"
          },
          "steps": {
            "description": "Steps that are executed as part of the workflow",
            "example": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/StepConfigV2"
            },
            "type": "array"
          },
          "trigger": {
            "$ref": "#/components/schemas/TriggerSlimV2"
          },
          "version": {
            "description": "Revision of the workflow, uniquely identifying it's version",
            "example": 3,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "organisation_id",
          "name",
          "trigger",
          "once_for",
          "version",
          "expressions",
          "condition_groups",
          "steps",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents",
          "created_at",
          "updated_at",
          "state"
        ],
        "type": "object",
        "x-public-api-version": "v2"
      },
      "WorkflowsCreateWorkflowPayloadV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "include_private_incidents": true,
          "name": "My little workflow",
          "once_for": [
            "incident.url"
          ],
          "runs_on_incident_modes": [
            "standard",
            "test",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "shortform": "page-the-ceo",
          "state": "active",
          "steps": [
            {
              "for_each": "abc123",
              "id": "abc123",
              "name": "pagerduty.escalate",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ],
          "trigger": "incident.updated"
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "type": "object"
          },
          "condition_groups": {
            "description": "Conditions that apply to the workflow trigger",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "continue_on_step_error": {
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true,
            "type": "boolean"
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelayV2"
          },
          "expressions": {
            "description": "The expressions to use in the workflow",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "type": "array"
          },
          "folder": {
            "description": "Folder to display the workflow in",
            "example": "My folder 01",
            "type": "string"
          },
          "include_private_incidents": {
            "description": "Whether to include private incidents",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name provided by the user when creating the workflow",
            "example": "My little workflow",
            "type": "string"
          },
          "once_for": {
            "description": "This workflow will run 'once for' a list of references",
            "example": [
              "incident.url"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "runs_on_incident_modes": {
            "description": "Which incident modes should this workflow run on? By default, workflows only run on standard incidents, but can also be configured to run on test and retrospective incidents.",
            "example": [
              "standard",
              "test",
              "retrospective"
            ],
            "items": {
              "enum": [
                "standard",
                "test",
                "retrospective"
              ],
              "example": "test",
              "type": "string"
            },
            "type": "array"
          },
          "runs_on_incidents": {
            "description": "Which incidents should the workflow be applied to?",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ],
            "example": "newly_created",
            "type": "string"
          },
          "shortform": {
            "description": "The shortform used to trigger this workflow (only applicable for manual triggers)",
            "example": "page-the-ceo",
            "type": "string"
          },
          "state": {
            "description": "What state this workflow is in",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ],
            "example": "active",
            "type": "string"
          },
          "steps": {
            "description": "Steps that are executed as part of the workflow",
            "example": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/StepConfigPayloadV2"
            },
            "type": "array"
          },
          "trigger": {
            "description": "Trigger to set on the workflow",
            "example": "incident.updated",
            "type": "string"
          }
        },
        "required": [
          "name",
          "trigger",
          "once_for",
          "condition_groups",
          "steps",
          "expressions",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents"
        ],
        "type": "object"
      },
      "WorkflowsCreateWorkflowResultV2": {
        "example": {
          "management_meta": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "managed_by": "dashboard",
            "source_url": "https://github.com/my-company/infrastructure"
          },
          "workflow": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "continue_on_step_error": true,
            "delay": {
              "conditions_apply_over_delay": false,
              "for_seconds": 60
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "folder": "My folder 01",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "include_private_incidents": true,
            "name": "My little workflow",
            "once_for": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -\u003e Affected Team",
                "type": "IncidentSeverity"
              }
            ],
            "runs_from": "2021-08-17T13:28:57.801578Z",
            "runs_on_incident_modes": [
              "standard",
              "test",
              "retrospective"
            ],
            "runs_on_incidents": "newly_created",
            "shortform": "page-the-ceo",
            "state": "active",
            "steps": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "trigger": {
              "label": "Incident Updated",
              "name": "incident.updated"
            },
            "version": 3
          }
        },
        "properties": {
          "management_meta": {
            "$ref": "#/components/schemas/ManagementMetaV2"
          },
          "workflow": {
            "$ref": "#/components/schemas/WorkflowV2"
          }
        },
        "required": [
          "workflow",
          "management_meta"
        ],
        "type": "object"
      },
      "WorkflowsListWorkflowsResultV2": {
        "example": {
          "workflows": [
            {
              "condition_groups": [
                {
                  "conditions": [
                    {
                      "operation": {
                        "label": "Lawrence Jones",
                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                      },
                      "param_bindings": [
                        {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      ],
                      "subject": {
                        "label": "Incident Severity",
                        "reference": "incident.severity"
                      }
                    }
                  ]
                }
              ],
              "continue_on_step_error": true,
              "delay": {
                "conditions_apply_over_delay": false,
                "for_seconds": 60
              },
              "expressions": [
                {
                  "else_branch": {
                    "result": {
                      "array_value": [
                        {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "label": "Team Slack channel",
                  "operations": [
                    {
                      "branches": {
                        "branches": [
                          {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": {
                                      "label": "Lawrence Jones",
                                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                    },
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": {
                                      "label": "Incident Severity",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ]
                              }
                            ],
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          }
                        ],
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      },
                      "filter": {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": {
                                  "label": "Lawrence Jones",
                                  "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                },
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": {
                                  "label": "Incident Severity",
                                  "reference": "incident.severity"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "navigate": {
                        "reference": "1235",
                        "reference_label": "Teams"
                      },
                      "operation_type": "navigate",
                      "parse": {
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "source": "metadata.annotations[\"github.com/repo\"]"
                      },
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    }
                  ],
                  "reference": "abc123",
                  "returns": {
                    "array": true,
                    "type": "IncidentStatus"
                  },
                  "root_reference": "incident.status"
                }
              ],
              "folder": "My folder 01",
              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
              "include_private_incidents": true,
              "name": "My little workflow",
              "once_for": [
                {
                  "array": false,
                  "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                  "label": "Incident -\u003e Affected Team",
                  "type": "IncidentSeverity"
                }
              ],
              "runs_from": "2021-08-17T13:28:57.801578Z",
              "runs_on_incident_modes": [
                "standard",
                "test",
                "retrospective"
              ],
              "runs_on_incidents": "newly_created",
              "shortform": "page-the-ceo",
              "state": "active",
              "steps": [
                {
                  "label": "PagerDuty Escalate",
                  "name": "pagerduty.escalate"
                }
              ],
              "trigger": {
                "label": "Incident Updated",
                "name": "incident.updated"
              },
              "version": 3
            }
          ]
        },
        "properties": {
          "workflows": {
            "example": [
              {
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": {
                          "label": "Lawrence Jones",
                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                        },
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": {
                          "label": "Incident Severity",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "continue_on_step_error": true,
                "delay": {
                  "conditions_apply_over_delay": false,
                  "for_seconds": 60
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "1235",
                          "reference_label": "Teams"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        },
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "root_reference": "incident.status"
                  }
                ],
                "folder": "My folder 01",
                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "include_private_incidents": true,
                "name": "My little workflow",
                "once_for": [
                  {
                    "array": false,
                    "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                    "label": "Incident -\u003e Affected Team",
                    "type": "IncidentSeverity"
                  }
                ],
                "runs_from": "2021-08-17T13:28:57.801578Z",
                "runs_on_incident_modes": [
                  "standard",
                  "test",
                  "retrospective"
                ],
                "runs_on_incidents": "newly_created",
                "shortform": "page-the-ceo",
                "state": "active",
                "steps": [
                  {
                    "label": "PagerDuty Escalate",
                    "name": "pagerduty.escalate"
                  }
                ],
                "trigger": {
                  "label": "Incident Updated",
                  "name": "incident.updated"
                },
                "version": 3
              }
            ],
            "items": {
              "$ref": "#/components/schemas/WorkflowSlimV2"
            },
            "type": "array"
          }
        },
        "required": [
          "workflows"
        ],
        "type": "object"
      },
      "WorkflowsShowWorkflowResultV2": {
        "example": {
          "management_meta": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "managed_by": "dashboard",
            "source_url": "https://github.com/my-company/infrastructure"
          },
          "workflow": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "continue_on_step_error": true,
            "delay": {
              "conditions_apply_over_delay": false,
              "for_seconds": 60
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "folder": "My folder 01",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "include_private_incidents": true,
            "name": "My little workflow",
            "once_for": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -\u003e Affected Team",
                "type": "IncidentSeverity"
              }
            ],
            "runs_from": "2021-08-17T13:28:57.801578Z",
            "runs_on_incident_modes": [
              "standard",
              "test",
              "retrospective"
            ],
            "runs_on_incidents": "newly_created",
            "shortform": "page-the-ceo",
            "state": "active",
            "steps": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "trigger": {
              "label": "Incident Updated",
              "name": "incident.updated"
            },
            "version": 3
          }
        },
        "properties": {
          "management_meta": {
            "$ref": "#/components/schemas/ManagementMetaV2"
          },
          "workflow": {
            "$ref": "#/components/schemas/WorkflowV2"
          }
        },
        "required": [
          "workflow",
          "management_meta"
        ],
        "type": "object"
      },
      "WorkflowsUpdateWorkflowPayloadV2": {
        "example": {
          "annotations": {
            "incident.io/terraform/version": "3.0.0"
          },
          "condition_groups": [
            {
              "conditions": [
                {
                  "operation": "one_of",
                  "param_bindings": [
                    {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  ],
                  "subject": "incident.severity"
                }
              ]
            }
          ],
          "continue_on_step_error": true,
          "delay": {
            "conditions_apply_over_delay": false,
            "for_seconds": 60
          },
          "expressions": [
            {
              "else_branch": {
                "result": {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "label": "Team Slack channel",
              "operations": [
                {
                  "branches": {
                    "branches": [
                      {
                        "condition_groups": [
                          {
                            "conditions": [
                              {
                                "operation": "one_of",
                                "param_bindings": [
                                  {
                                    "array_value": [
                                      {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                ],
                                "subject": "incident.severity"
                              }
                            ]
                          }
                        ],
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  },
                  "filter": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  },
                  "navigate": {
                    "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                  },
                  "operation_type": "navigate",
                  "parse": {
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    },
                    "source": "metadata.annotations[\"github.com/repo\"]"
                  }
                }
              ],
              "reference": "abc123",
              "root_reference": "incident.status"
            }
          ],
          "folder": "My folder 01",
          "include_private_incidents": true,
          "name": "My little workflow",
          "once_for": [
            "incident.url"
          ],
          "runs_on_incident_modes": [
            "standard",
            "test",
            "retrospective"
          ],
          "runs_on_incidents": "newly_created",
          "shortform": "page-the-ceo",
          "state": "active",
          "steps": [
            {
              "for_each": "abc123",
              "id": "abc123",
              "name": "pagerduty.escalate",
              "param_bindings": [
                {
                  "array_value": [
                    {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  ],
                  "value": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              ]
            }
          ]
        },
        "properties": {
          "annotations": {
            "additionalProperties": {
              "example": "abc123",
              "type": "string"
            },
            "description": "Annotations that track metadata about this resource",
            "example": {
              "incident.io/terraform/version": "3.0.0"
            },
            "type": "object"
          },
          "condition_groups": {
            "description": "Conditions that apply to the workflow trigger",
            "example": [
              {
                "conditions": [
                  {
                    "operation": "one_of",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": "incident.severity"
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ConditionGroupPayloadV2"
            },
            "type": "array"
          },
          "continue_on_step_error": {
            "description": "Whether to continue executing the workflow if a step fails",
            "example": true,
            "type": "boolean"
          },
          "delay": {
            "$ref": "#/components/schemas/WorkflowDelayV2"
          },
          "expressions": {
            "description": "The expressions to use in the workflow",
            "example": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": "one_of",
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": "incident.severity"
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    }
                  }
                ],
                "reference": "abc123",
                "root_reference": "incident.status"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ExpressionPayloadV2"
            },
            "type": "array"
          },
          "folder": {
            "description": "Folder to display the workflow in",
            "example": "My folder 01",
            "type": "string"
          },
          "include_private_incidents": {
            "description": "Whether to include private incidents",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name provided by the user when creating the workflow",
            "example": "My little workflow",
            "type": "string"
          },
          "once_for": {
            "description": "This workflow will run 'once for' a list of references",
            "example": [
              "incident.url"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          },
          "runs_on_incident_modes": {
            "description": "Which incident modes should this workflow run on? By default, workflows only run on standard incidents, but can also be configured to run on test and retrospective incidents.",
            "example": [
              "standard",
              "test",
              "retrospective"
            ],
            "items": {
              "enum": [
                "standard",
                "test",
                "retrospective"
              ],
              "example": "test",
              "type": "string"
            },
            "type": "array"
          },
          "runs_on_incidents": {
            "description": "Which incidents should the workflow be applied to?",
            "enum": [
              "newly_created",
              "newly_created_and_active"
            ],
            "example": "newly_created",
            "type": "string"
          },
          "shortform": {
            "description": "The shortform used to trigger this workflow (only applicable for manual triggers)",
            "example": "page-the-ceo",
            "type": "string"
          },
          "state": {
            "description": "What state this workflow is in",
            "enum": [
              "active",
              "disabled",
              "draft",
              "error"
            ],
            "example": "active",
            "type": "string"
          },
          "steps": {
            "description": "Steps that are executed as part of the workflow",
            "example": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/StepConfigPayloadV2"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "once_for",
          "condition_groups",
          "steps",
          "expressions",
          "include_private_incidents",
          "runs_on_incident_modes",
          "continue_on_step_error",
          "runs_on_incidents"
        ],
        "type": "object"
      },
      "WorkflowsUpdateWorkflowResultV2": {
        "example": {
          "management_meta": {
            "annotations": {
              "incident.io/terraform/version": "3.0.0"
            },
            "managed_by": "dashboard",
            "source_url": "https://github.com/my-company/infrastructure"
          },
          "workflow": {
            "condition_groups": [
              {
                "conditions": [
                  {
                    "operation": {
                      "label": "Lawrence Jones",
                      "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                    },
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ],
                    "subject": {
                      "label": "Incident Severity",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "continue_on_step_error": true,
            "delay": {
              "conditions_apply_over_delay": false,
              "for_seconds": 60
            },
            "expressions": [
              {
                "else_branch": {
                  "result": {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "label": "Team Slack channel",
                "operations": [
                  {
                    "branches": {
                      "branches": [
                        {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": {
                                    "label": "Lawrence Jones",
                                    "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                  },
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": {
                                    "label": "Incident Severity",
                                    "reference": "incident.severity"
                                  }
                                }
                              ]
                            }
                          ],
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      }
                    },
                    "filter": {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "navigate": {
                      "reference": "1235",
                      "reference_label": "Teams"
                    },
                    "operation_type": "navigate",
                    "parse": {
                      "returns": {
                        "array": true,
                        "type": "IncidentStatus"
                      },
                      "source": "metadata.annotations[\"github.com/repo\"]"
                    },
                    "returns": {
                      "array": true,
                      "type": "IncidentStatus"
                    }
                  }
                ],
                "reference": "abc123",
                "returns": {
                  "array": true,
                  "type": "IncidentStatus"
                },
                "root_reference": "incident.status"
              }
            ],
            "folder": "My folder 01",
            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
            "include_private_incidents": true,
            "name": "My little workflow",
            "once_for": [
              {
                "array": false,
                "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                "label": "Incident -\u003e Affected Team",
                "type": "IncidentSeverity"
              }
            ],
            "runs_from": "2021-08-17T13:28:57.801578Z",
            "runs_on_incident_modes": [
              "standard",
              "test",
              "retrospective"
            ],
            "runs_on_incidents": "newly_created",
            "shortform": "page-the-ceo",
            "state": "active",
            "steps": [
              {
                "for_each": "abc123",
                "id": "abc123",
                "label": "PagerDuty Escalate",
                "name": "pagerduty.escalate",
                "param_bindings": [
                  {
                    "array_value": [
                      {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "label": "Lawrence Jones",
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                ]
              }
            ],
            "trigger": {
              "label": "Incident Updated",
              "name": "incident.updated"
            },
            "version": 3
          }
        },
        "properties": {
          "management_meta": {
            "$ref": "#/components/schemas/ManagementMetaV2"
          },
          "workflow": {
            "$ref": "#/components/schemas/WorkflowV2"
          }
        },
        "required": [
          "workflow",
          "management_meta"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "description": "API that powers the incident.io dashboard, webhook receiver and general backend\nservices.\n",
    "title": "incident.io",
    "version": "1.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/actions": {
      "get": {
        "deprecated": true,
        "description": "List all actions for an organisation.",
        "operationId": "Actions V1#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Find actions related to this incident",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "description": "Find actions related to this incident",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter to actions marked as being follow up actions",
            "example": true,
            "in": "query",
            "name": "is_follow_up",
            "schema": {
              "description": "Filter to actions marked as being follow up actions",
              "example": true,
              "type": "boolean"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter to actions from incidents of the given mode. If not set, only actions from `real` incidents are returned",
            "examples": {
              "default": {
                "summary": "default",
                "value": "real"
              }
            },
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "description": "Filter to actions from incidents of the given mode. If not set, only actions from `real` incidents are returned",
              "enum": [
                "real",
                "test",
                "tutorial"
              ],
              "example": "real",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": [
                    {
                      "assignee": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      },
                      "completed_at": "2021-08-17T13:28:57.801578Z",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Call the fire brigade",
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "follow_up": true,
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "status": "outstanding",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ActionsListResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Actions V1",
        "tags": [
          "Actions V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/actions/{id}": {
      "get": {
        "deprecated": true,
        "description": "Get a single incident action.",
        "operationId": "Actions V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the action",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ActionsShowResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Actions V1",
        "tags": [
          "Actions V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/custom_field_options": {
      "get": {
        "description": "Show custom field options for a custom field",
        "operationId": "Custom Field Options V1#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "number of records to return",
              "example": 25,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "A custom field option's ID. This endpoint will return a list of custom field options created after this option.",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "A custom field option's ID. This endpoint will return a list of custom field options created after this option.",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "The custom field to list options for.",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "in": "query",
            "name": "custom_field_id",
            "required": true,
            "schema": {
              "description": "The custom field to list options for.",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field_options": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "sort_key": 10,
                      "value": "Product"
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsListResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-public-api-version": "v1"
      },
      "post": {
        "description": "Create a custom field option. If the sort key is not supplied, it'll default to 1000, so the option appears near the end of the list.",
        "operationId": "Custom Field Options V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "sort_key": 10,
                "value": "Product"
              },
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsCreatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsCreateResultV1"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/custom_field_options/{id}": {
      "delete": {
        "description": "Delete a custom field option",
        "operationId": "Custom Field Options V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field option",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-public-api-version": "v1"
      },
      "get": {
        "description": "Get a single custom field option",
        "operationId": "Custom Field Options V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field option",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsShowResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-public-api-version": "v1"
      },
      "put": {
        "description": "Update a custom field option",
        "operationId": "Custom Field Options V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the custom field option",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field option",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "sort_key": 10,
                "value": "Product"
              },
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOptionsUpdatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field_option": {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "sort_key": 10,
                    "value": "Product"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldOptionsUpdateResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Custom Field Options V1",
        "tags": [
          "Custom Field Options V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/custom_fields": {
      "get": {
        "deprecated": true,
        "description": "List all custom fields for an organisation.",
        "operationId": "Custom Fields V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_fields": [
                    {
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "options": [
                        {
                          "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "sort_key": 10,
                          "value": "Product"
                        }
                      ],
                      "required": "never",
                      "required_v2": "never",
                      "show_before_closure": true,
                      "show_before_creation": true,
                      "show_before_update": true,
                      "show_in_announcement_post": true,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsListResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-public-api-version": "v1"
      },
      "post": {
        "deprecated": true,
        "description": "Create a new custom field",
        "operationId": "Custom Fields V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "name": "Affected Team",
                "required": "never",
                "required_v2": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true
              },
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsCreatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ],
                    "required": "never",
                    "required_v2": "never",
                    "show_before_closure": true,
                    "show_before_creation": true,
                    "show_before_update": true,
                    "show_in_announcement_post": true,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsCreateResultV1"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/custom_fields/{id}": {
      "delete": {
        "deprecated": true,
        "description": "Delete a custom field",
        "operationId": "Custom Fields V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-public-api-version": "v1"
      },
      "get": {
        "deprecated": true,
        "description": "Get a single custom field.",
        "operationId": "Custom Fields V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ],
                    "required": "never",
                    "required_v2": "never",
                    "show_before_closure": true,
                    "show_before_creation": true,
                    "show_before_update": true,
                    "show_in_announcement_post": true,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsShowResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-public-api-version": "v1"
      },
      "put": {
        "deprecated": true,
        "description": "Update the details of a custom field",
        "operationId": "Custom Fields V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Which team is impacted by this issue",
                "name": "Affected Team",
                "required": "never",
                "required_v2": "never",
                "show_before_closure": true,
                "show_before_creation": true,
                "show_before_update": true,
                "show_in_announcement_post": true
              },
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsUpdatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "options": [
                      {
                        "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "sort_key": 10,
                        "value": "Product"
                      }
                    ],
                    "required": "never",
                    "required_v2": "never",
                    "show_before_closure": true,
                    "show_before_creation": true,
                    "show_before_update": true,
                    "show_in_announcement_post": true,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsUpdateResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Custom Fields V1",
        "tags": [
          "Custom Fields V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/identity": {
      "get": {
        "description": "Test if your API key is valid, and which roles it has.",
        "operationId": "Utilities V1#Identity",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "identity": {
                    "dashboard_url": "https://app.incident.io/my-org",
                    "name": "Alertmanager token",
                    "roles": [
                      "incident_creator"
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/UtilitiesIdentityResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Identity Utilities V1",
        "tags": [
          "Utilities V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/incident_attachments": {
      "get": {
        "description": "List all incident attachments for a given external resource or incident. You must provide either a specific incident ID or a specific external resource type and external ID.",
        "operationId": "Incident Attachments V1#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Incident that this attachment is against",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "description": "Incident that this attachment is against",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "ID of the resource in the external system",
            "example": "123",
            "in": "query",
            "name": "external_id",
            "schema": {
              "description": "ID of the resource in the external system",
              "example": "123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "E.g. PagerDuty: the external system that holds the resource",
            "examples": {
              "default": {
                "summary": "default",
                "value": "pager_duty_incident"
              }
            },
            "in": "query",
            "name": "resource_type",
            "schema": {
              "description": "E.g. PagerDuty: the external system that holds the resource",
              "enum": [
                "pager_duty_incident",
                "opsgenie_alert",
                "datadog_monitor_alert",
                "github_pull_request",
                "gitlab_merge_request",
                "sentry_issue",
                "jira_issue",
                "atlassian_statuspage_incident",
                "zendesk_ticket",
                "google_calendar_event",
                "outlook_calendar_event",
                "slack_file",
                "scrubbed",
                "statuspage_incident"
              ],
              "example": "pager_duty_incident",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_attachments": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "resource": {
                        "external_id": "123",
                        "permalink": "https://my.pagerduty.com/incidents/ABC",
                        "resource_type": "pager_duty_incident",
                        "title": "The database has gone down"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Attachments V1",
        "tags": [
          "Incident Attachments V1"
        ]
      },
      "post": {
        "description": "Attaches an external resource to an incident",
        "operationId": "Incident Attachments V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "incident_id": "01FDAG4SAP5TYPT98WGR2N7W91",
                "resource": {
                  "external_id": "123",
                  "resource_type": "pager_duty_incident"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "incident_attachment": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "resource": {
                      "external_id": "123",
                      "permalink": "https://my.pagerduty.com/incidents/ABC",
                      "resource_type": "pager_duty_incident",
                      "title": "The database has gone down"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Attachments V1",
        "tags": [
          "Incident Attachments V1"
        ]
      }
    },
    "/v1/incident_attachments/{id}": {
      "delete": {
        "description": "Unattaches an external resource from an incident",
        "operationId": "Incident Attachments V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier of this incident membership",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier of this incident membership",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Incident Attachments V1",
        "tags": [
          "Incident Attachments V1"
        ]
      }
    },
    "/v1/incident_memberships": {
      "post": {
        "description": "Makes a user a member of a private incident",
        "operationId": "Incident Memberships V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "incident_id": "01ET65M7ZADYFCKD4K1AE2QNMC",
                "user_id": "01FCQSP07Z74QMMYPDDGQB9FTG"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "incident_membership": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "user": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreateResponseBody2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Memberships V1",
        "tags": [
          "Incident Memberships V1"
        ]
      }
    },
    "/v1/incident_memberships/actions/revoke": {
      "post": {
        "description": "Revoke a user's membership of a private incident",
        "operationId": "Incident Memberships V1#Revoke",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "incident_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                "user_id": "01FCQSP07Z74QMMYPDDGQB9FTG"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Revoke Incident Memberships V1",
        "tags": [
          "Incident Memberships V1"
        ]
      }
    },
    "/v1/incident_roles": {
      "get": {
        "deprecated": true,
        "description": "List all incident roles for an organisation.",
        "operationId": "Incident Roles V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_roles": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "required": false,
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Create a new incident role",
        "operationId": "Incident Roles V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "shortform": "lead"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      }
    },
    "/v1/incident_roles/{id}": {
      "delete": {
        "deprecated": true,
        "description": "Removes an existing role",
        "operationId": "Incident Roles V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      },
      "get": {
        "deprecated": true,
        "description": "Get a single incident role.",
        "operationId": "Incident Roles V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      },
      "put": {
        "deprecated": true,
        "description": "Update an existing incident role",
        "operationId": "Incident Roles V1#Update",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "required": false,
                "shortform": "lead"
              },
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "required": false,
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Incident Roles V1",
        "tags": [
          "Incident Roles V1"
        ]
      }
    },
    "/v1/incident_statuses": {
      "get": {
        "description": "List all incident statuses for an organisation.",
        "operationId": "Incident Statuses V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_statuses": [
                    {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody4"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      },
      "post": {
        "description": "Create a new incident status",
        "operationId": "Incident Statuses V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "category": "live",
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "name": "Closed"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "incident_status": {
                    "category": "triage",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Closed",
                    "rank": 4,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody3"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      }
    },
    "/v1/incident_statuses/{id}": {
      "delete": {
        "description": "Delete an incident status",
        "operationId": "Incident Statuses V1#Delete",
        "parameters": [
          {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique ID of this incident status",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          }
        },
        "summary": "Delete Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      },
      "get": {
        "description": "Get a single incident status.",
        "operationId": "Incident Statuses V1#Show",
        "parameters": [
          {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique ID of this incident status",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_status": {
                    "category": "triage",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Closed",
                    "rank": 4,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      },
      "put": {
        "description": "Update an existing incident status",
        "operationId": "Incident Statuses V1#Update",
        "parameters": [
          {
            "description": "Unique ID of this incident status",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique ID of this incident status",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                "name": "Closed"
              },
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_status": {
                    "category": "triage",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Closed",
                    "rank": 4,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Incident Statuses V1",
        "tags": [
          "Incident Statuses V1"
        ]
      }
    },
    "/v1/incident_types": {
      "get": {
        "description": "List all incident types for an organisation.",
        "operationId": "Incident Types V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_types": [
                    {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody6"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Types V1",
        "tags": [
          "Incident Types V1"
        ]
      }
    },
    "/v1/incident_types/{id}": {
      "get": {
        "description": "Get a single incident type.",
        "operationId": "Incident Types V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for this Incident Type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this Incident Type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_type": {
                    "create_in_triage": "always",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Customer facing production outages",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_default": false,
                    "name": "Production Outage",
                    "private_incidents_only": false,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody5"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Types V1",
        "tags": [
          "Incident Types V1"
        ]
      }
    },
    "/v1/incidents": {
      "get": {
        "deprecated": true,
        "description": "List all incidents for an organisation.",
        "operationId": "Incidents V1#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Integer number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "Integer number of records to return",
              "example": 25,
              "format": "int64",
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter for incidents in these statuses",
            "examples": {
              "default": {
                "summary": "default",
                "value": [
                  "declined"
                ]
              }
            },
            "in": "query",
            "name": "status",
            "schema": {
              "description": "Filter for incidents in these statuses",
              "example": [
                "declined"
              ],
              "items": {
                "example": "declined",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incidents": [
                    {
                      "call_url": "https://zoom.us/foo",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "creator": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      },
                      "custom_field_entries": [
                        {
                          "custom_field": {
                            "description": "Which team is impacted by this issue",
                            "field_type": "single_select",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Affected Team",
                            "options": [
                              {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              }
                            ]
                          },
                          "values": [
                            {
                              "value_catalog_entry": {
                                "aliases": [
                                  "lawrence@incident.io",
                                  "lawrence"
                                ],
                                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Primary On-call"
                              },
                              "value_link": "https://google.com/",
                              "value_numeric": "123.456",
                              "value_option": {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              },
                              "value_text": "This is my text field, I hope you like it"
                            }
                          ]
                        }
                      ],
                      "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                      "incident_role_assignments": [
                        {
                          "assignee": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          },
                          "role": {
                            "created_at": "2021-08-17T13:28:57.801578Z",
                            "description": "The person currently coordinating the incident",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                            "name": "Incident Lead",
                            "required": false,
                            "role_type": "lead",
                            "shortform": "lead",
                            "updated_at": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_type": {
                        "create_in_triage": "always",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Customer facing production outages",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "is_default": false,
                        "name": "Production Outage",
                        "private_incidents_only": false,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "mode": "real",
                      "name": "Our database is sad",
                      "permalink": "https://app.incident.io/incidents/123",
                      "postmortem_document_url": "https://docs.google.com/my_doc_id",
                      "reference": "INC-123",
                      "severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "slack_channel_id": "C02AW36C1M5",
                      "slack_channel_name": "inc-165-green-parrot",
                      "slack_team_id": "T02A1FSLE8J",
                      "status": "triage",
                      "summary": "Our database is really really sad, and we don't know why yet.",
                      "timestamps": [
                        {
                          "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                          "name": "last_activity"
                        }
                      ],
                      "updated_at": "2021-08-17T13:28:57.801578Z",
                      "visibility": "public"
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25,
                    "total_record_count": 238
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody8"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incidents V1",
        "tags": [
          "Incidents V1"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "Create a new incident.",
        "operationId": "Incidents V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "custom_field_entries": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "values": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_text": "This is my text field, I hope you like it",
                        "value_timestamp": ""
                      }
                    ]
                  }
                ],
                "idempotency_key": "alert-uuid",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    },
                    "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
                  }
                ],
                "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "mode": "real",
                "name": "Our database is sad",
                "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "slack_team_id": "T02A1FSLE8J",
                "source_message_channel_id": "C02AW36C1M5",
                "source_message_timestamp": "1653650280.526509",
                "status": "triage",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "visibility": "public"
              },
              "schema": {
                "$ref": "#/components/schemas/IncidentCreatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "real",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "status": "triage",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "timestamps": [
                      {
                        "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                        "name": "last_activity"
                      }
                    ],
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody6"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Create Incidents V1",
        "tags": [
          "Incidents V1"
        ]
      }
    },
    "/v1/incidents/{id}": {
      "get": {
        "deprecated": true,
        "description": "Get a single incident.",
        "operationId": "Incidents V1#Show",
        "parameters": [
          {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the incident",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "real",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "status": "triage",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "timestamps": [
                      {
                        "last_occurred_at": "2021-08-17T13:28:57.801578Z",
                        "name": "last_activity"
                      }
                    ],
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody6"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incidents V1",
        "tags": [
          "Incidents V1"
        ]
      }
    },
    "/v1/openapi.json": {
      "get": {
        "deprecated": true,
        "description": "Get the OpenAPI (v2) definition.\n\n**DEPRECATED**: Please use the OpenAPIV3 endpoint instead. The schema returned from this endpoint does not contain new options and endpoints added in 2025 and later.",
        "operationId": "Utilities V1#OpenAPI",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "OpenAPI Utilities V1",
        "tags": [
          "Utilities V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/openapiV3.json": {
      "get": {
        "description": "Get the OpenAPI (v3) definition.",
        "operationId": "Utilities V1#OpenAPIV3",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "OpenAPIV3 Utilities V1",
        "tags": [
          "Utilities V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/severities": {
      "get": {
        "description": "List all incident severities for an organisation.",
        "operationId": "Severities V1#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "severities": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesListResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-public-api-version": "v1"
      },
      "post": {
        "description": "Create a new severity",
        "operationId": "Severities V1#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Issues with **low impact**.",
                "name": "Minor",
                "rank": 1
              },
              "schema": {
                "$ref": "#/components/schemas/SeveritiesCreatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "severity": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Issues with **low impact**.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Minor",
                    "rank": 1,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesCreateResultV1"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v1/severities/{id}": {
      "delete": {
        "description": "Delete a severity",
        "operationId": "Severities V1#Delete",
        "parameters": [
          {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier of the severity",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          }
        },
        "summary": "Delete Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-public-api-version": "v1"
      },
      "get": {
        "description": "Get a single incident severity.",
        "operationId": "Severities V1#Show",
        "parameters": [
          {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier of the severity",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "severity": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Issues with **low impact**.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Minor",
                    "rank": 1,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesShowResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-public-api-version": "v1"
      },
      "put": {
        "description": "Update an existing severity",
        "operationId": "Severities V1#Update",
        "parameters": [
          {
            "description": "Unique identifier of the severity",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier of the severity",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Issues with **low impact**.",
                "name": "Minor",
                "rank": 1
              },
              "schema": {
                "$ref": "#/components/schemas/SeveritiesUpdatePayloadV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "severity": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Issues with **low impact**.",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Minor",
                    "rank": 1,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SeveritiesUpdateResultV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Severities V1",
        "tags": [
          "Severities V1"
        ],
        "x-public-api-version": "v1"
      }
    },
    "/v2/actions": {
      "get": {
        "description": "List all actions for an organisation.",
        "operationId": "Actions V2#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Find actions related to this incident",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "description": "Find actions related to this incident",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter to actions from incidents of the given mode. If not set, only actions from `standard` and `retrospective` incidents are returned",
            "examples": {
              "default": {
                "summary": "default",
                "value": "standard"
              }
            },
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "description": "Filter to actions from incidents of the given mode. If not set, only actions from `standard` and `retrospective` incidents are returned",
              "enum": [
                "standard",
                "retrospective",
                "test",
                "tutorial",
                "stream"
              ],
              "example": "standard",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": [
                    {
                      "assignee": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      },
                      "completed_at": "2021-08-17T13:28:57.801578Z",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Call the fire brigade",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "status": "outstanding",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ActionsListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Actions V2",
        "tags": [
          "Actions V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/actions/{id}": {
      "get": {
        "description": "Get a single incident action.",
        "operationId": "Actions V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the action",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the action",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ActionsShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Actions V2",
        "tags": [
          "Actions V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/alert_attributes": {
      "get": {
        "description": "List alert attributes.",
        "operationId": "Alert Attributes V2#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_attributes": [
                    {
                      "array": false,
                      "id": "01GW2G3V0S59R238FAHPDS1R66",
                      "name": "service",
                      "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertAttributesListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Alert Attributes V2",
        "tags": [
          "Alert Attributes V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create a new alert attribute.",
        "operationId": "Alert Attributes V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "array": false,
                "name": "service",
                "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
              },
              "schema": {
                "$ref": "#/components/schemas/AlertAttributesCreatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "alert_attribute": {
                    "array": false,
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "name": "service",
                    "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertAttributesCreateResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Alert Attributes V2",
        "tags": [
          "Alert Attributes V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/alert_attributes/{id}": {
      "delete": {
        "description": "Destroy an alert attribute.",
        "operationId": "Alert Attributes V2#Destroy",
        "parameters": [
          {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The ID of this attribute",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Destroy Alert Attributes V2",
        "tags": [
          "Alert Attributes V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Show an alert attribute.",
        "operationId": "Alert Attributes V2#Show",
        "parameters": [
          {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The ID of this attribute",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_attribute": {
                    "array": false,
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "name": "service",
                    "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertAttributesShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Alert Attributes V2",
        "tags": [
          "Alert Attributes V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Update an alert attribute.",
        "operationId": "Alert Attributes V2#Update",
        "parameters": [
          {
            "description": "The ID of this attribute",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The ID of this attribute",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "array": false,
                "name": "service",
                "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
              },
              "schema": {
                "$ref": "#/components/schemas/AlertAttributesUpdatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_attribute": {
                    "array": false,
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "name": "service",
                    "type": "CatalogEntry[\"01GW2G3V0S59R238FAHPDS1R67\"]"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertAttributesUpdateResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Alert Attributes V2",
        "tags": [
          "Alert Attributes V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/alert_events/http/{alert_source_config_id}": {
      "post": {
        "description": "Create an alert event using an HTTP source.",
        "operationId": "Alert Events V2#CreateHTTP",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Token used to authenticate the request, generated when configuring the alert source. Will be consumed via a URL query string parameter",
            "example": "some-random-string",
            "in": "query",
            "name": "token",
            "schema": {
              "description": "Token used to authenticate the request, generated when configuring the alert source. Will be consumed via a URL query string parameter",
              "example": "some-random-string",
              "type": "string"
            }
          },
          {
            "description": "Which alert source config produced this alert",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "alert_source_config_id",
            "required": true,
            "schema": {
              "description": "Which alert source config produced this alert",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "deduplication_key": "4293868629",
                "description": "We've detected a number of timeouts on hello.world.com, the service may be down. To fix...",
                "metadata": {
                  "service": "hello.world.com",
                  "team": [
                    "my-team"
                  ]
                },
                "source_url": "https://www.my-alerting-platform.com/alerts/my-alert-123",
                "status": "firing",
                "title": "*errors.withMessage: PG::Error failed to connect"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateHTTPRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "example": {
                  "deduplication_key": "unique-key",
                  "message": "Event accepted for processing",
                  "status": "success"
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertResult"
                }
              }
            },
            "description": "Accepted response."
          }
        },
        "summary": "CreateHTTP Alert Events V2",
        "tags": [
          "Alert Events V2"
        ]
      }
    },
    "/v2/alert_routes": {
      "post": {
        "description": "Create an alert route.\n\nWe recommend you create alert routes in the incident.io dashboard where we allow\npreviewing filter and grouping rules.\n",
        "operationId": "Alert Routes V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "alert_sources": [
                  {
                    "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "auto_decline_enabled": false,
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "defer_time_seconds": 1,
                "enabled": false,
                "escalation_bindings": [
                  {
                    "binding": {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": "one_of",
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": "incident.severity"
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "root_reference": "incident.status"
                  }
                ],
                "grouping_keys": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  }
                ],
                "grouping_window_seconds": 1,
                "incident_condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "incident_enabled": false,
                "name": "Production incidents",
                "template": {
                  "custom_field_priorities": {
                    "abc123": "abc123"
                  },
                  "custom_fields": {
                    "custom_field_10014": {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "incident_mode": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "incident_type": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "name": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "priority_severity": "severity-first-wins",
                  "severity": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "start_in_triage": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "summary": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "workspace": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/AlertRoutesCreatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "alert_route": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "defer_time_seconds": 1,
                    "escalation_bindings": [
                      {
                        "binding": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "grouping_keys": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      }
                    ],
                    "grouping_window_seconds": 1,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Production incidents",
                    "template": {
                      "custom_field_priorities": {
                        "abc123": "first-wins"
                      },
                      "custom_fields": {
                        "custom_field_10014": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      },
                      "incident_mode": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "incident_type": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "name": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "priority_severity": "severity-first-wins",
                      "severity": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "summary": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "workspace": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertRoutesCreateResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Alert Routes V2",
        "tags": [
          "Alert Routes V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/alert_routes/{id}": {
      "delete": {
        "description": "Archives an alert route.\n\nWe recommend you create alert routes in the incident.io dashboard where we allow\npreviewing filter and grouping rules.\n",
        "operationId": "Alert Routes V2#Destroy",
        "parameters": [
          {
            "description": "Unique identifier for this alert route config",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this alert route config",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Destroy Alert Routes V2",
        "tags": [
          "Alert Routes V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Show an alert route.\n\nWe recommend you create alert routes in the incident.io dashboard where we allow\npreviewing filter and grouping rules.\n",
        "operationId": "Alert Routes V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for this alert route config",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this alert route config",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_route": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "defer_time_seconds": 1,
                    "escalation_bindings": [
                      {
                        "binding": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "grouping_keys": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      }
                    ],
                    "grouping_window_seconds": 1,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Production incidents",
                    "template": {
                      "custom_field_priorities": {
                        "abc123": "first-wins"
                      },
                      "custom_fields": {
                        "custom_field_10014": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      },
                      "incident_mode": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "incident_type": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "name": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "priority_severity": "severity-first-wins",
                      "severity": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "summary": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "workspace": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertRoutesShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Alert Routes V2",
        "tags": [
          "Alert Routes V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Updates an alert route.\n\nWe recommend you create alert routes in the incident.io dashboard where we allow\npreviewing filter and grouping rules.\n",
        "operationId": "Alert Routes V2#Update",
        "parameters": [
          {
            "description": "Unique identifier for this alert route config",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this alert route config",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "alert_sources": [
                  {
                    "alert_source_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": "one_of",
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": "incident.severity"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "auto_decline_enabled": false,
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "defer_time_seconds": 1,
                "enabled": false,
                "escalation_bindings": [
                  {
                    "binding": {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                ],
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": "one_of",
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": "incident.severity"
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "root_reference": "incident.status"
                  }
                ],
                "grouping_keys": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0"
                  }
                ],
                "grouping_window_seconds": 1,
                "incident_condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "incident_enabled": false,
                "name": "Production incidents",
                "template": {
                  "custom_field_priorities": {
                    "abc123": "abc123"
                  },
                  "custom_fields": {
                    "custom_field_10014": {
                      "array_value": [
                        {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      ],
                      "value": {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  },
                  "incident_mode": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "incident_type": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "name": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "priority_severity": "severity-first-wins",
                  "severity": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "start_in_triage": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "summary": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  },
                  "workspace": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/AlertRoutesUpdatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_route": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "defer_time_seconds": 1,
                    "escalation_bindings": [
                      {
                        "binding": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      }
                    ],
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "grouping_keys": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0"
                      }
                    ],
                    "grouping_window_seconds": 1,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Production incidents",
                    "template": {
                      "custom_field_priorities": {
                        "abc123": "first-wins"
                      },
                      "custom_fields": {
                        "custom_field_10014": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      },
                      "incident_mode": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "incident_type": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "name": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "priority_severity": "severity-first-wins",
                      "severity": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "summary": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      },
                      "workspace": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertRoutesUpdateResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Alert Routes V2",
        "tags": [
          "Alert Routes V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/alert_sources": {
      "get": {
        "description": "List all alert sources in your account.",
        "operationId": "Alert Sources V2#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_sources": [
                    {
                      "email_options": {
                        "email_address": "lawrence@example.com"
                      },
                      "id": "01GW2G3V0S59R238FAHPDS1R66",
                      "jira_options": {
                        "project_ids": [
                          "01GBSQF3FHF7FWZQNWGHAVQ804",
                          "10043"
                        ]
                      },
                      "name": "Production Web Dashboard Alerts",
                      "secret_token": "some-secret-token",
                      "source_type": "app_optics",
                      "template": {
                        "attributes": [
                          {
                            "alert_attribute_id": "abc123",
                            "binding": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          }
                        ],
                        "description": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        },
                        "expressions": [
                          {
                            "else_branch": {
                              "result": {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            },
                            "label": "Team Slack channel",
                            "operations": [
                              {
                                "branches": {
                                  "branches": [
                                    {
                                      "condition_groups": [
                                        {
                                          "conditions": [
                                            {
                                              "operation": {
                                                "label": "Lawrence Jones",
                                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                              },
                                              "param_bindings": [
                                                {
                                                  "array_value": [
                                                    {
                                                      "label": "Lawrence Jones",
                                                      "literal": "SEV123",
                                                      "reference": "incident.severity"
                                                    }
                                                  ],
                                                  "value": {
                                                    "label": "Lawrence Jones",
                                                    "literal": "SEV123",
                                                    "reference": "incident.severity"
                                                  }
                                                }
                                              ],
                                              "subject": {
                                                "label": "Incident Severity",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ]
                                        }
                                      ],
                                      "result": {
                                        "array_value": [
                                          {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    }
                                  ],
                                  "returns": {
                                    "array": true,
                                    "type": "IncidentStatus"
                                  }
                                },
                                "filter": {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "navigate": {
                                  "reference": "1235",
                                  "reference_label": "Teams"
                                },
                                "operation_type": "navigate",
                                "parse": {
                                  "returns": {
                                    "array": true,
                                    "type": "IncidentStatus"
                                  },
                                  "source": "metadata.annotations[\"github.com/repo\"]"
                                },
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                }
                              }
                            ],
                            "reference": "abc123",
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            },
                            "root_reference": "incident.status"
                          }
                        ],
                        "title": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertSourcesListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Alert Sources V2",
        "tags": [
          "Alert Sources V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create a new alert source in your account.",
        "operationId": "Alert Sources V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "jira_options": {
                  "project_ids": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "10043"
                  ]
                },
                "name": "Production Web Dashboard Alerts",
                "source_type": "app_optics",
                "template": {
                  "attributes": [
                    {
                      "alert_attribute_id": "abc123",
                      "binding": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "description": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  },
                  "expressions": [
                    {
                      "else_branch": {
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      },
                      "label": "Team Slack channel",
                      "operations": [
                        {
                          "branches": {
                            "branches": [
                              {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": "one_of",
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": "incident.severity"
                                      }
                                    ]
                                  }
                                ],
                                "result": {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              }
                            ],
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          },
                          "filter": {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": "one_of",
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": "incident.severity"
                                  }
                                ]
                              }
                            ]
                          },
                          "navigate": {
                            "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                          },
                          "operation_type": "navigate",
                          "parse": {
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            },
                            "source": "metadata.annotations[\"github.com/repo\"]"
                          }
                        }
                      ],
                      "reference": "abc123",
                      "root_reference": "incident.status"
                    }
                  ],
                  "title": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/AlertSourcesCreatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_source": {
                    "email_options": {
                      "email_address": "lawrence@example.com"
                    },
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "jira_options": {
                      "project_ids": [
                        "01GBSQF3FHF7FWZQNWGHAVQ804",
                        "10043"
                      ]
                    },
                    "name": "Production Web Dashboard Alerts",
                    "secret_token": "some-secret-token",
                    "source_type": "app_optics",
                    "template": {
                      "attributes": [
                        {
                          "alert_attribute_id": "abc123",
                          "binding": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "description": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      },
                      "expressions": [
                        {
                          "else_branch": {
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          },
                          "label": "Team Slack channel",
                          "operations": [
                            {
                              "branches": {
                                "branches": [
                                  {
                                    "condition_groups": [
                                      {
                                        "conditions": [
                                          {
                                            "operation": {
                                              "label": "Lawrence Jones",
                                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                            },
                                            "param_bindings": [
                                              {
                                                "array_value": [
                                                  {
                                                    "label": "Lawrence Jones",
                                                    "literal": "SEV123",
                                                    "reference": "incident.severity"
                                                  }
                                                ],
                                                "value": {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              }
                                            ],
                                            "subject": {
                                              "label": "Incident Severity",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "result": {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  }
                                ],
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                }
                              },
                              "filter": {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": {
                                          "label": "Lawrence Jones",
                                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                        },
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": {
                                          "label": "Incident Severity",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "navigate": {
                                "reference": "1235",
                                "reference_label": "Teams"
                              },
                              "operation_type": "navigate",
                              "parse": {
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                },
                                "source": "metadata.annotations[\"github.com/repo\"]"
                              },
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            }
                          ],
                          "reference": "abc123",
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "root_reference": "incident.status"
                        }
                      ],
                      "title": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertSourcesCreateResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Create Alert Sources V2",
        "tags": [
          "Alert Sources V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/alert_sources/{id}": {
      "delete": {
        "description": "Delete an existing alert source in your account.",
        "operationId": "Alert Sources V2#Delete",
        "parameters": [
          {
            "description": "The ID of this alert source",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The ID of this alert source",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Alert Sources V2",
        "tags": [
          "Alert Sources V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Load details about a specific alert source in your account.",
        "operationId": "Alert Sources V2#Show",
        "parameters": [
          {
            "description": "The ID of this alert source",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The ID of this alert source",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_source": {
                    "email_options": {
                      "email_address": "lawrence@example.com"
                    },
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "jira_options": {
                      "project_ids": [
                        "01GBSQF3FHF7FWZQNWGHAVQ804",
                        "10043"
                      ]
                    },
                    "name": "Production Web Dashboard Alerts",
                    "secret_token": "some-secret-token",
                    "source_type": "app_optics",
                    "template": {
                      "attributes": [
                        {
                          "alert_attribute_id": "abc123",
                          "binding": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "description": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      },
                      "expressions": [
                        {
                          "else_branch": {
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          },
                          "label": "Team Slack channel",
                          "operations": [
                            {
                              "branches": {
                                "branches": [
                                  {
                                    "condition_groups": [
                                      {
                                        "conditions": [
                                          {
                                            "operation": {
                                              "label": "Lawrence Jones",
                                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                            },
                                            "param_bindings": [
                                              {
                                                "array_value": [
                                                  {
                                                    "label": "Lawrence Jones",
                                                    "literal": "SEV123",
                                                    "reference": "incident.severity"
                                                  }
                                                ],
                                                "value": {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              }
                                            ],
                                            "subject": {
                                              "label": "Incident Severity",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "result": {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  }
                                ],
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                }
                              },
                              "filter": {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": {
                                          "label": "Lawrence Jones",
                                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                        },
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": {
                                          "label": "Incident Severity",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "navigate": {
                                "reference": "1235",
                                "reference_label": "Teams"
                              },
                              "operation_type": "navigate",
                              "parse": {
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                },
                                "source": "metadata.annotations[\"github.com/repo\"]"
                              },
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            }
                          ],
                          "reference": "abc123",
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "root_reference": "incident.status"
                        }
                      ],
                      "title": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertSourcesShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Alert Sources V2",
        "tags": [
          "Alert Sources V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Update an existing alert source in your account.",
        "operationId": "Alert Sources V2#Update",
        "parameters": [
          {
            "description": "The ID of this alert source",
            "example": "01GW2G3V0S59R238FAHPDS1R66",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The ID of this alert source",
              "example": "01GW2G3V0S59R238FAHPDS1R66",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "jira_options": {
                  "project_ids": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "10043"
                  ]
                },
                "name": "Production Web Dashboard Alerts",
                "template": {
                  "attributes": [
                    {
                      "alert_attribute_id": "abc123",
                      "binding": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    }
                  ],
                  "description": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  },
                  "expressions": [
                    {
                      "else_branch": {
                        "result": {
                          "array_value": [
                            {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          ],
                          "value": {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        }
                      },
                      "label": "Team Slack channel",
                      "operations": [
                        {
                          "branches": {
                            "branches": [
                              {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": "one_of",
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": "incident.severity"
                                      }
                                    ]
                                  }
                                ],
                                "result": {
                                  "array_value": [
                                    {
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              }
                            ],
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          },
                          "filter": {
                            "condition_groups": [
                              {
                                "conditions": [
                                  {
                                    "operation": "one_of",
                                    "param_bindings": [
                                      {
                                        "array_value": [
                                          {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        ],
                                        "value": {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ],
                                    "subject": "incident.severity"
                                  }
                                ]
                              }
                            ]
                          },
                          "navigate": {
                            "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                          },
                          "operation_type": "navigate",
                          "parse": {
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            },
                            "source": "metadata.annotations[\"github.com/repo\"]"
                          }
                        }
                      ],
                      "reference": "abc123",
                      "root_reference": "incident.status"
                    }
                  ],
                  "title": {
                    "literal": "SEV123",
                    "reference": "incident.severity"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/AlertSourcesUpdatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "alert_source": {
                    "email_options": {
                      "email_address": "lawrence@example.com"
                    },
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "jira_options": {
                      "project_ids": [
                        "01GBSQF3FHF7FWZQNWGHAVQ804",
                        "10043"
                      ]
                    },
                    "name": "Production Web Dashboard Alerts",
                    "secret_token": "some-secret-token",
                    "source_type": "app_optics",
                    "template": {
                      "attributes": [
                        {
                          "alert_attribute_id": "abc123",
                          "binding": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        }
                      ],
                      "description": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      },
                      "expressions": [
                        {
                          "else_branch": {
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          },
                          "label": "Team Slack channel",
                          "operations": [
                            {
                              "branches": {
                                "branches": [
                                  {
                                    "condition_groups": [
                                      {
                                        "conditions": [
                                          {
                                            "operation": {
                                              "label": "Lawrence Jones",
                                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                            },
                                            "param_bindings": [
                                              {
                                                "array_value": [
                                                  {
                                                    "label": "Lawrence Jones",
                                                    "literal": "SEV123",
                                                    "reference": "incident.severity"
                                                  }
                                                ],
                                                "value": {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              }
                                            ],
                                            "subject": {
                                              "label": "Incident Severity",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "result": {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  }
                                ],
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                }
                              },
                              "filter": {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": {
                                          "label": "Lawrence Jones",
                                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                        },
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": {
                                          "label": "Incident Severity",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "navigate": {
                                "reference": "1235",
                                "reference_label": "Teams"
                              },
                              "operation_type": "navigate",
                              "parse": {
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                },
                                "source": "metadata.annotations[\"github.com/repo\"]"
                              },
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            }
                          ],
                          "reference": "abc123",
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "root_reference": "incident.status"
                        }
                      ],
                      "title": {
                        "label": "Lawrence Jones",
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlertSourcesUpdateResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Alert Sources V2",
        "tags": [
          "Alert Sources V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/catalog_entries": {
      "get": {
        "description": "List entries for a catalog type.",
        "operationId": "Catalog V2#ListEntries",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "query",
            "name": "catalog_type_id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Integer number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "Integer number of records to return",
              "example": 25,
              "format": "int64",
              "maximum": 250,
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entries": [
                    {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "attribute_values": {
                        "abc123": {
                          "array_value": [
                            {
                              "catalog_entry": {
                                "archived_at": "2021-08-17T14:28:57.801578Z",
                                "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "catalog_entry_name": "Primary escalation",
                                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                              },
                              "helptext": "abc123",
                              "image_url": "abc123",
                              "is_image_slack_icon": false,
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity",
                              "sort_key": "abc123",
                              "unavailable": false,
                              "value": "abc123"
                            }
                          ],
                          "value": {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "abc123",
                            "image_url": "abc123",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "abc123",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        }
                      },
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call",
                      "rank": 3,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ],
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogListEntriesResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListEntries Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create an entry within the catalog. We support a maximum of 50,000 entries per type.\n\nIf you call this API with a payload where the external_id and catalog_type_id match an existing entry, the existing entry will be updated.",
        "operationId": "Catalog V2#CreateEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "name": "Primary On-call",
                "rank": 3
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogCreateEntryPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "abc123",
                            "image_url": "abc123",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "abc123",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        ],
                        "value": {
                          "catalog_entry": {
                            "archived_at": "2021-08-17T14:28:57.801578Z",
                            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "catalog_entry_name": "Primary escalation",
                            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                          },
                          "helptext": "abc123",
                          "image_url": "abc123",
                          "is_image_slack_icon": false,
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity",
                          "sort_key": "abc123",
                          "unavailable": false,
                          "value": "abc123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogCreateEntryResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/catalog_entries/{id}": {
      "delete": {
        "description": "Archives a catalog entry.",
        "operationId": "Catalog V2#DestroyEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "DestroyEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Show a single catalog entry.",
        "operationId": "Catalog V2#ShowEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "abc123",
                            "image_url": "abc123",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "abc123",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        ],
                        "value": {
                          "catalog_entry": {
                            "archived_at": "2021-08-17T14:28:57.801578Z",
                            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "catalog_entry_name": "Primary escalation",
                            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                          },
                          "helptext": "abc123",
                          "image_url": "abc123",
                          "is_image_slack_icon": false,
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity",
                          "sort_key": "abc123",
                          "unavailable": false,
                          "value": "abc123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogShowEntryResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Updates an existing catalog entry.",
        "operationId": "Catalog V2#UpdateEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "literal": "SEV123",
                        "reference": "incident.severity"
                      }
                    ],
                    "value": {
                      "literal": "SEV123",
                      "reference": "incident.severity"
                    }
                  }
                },
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "name": "Primary On-call",
                "rank": 3
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogUpdateEntryPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "catalog_entry": {
                              "archived_at": "2021-08-17T14:28:57.801578Z",
                              "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "catalog_entry_name": "Primary escalation",
                              "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                            },
                            "helptext": "abc123",
                            "image_url": "abc123",
                            "is_image_slack_icon": false,
                            "label": "Lawrence Jones",
                            "literal": "SEV123",
                            "reference": "incident.severity",
                            "sort_key": "abc123",
                            "unavailable": false,
                            "value": "abc123"
                          }
                        ],
                        "value": {
                          "catalog_entry": {
                            "archived_at": "2021-08-17T14:28:57.801578Z",
                            "catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "catalog_entry_name": "Primary escalation",
                            "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                          },
                          "helptext": "abc123",
                          "image_url": "abc123",
                          "is_image_slack_icon": false,
                          "label": "Lawrence Jones",
                          "literal": "SEV123",
                          "reference": "incident.severity",
                          "sort_key": "abc123",
                          "unavailable": false,
                          "value": "abc123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogUpdateEntryResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateEntry Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/catalog_resources": {
      "get": {
        "description": "List available engine resources for the catalog.\n\nA resource represents a type of data that can be held within the catalog, so this\nendpoint can be used to see what attribute types can be used when updating the\nschema of a catalog type.\n",
        "operationId": "Catalog V2#ListResources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "resources": [
                    {
                      "category": "custom",
                      "description": "Boolean true or false value",
                      "label": "GitHub Repository",
                      "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                      "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogListResourcesResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListResources Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/catalog_types": {
      "get": {
        "description": "List all catalog types for an organisation, including those synced from external resources.",
        "operationId": "Catalog V2#ListTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_types": [
                    {
                      "annotations": {
                        "incident.io/catalog-importer/id": "id-of-config"
                      },
                      "categories": [
                        "issue-tracker"
                      ],
                      "color": "yellow",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Represents Kubernetes clusters that we run inside of GKE.",
                      "dynamic_resource_parameter": "abc123",
                      "estimated_count": 7,
                      "icon": "alert",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_editable": false,
                      "last_synced_at": "2021-08-17T13:28:57.801578Z",
                      "name": "Kubernetes Cluster",
                      "ranked": true,
                      "registry_type": "PagerDutyService",
                      "required_integrations": [
                        "pager_duty"
                      ],
                      "schema": {
                        "attributes": [
                          {
                            "array": false,
                            "backlink_attribute": "abc123",
                            "id": "01GW2G3V0S59R238FAHPDS1R66",
                            "mode": "manual",
                            "name": "tier",
                            "path": [
                              {
                                "attribute_id": "abc123",
                                "attribute_name": "abc123"
                              }
                            ],
                            "type": "Custom[\"Service\"]"
                          }
                        ],
                        "version": 1
                      },
                      "semantic_type": "custom",
                      "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                      "type_name": "Custom[\"BackstageGroup\"]",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogListTypesResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListTypes Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create a catalog type. The schema must be updated using the UpdateTypeSchema endpoint.",
        "operationId": "Catalog V2#CreateType",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "icon": "alert",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                "type_name": "Custom[\"BackstageGroup\"]"
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogCreateTypePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogCreateTypeResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateType Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/catalog_types/{id}": {
      "delete": {
        "description": "Archives a catalog type and associated entries.",
        "operationId": "Catalog V2#DestroyType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "DestroyType Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Show a single catalog type.",
        "operationId": "Catalog V2#ShowType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogShowTypeResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowType Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Updates an existing catalog type. The schema must be updated using the UpdateTypeSchema endpoint.",
        "operationId": "Catalog V2#UpdateType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "icon": "alert",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "source_repo_url": "https://github.com/my-company/incident-io-catalog"
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogUpdateTypePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogUpdateTypeResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateType Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/catalog_types/{id}/actions/update_schema": {
      "post": {
        "description": "Update an existing catalog types schema, adding or removing attributes.\n\nUpdating the schema is handled separately from creating and updating types, so that you don't\nhave to worry about dependencies between types. For example, if type A has an attribute that\nrelies on type B, you would have to create type B first.\n\nBy allowing the creation of types without a schema, they can be created in any order, but it\nmeans that you need to make a separate call to this endpoint to update the schema.",
        "operationId": "Catalog V2#UpdateTypeSchema",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "attributes": [
                  {
                    "array": false,
                    "backlink_attribute": "abc123",
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "manual",
                    "name": "tier",
                    "path": [
                      {
                        "attribute_id": "abc123"
                      }
                    ],
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogUpdateTypeSchemaPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "manual",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "semantic_type": "custom",
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogUpdateTypeSchemaResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateTypeSchema Catalog V2",
        "tags": [
          "Catalog V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/custom_fields": {
      "get": {
        "description": "List all custom fields for an organisation.",
        "operationId": "Custom Fields V2#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_fields": [
                    {
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Which team is impacted by this issue",
                      "field_type": "single_select",
                      "filter_by": {
                        "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                        "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                      },
                      "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected Team",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Custom Fields V2",
        "tags": [
          "Custom Fields V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create a new custom field",
        "operationId": "Custom Fields V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "description": "Which team is impacted by this issue",
                "field_type": "single_select",
                "filter_by": {
                  "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                  "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                },
                "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                "name": "Affected Team"
              },
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsCreatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "filter_by": {
                      "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                      "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                    },
                    "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsCreateResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Custom Fields V2",
        "tags": [
          "Custom Fields V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/custom_fields/{id}": {
      "delete": {
        "description": "Delete a custom field",
        "operationId": "Custom Fields V2#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Custom Fields V2",
        "tags": [
          "Custom Fields V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Get a single custom field.",
        "operationId": "Custom Fields V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "filter_by": {
                      "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                      "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                    },
                    "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Custom Fields V2",
        "tags": [
          "Custom Fields V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Update the details of a custom field",
        "operationId": "Custom Fields V2#Update",
        "parameters": [
          {
            "description": "Unique identifier for the custom field",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the custom field",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Which team is impacted by this issue",
                "filter_by": {
                  "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                  "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                },
                "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                "name": "Affected Team"
              },
              "schema": {
                "$ref": "#/components/schemas/CustomFieldsUpdatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "custom_field": {
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Which team is impacted by this issue",
                    "field_type": "single_select",
                    "filter_by": {
                      "catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                      "custom_field_id": "01H2FW182TAH0NHEVBY34SCAK0"
                    },
                    "group_by_catalog_attribute_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "helptext_catalog_attribute_id": "01H2FW182TAH0NHEVBY34SCAK0",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Affected Team",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldsUpdateResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Custom Fields V2",
        "tags": [
          "Custom Fields V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/escalation_paths": {
      "post": {
        "description": "Create an escalation path.\n\nAn escalation path is a series of steps that describe how a page should be escalated,\nrepresented as graph, supporting conditional branches based on alert priority and working\nintervals.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#CreatePath",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Urgent Support",
                "path": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "if_else": {
                      "conditions": [
                        {
                          "operation": "one_of",
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": "incident.severity"
                        }
                      ],
                      "else_path": [
                        {}
                      ],
                      "then_path": [
                        {}
                      ]
                    },
                    "level": {
                      "round_robin_config": {
                        "enabled": false,
                        "rotate_after_seconds": 120
                      },
                      "targets": [
                        {
                          "id": "lawrencejones",
                          "schedule_mode": "currently_on_call",
                          "type": "user",
                          "urgency": "high"
                        }
                      ],
                      "time_to_ack_interval_condition": "active",
                      "time_to_ack_seconds": 1800,
                      "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "notify_channel": {
                      "targets": [
                        {
                          "id": "lawrencejones",
                          "schedule_mode": "currently_on_call",
                          "type": "user",
                          "urgency": "high"
                        }
                      ],
                      "time_to_ack_interval_condition": "active",
                      "time_to_ack_seconds": 1800,
                      "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "repeat": {
                      "repeat_times": 3,
                      "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "type": "if_else"
                  }
                ],
                "working_hours": [
                  {
                    "id": "abc123",
                    "name": "abc123",
                    "timezone": "abc123",
                    "weekday_intervals": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "tuesday"
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/EscalationPathPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "escalation_path": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Urgent Support",
                    "path": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "if_else": {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "else_path": [
                            {}
                          ],
                          "then_path": [
                            {}
                          ]
                        },
                        "level": {
                          "round_robin_config": {
                            "enabled": false,
                            "rotate_after_seconds": 120
                          },
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "schedule_mode": "currently_on_call",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "notify_channel": {
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "schedule_mode": "currently_on_call",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "repeat": {
                          "repeat_times": 3,
                          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "type": "if_else"
                      }
                    ],
                    "working_hours": [
                      {
                        "id": "abc123",
                        "name": "abc123",
                        "timezone": "abc123",
                        "weekday_intervals": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreatePathResponseBody"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreatePath Escalations V2",
        "tags": [
          "Escalations V2"
        ]
      }
    },
    "/v2/escalation_paths/{id}": {
      "delete": {
        "description": "Archives an escalation path.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#DestroyPath",
        "parameters": [
          {
            "description": "Unique identifier for this escalation path.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this escalation path.",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "DestroyPath Escalations V2",
        "tags": [
          "Escalations V2"
        ]
      },
      "get": {
        "description": "Show an escalation path.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#ShowPath",
        "parameters": [
          {
            "description": "Unique identifier for this escalation path.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this escalation path.",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "escalation_path": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Urgent Support",
                    "path": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "if_else": {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "else_path": [
                            {}
                          ],
                          "then_path": [
                            {}
                          ]
                        },
                        "level": {
                          "round_robin_config": {
                            "enabled": false,
                            "rotate_after_seconds": 120
                          },
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "schedule_mode": "currently_on_call",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "notify_channel": {
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "schedule_mode": "currently_on_call",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "repeat": {
                          "repeat_times": 3,
                          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "type": "if_else"
                      }
                    ],
                    "working_hours": [
                      {
                        "id": "abc123",
                        "name": "abc123",
                        "timezone": "abc123",
                        "weekday_intervals": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreatePathResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowPath Escalations V2",
        "tags": [
          "Escalations V2"
        ]
      },
      "put": {
        "description": "Updates an escalation path.\n\nWe recommend you create escalation paths in the incident.io dashboard where our path\nbuilder makes it easy to use conditions and visualise the path.\n",
        "operationId": "Escalations V2#UpdatePath",
        "parameters": [
          {
            "description": "Unique identifier for this escalation path.",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for this escalation path.",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Urgent Support",
                "path": [
                  {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "if_else": {
                      "conditions": [
                        {
                          "operation": "one_of",
                          "param_bindings": [
                            {
                              "array_value": [
                                {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "subject": "incident.severity"
                        }
                      ],
                      "else_path": [
                        {}
                      ],
                      "then_path": [
                        {}
                      ]
                    },
                    "level": {
                      "round_robin_config": {
                        "enabled": false,
                        "rotate_after_seconds": 120
                      },
                      "targets": [
                        {
                          "id": "lawrencejones",
                          "schedule_mode": "currently_on_call",
                          "type": "user",
                          "urgency": "high"
                        }
                      ],
                      "time_to_ack_interval_condition": "active",
                      "time_to_ack_seconds": 1800,
                      "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "notify_channel": {
                      "targets": [
                        {
                          "id": "lawrencejones",
                          "schedule_mode": "currently_on_call",
                          "type": "user",
                          "urgency": "high"
                        }
                      ],
                      "time_to_ack_interval_condition": "active",
                      "time_to_ack_seconds": 1800,
                      "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "repeat": {
                      "repeat_times": 3,
                      "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                    },
                    "type": "if_else"
                  }
                ],
                "working_hours": [
                  {
                    "id": "abc123",
                    "name": "abc123",
                    "timezone": "abc123",
                    "weekday_intervals": [
                      {
                        "end_time": "17:00",
                        "start_time": "09:00",
                        "weekday": "tuesday"
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/EscalationPathPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "escalation_path": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Urgent Support",
                    "path": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "if_else": {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ],
                          "else_path": [
                            {}
                          ],
                          "then_path": [
                            {}
                          ]
                        },
                        "level": {
                          "round_robin_config": {
                            "enabled": false,
                            "rotate_after_seconds": 120
                          },
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "schedule_mode": "currently_on_call",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "notify_channel": {
                          "targets": [
                            {
                              "id": "lawrencejones",
                              "schedule_mode": "currently_on_call",
                              "type": "user",
                              "urgency": "high"
                            }
                          ],
                          "time_to_ack_interval_condition": "active",
                          "time_to_ack_seconds": 1800,
                          "time_to_ack_weekday_interval_config_id": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "repeat": {
                          "repeat_times": 3,
                          "to_node": "01FCNDV6P870EA6S7TK1DSYDG0"
                        },
                        "type": "if_else"
                      }
                    ],
                    "working_hours": [
                      {
                        "id": "abc123",
                        "name": "abc123",
                        "timezone": "abc123",
                        "weekday_intervals": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreatePathResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdatePath Escalations V2",
        "tags": [
          "Escalations V2"
        ]
      }
    },
    "/v2/follow_ups": {
      "get": {
        "description": "List all follow-ups for an organisation.",
        "operationId": "Follow-ups V2#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Find follow-ups related to this incident",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "description": "Find follow-ups related to this incident",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter to follow-ups from incidents of the given mode. If not set, only follow-ups from `standard` and `retrospective` incidents are returned",
            "example": "standard",
            "in": "query",
            "name": "incident_mode",
            "schema": {
              "description": "Filter to follow-ups from incidents of the given mode. If not set, only follow-ups from `standard` and `retrospective` incidents are returned",
              "enum": [
                "standard",
                "retrospective",
                "test",
                "tutorial",
                "stream"
              ],
              "example": "standard",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "follow_ups": [
                    {
                      "assignee": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      },
                      "completed_at": "2021-08-17T13:28:57.801578Z",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Call the fire brigade",
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "priority": {
                        "description": "A follow-up that requires immediate attention.",
                        "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                        "name": "Urgent",
                        "rank": 10
                      },
                      "status": "outstanding",
                      "title": "Cat is stuck in the tree",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Follow-ups V2",
        "tags": [
          "Follow-ups V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/follow_ups/{id}": {
      "get": {
        "description": "Get a single incident follow-up.",
        "operationId": "Follow-ups V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the follow-up",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the follow-up",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "follow_up": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "priority": {
                      "description": "A follow-up that requires immediate attention.",
                      "id": "01GNW4BAQ7XRMFF6FHKNXDFPRW",
                      "name": "Urgent",
                      "rank": 10
                    },
                    "status": "outstanding",
                    "title": "Cat is stuck in the tree",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FollowUpsShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Follow-ups V2",
        "tags": [
          "Follow-ups V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/incident_roles": {
      "get": {
        "description": "List all incident roles for an organisation.",
        "operationId": "Incident Roles V2#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_roles": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "The person currently coordinating the incident",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                      "name": "Incident Lead",
                      "role_type": "lead",
                      "shortform": "lead",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Roles V2",
        "tags": [
          "Incident Roles V2"
        ]
      },
      "post": {
        "description": "Create a new incident role",
        "operationId": "Incident Roles V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "shortform": "lead"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateRequestBody4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Incident Roles V2",
        "tags": [
          "Incident Roles V2"
        ]
      }
    },
    "/v2/incident_roles/{id}": {
      "delete": {
        "description": "Removes an existing role",
        "operationId": "Incident Roles V2#Delete",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "Delete Incident Roles V2",
        "tags": [
          "Incident Roles V2"
        ]
      },
      "get": {
        "description": "Get a single incident role.",
        "operationId": "Incident Roles V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Roles V2",
        "tags": [
          "Incident Roles V2"
        ]
      },
      "put": {
        "description": "Update an existing incident role",
        "operationId": "Incident Roles V2#Update",
        "parameters": [
          {
            "description": "Unique identifier for the role",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the role",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "The person currently coordinating the incident",
                "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                "name": "Incident Lead",
                "shortform": "lead"
              },
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestBody2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_role": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "The person currently coordinating the incident",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                    "name": "Incident Lead",
                    "role_type": "lead",
                    "shortform": "lead",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Incident Roles V2",
        "tags": [
          "Incident Roles V2"
        ]
      }
    },
    "/v2/incident_timestamps": {
      "get": {
        "description": "List all incident timestamps for an organisation.",
        "operationId": "Incident Timestamps V2#List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_timestamps": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Impact started",
                      "rank": 1
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody5"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Timestamps V2",
        "tags": [
          "Incident Timestamps V2"
        ]
      }
    },
    "/v2/incident_timestamps/{id}": {
      "get": {
        "description": "Get a single incident timestamp.",
        "operationId": "Incident Timestamps V2#Show",
        "parameters": [
          {
            "description": "Unique ID of this incident timestamp",
            "example": "01FCNDV6P870EA6S7TK1DSYD5H",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique ID of this incident timestamp",
              "example": "01FCNDV6P870EA6S7TK1DSYD5H",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_timestamp": {
                    "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "name": "Impact started",
                    "rank": 1
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody4"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incident Timestamps V2",
        "tags": [
          "Incident Timestamps V2"
        ]
      }
    },
    "/v2/incident_updates": {
      "get": {
        "description": "List all incident updates for an organisation, or for a specific incident.",
        "operationId": "Incident Updates V2#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Incident whose updates you want to list",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "in": "query",
            "name": "incident_id",
            "schema": {
              "description": "Incident whose updates you want to list",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Integer number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "Integer number of records to return",
              "example": 25,
              "format": "int64",
              "maximum": 500,
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident_updates": [
                    {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "merged_into_incident_id": "abc123",
                      "message": "We're working on a fix, hoping to ship in the next 30 minutes",
                      "new_incident_status": {
                        "category": "triage",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                        "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                        "name": "Closed",
                        "rank": 4,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "new_severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "updater": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody7"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incident Updates V2",
        "tags": [
          "Incident Updates V2"
        ]
      }
    },
    "/v2/incidents": {
      "get": {
        "description": "List all incidents for an organisation.\n\nThis endpoint supports a number of filters, which can help find incidents matching certain\ncriteria.\n\nFilters are provided as query parameters, but due to the dynamic nature of what you can\nquery by (different accounts have different custom fields, statuses, etc) they are more\ncomplex than most.\n\nThe maximum page size that can be requested is 250.\n\nTo help, here are some exemplar curl requests with a human description of what they search\nfor.\n\nNote that:\n- Filters may be used together, and the result will be incidents that match all filters.\n- IDs are normally in UUID format, but have been replaced with shorter strings to improve\nreadability.\n- All query parameters must be URI encoded.\n\n### By status\n\nWith status of id=ABC, find all incidents that are set to that status:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status[one_of]=ABC'\n\nOr all incidents that are not set to status with id=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status[not_in]=ABC'\n\n### By created_at or updated_at\n\nFind all incidents that follow specified date parameters for created_at and updated_at fields.\nPossible values are \"gte\" (greater than or equal to) and \"lte\" (less than or equal to). The\nfollowing example finds all incidents created before or on 2021-01-02T00:00:00Z:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'created_at[lte]=2021-01-02'\n\n### By status category\n\nFind all incidents that are in a status category. Possible values are \"triage\",\n\"declined\", \"merged\", \"canceled\", \"live\", \"learning\" and \"closed\":\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status_category[one_of]=live'\n\nOr all incidents that are not in a status category:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'status_category[not_in]=live'\n\n\n### By severity\n\nWith severity of id=ABC, find all incidents that are set to that severity:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[one_of]=ABC'\n\nOr all incidents where severity rank is greater-than-or-equal-to the rank of severity\nid=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[gte]=ABC'\n\nOr all incidents where severity rank is less-than-or-equal-to the rank of severity id=ABC:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'severity[lte]=ABC'\n\n### By incident type\n\nWith incident type of id=ABC, find all incidents that are of that type:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_type[one_of]=ABC'\n\nOr all incidents not of that type:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_type[not_in]=ABC'\n\n### By incident mode\n\nBy default, we return standard and retrospective incidents. This means that test and\ntutorial incidents are filtered out. To override this behaviour, you can use the\nmode filter to specify which modes you want to get.\n\nTo find incidents of all modes:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'mode[one_of]=standard\u0026mode[one_of]=retrospective\u0026mode[one_of]=test\u0026mode[one_of]=tutorial'\n\nTo find just test incidents:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'mode[one_of]=test'\n\n\n### By incident role\n\nRoles and custom fields have another nested layer in the query parameter, to account for\noperations against any of the roles or custom fields created in the account.\n\nWith incident role id=ABC, find all incidents where that role is unset:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_role[ABC][is_blank]=true'\n\nOr where the role has been set:\n\n\t\tcurl --get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'incident_role[ABC][is_blank]=false'\n\n### By option custom fields\n\nWith an option custom field id=ABC, all incidents that have field ABC set to the custom\nfield option of id=XYZ:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'custom_field[ABC][one_of]=XYZ'\n\nOr all incidents that do not have custom field id=ABC set to option id=XYZ:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents' \\\n\t\t\t--data 'custom_field[ABC][not_in]=XYZ'\n",
        "operationId": "Incidents V2#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "number of records to return",
              "example": 25,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An incident's ID. This endpoint will return a list of incidents after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An incident's ID. This endpoint will return a list of incidents after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on incident status. The accepted operators are 'one_of', or 'not_in'.",
            "example": {
              "one_of": [
                "01GBSQF3FHF7FWZQNWGHAVQ804"
              ]
            },
            "in": "query",
            "name": "status",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on incident status. The accepted operators are 'one_of', or 'not_in'.",
              "example": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804"
                ]
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on the category of the incidents status. The accepted operators are 'one_of', or 'not_in'.",
            "example": {
              "one_of": [
                "active"
              ]
            },
            "in": "query",
            "name": "status_category",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on the category of the incidents status. The accepted operators are 'one_of', or 'not_in'.",
              "example": {
                "one_of": [
                  "active"
                ]
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on incident created at timestamp. The accepted operators are 'gte', 'lte' and 'date_range'.",
            "example": {
              "created_at[gte]": [
                "2024-05-01"
              ]
            },
            "in": "query",
            "name": "created_at",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on incident created at timestamp. The accepted operators are 'gte', 'lte' and 'date_range'.",
              "example": {
                "created_at[gte]": [
                  "2024-05-01"
                ]
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on incident updated at timestamp. The accepted operators are 'gte', 'lte' and 'date_range'.",
            "example": {
              "updated_at[gte]": [
                "2024-05-01"
              ]
            },
            "in": "query",
            "name": "updated_at",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on incident updated at timestamp. The accepted operators are 'gte', 'lte' and 'date_range'.",
              "example": {
                "updated_at[gte]": [
                  "2024-05-01"
                ]
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on incident severity. The accepted operators are 'one_of', 'not_in', 'gte', 'lte'.",
            "example": {
              "one_of": [
                "01GBSQF3FHF7FWZQNWGHAVQ804"
              ]
            },
            "in": "query",
            "name": "severity",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on incident severity. The accepted operators are 'one_of', 'not_in', 'gte', 'lte'.",
              "example": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804"
                ]
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on incident type. The accepted operators are 'one_of, or 'not_in'.",
            "example": {
              "one_of": [
                "01GBSQF3FHF7FWZQNWGHAVQ804"
              ]
            },
            "in": "query",
            "name": "incident_type",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on incident type. The accepted operators are 'one_of, or 'not_in'.",
              "example": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804"
                ]
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on an incident role. Role ID should be sent, followed by the operator and values. The accepted operators are 'one_of', 'is_blank'.",
            "example": {
              "01GBSQF3FHF7FWZQNWGHAVQ804": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804",
                  "01ET65M7ZARSFZ6TFDFVQDN9AA"
                ]
              }
            },
            "in": "query",
            "name": "incident_role",
            "schema": {
              "additionalProperties": {
                "additionalProperties": {
                  "example": [
                    "value"
                  ],
                  "items": {
                    "example": "value",
                    "type": "string"
                  },
                  "type": "array"
                },
                "example": {
                  "abc123": [
                    "value"
                  ]
                },
                "type": "object"
              },
              "description": "Filter on an incident role. Role ID should be sent, followed by the operator and values. The accepted operators are 'one_of', 'is_blank'.",
              "example": {
                "01GBSQF3FHF7FWZQNWGHAVQ804": {
                  "one_of": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "01ET65M7ZARSFZ6TFDFVQDN9AA"
                  ]
                }
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on an incident custom field. Custom field ID should be sent, followed by the operator and values. Accepted operator will depend on the custom field type.",
            "example": {
              "01GBSQF3FHF7FWZQNWGHAVQ804": {
                "one_of": [
                  "01GBSQF3FHF7FWZQNWGHAVQ804",
                  "01ET65M7ZARSFZ6TFDFVQDN9AA"
                ]
              }
            },
            "in": "query",
            "name": "custom_field",
            "schema": {
              "additionalProperties": {
                "additionalProperties": {
                  "example": [
                    "value"
                  ],
                  "items": {
                    "example": "value",
                    "type": "string"
                  },
                  "type": "array"
                },
                "example": {
                  "abc123": [
                    "value"
                  ]
                },
                "type": "object"
              },
              "description": "Filter on an incident custom field. Custom field ID should be sent, followed by the operator and values. Accepted operator will depend on the custom field type.",
              "example": {
                "01GBSQF3FHF7FWZQNWGHAVQ804": {
                  "one_of": [
                    "01GBSQF3FHF7FWZQNWGHAVQ804",
                    "01ET65M7ZARSFZ6TFDFVQDN9AA"
                  ]
                }
              },
              "type": "object"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter on incident mode. The accepted operator is 'one_of'.  If this is not provided, this value defaults to `{\"one_of\": [\"standard\", \"retrospective\"] }`, meaning that test and tutorial incidents are not included.",
            "example": {
              "one_of": [
                "retrospective"
              ]
            },
            "in": "query",
            "name": "mode",
            "schema": {
              "additionalProperties": {
                "example": [
                  "some_value"
                ],
                "items": {
                  "example": "some_value",
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Filter on incident mode. The accepted operator is 'one_of'.  If this is not provided, this value defaults to `{\"one_of\": [\"standard\", \"retrospective\"] }`, meaning that test and tutorial incidents are not included.",
              "example": {
                "one_of": [
                  "retrospective"
                ]
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incidents": [
                    {
                      "call_url": "https://zoom.us/foo",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "creator": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      },
                      "custom_field_entries": [
                        {
                          "custom_field": {
                            "description": "Which team is impacted by this issue",
                            "field_type": "single_select",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Affected Team",
                            "options": [
                              {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              }
                            ]
                          },
                          "values": [
                            {
                              "value_catalog_entry": {
                                "aliases": [
                                  "lawrence@incident.io",
                                  "lawrence"
                                ],
                                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Primary On-call"
                              },
                              "value_link": "https://google.com/",
                              "value_numeric": "123.456",
                              "value_option": {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              },
                              "value_text": "This is my text field, I hope you like it"
                            }
                          ]
                        }
                      ],
                      "duration_metrics": [
                        {
                          "duration_metric": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Lasted"
                          },
                          "value_seconds": 1
                        }
                      ],
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "has_debrief": false,
                      "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                      "incident_role_assignments": [
                        {
                          "assignee": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          },
                          "role": {
                            "created_at": "2021-08-17T13:28:57.801578Z",
                            "description": "The person currently coordinating the incident",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                            "name": "Incident Lead",
                            "required": false,
                            "role_type": "lead",
                            "shortform": "lead",
                            "updated_at": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_status": {
                        "category": "triage",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                        "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                        "name": "Closed",
                        "rank": 4,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "incident_timestamp_values": [
                        {
                          "incident_timestamp": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Impact started",
                            "rank": 1
                          },
                          "value": {
                            "value": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_type": {
                        "create_in_triage": "always",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Customer facing production outages",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "is_default": false,
                        "name": "Production Outage",
                        "private_incidents_only": false,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "mode": "standard",
                      "name": "Our database is sad",
                      "permalink": "https://app.incident.io/incidents/123",
                      "postmortem_document_url": "https://docs.google.com/my_doc_id",
                      "reference": "INC-123",
                      "severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "slack_channel_id": "C02AW36C1M5",
                      "slack_channel_name": "inc-165-green-parrot",
                      "slack_team_id": "T02A1FSLE8J",
                      "summary": "Our database is really really sad, and we don't know why yet.",
                      "updated_at": "2021-08-17T13:28:57.801578Z",
                      "visibility": "public",
                      "workload_minutes_late": 40.7,
                      "workload_minutes_sleeping": 0,
                      "workload_minutes_total": 60.7,
                      "workload_minutes_working": 20
                    }
                  ],
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25,
                    "total_record_count": 238
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody9"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Incidents V2",
        "tags": [
          "Incidents V2"
        ]
      },
      "post": {
        "description": "Create a new incident.\n\nNote that if the incident mode is set to \"retrospective\" then the new incident\nwill not be announced in Slack.\n",
        "operationId": "Incidents V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "custom_field_entries": [
                  {
                    "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "values": [
                      {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_link": "https://google.com/",
                        "value_numeric": "123.456",
                        "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "value_text": "This is my text field, I hope you like it",
                        "value_timestamp": ""
                      }
                    ]
                  }
                ],
                "idempotency_key": "alert-uuid",
                "incident_role_assignments": [
                  {
                    "assignee": {
                      "email": "bob@example.com",
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "slack_user_id": "USER123"
                    },
                    "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
                  }
                ],
                "incident_status_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "incident_timestamp_values": [
                  {
                    "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                    "value": "2021-08-17T13:28:57.801578Z"
                  }
                ],
                "incident_type_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "mode": "standard",
                "name": "Our database is sad",
                "retrospective_incident_options": {
                  "postmortem_document_url": "https://docs.google.com/my_doc_id",
                  "slack_channel_id": "abc123"
                },
                "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                "slack_channel_name_override": "inc-123-database-down",
                "slack_team_id": "T02A1FSLE8J",
                "summary": "Our database is really really sad, and we don't know why yet.",
                "visibility": "public"
              },
              "schema": {
                "$ref": "#/components/schemas/IncidentCreatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "has_debrief": false,
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody7"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Create Incidents V2",
        "tags": [
          "Incidents V2"
        ]
      }
    },
    "/v2/incidents/{id}": {
      "get": {
        "description": "Get a single incident.\n\nThe ID supplied can be either the incident's full ID, or the numeric part of its\nreference. For example, to get INC-123, you could use either its full ID or:\n\n\t\tcurl \\\n\t\t\t--get 'https://api.incident.io/v2/incidents/123\n",
        "operationId": "Incidents V2#Show",
        "parameters": [
          {
            "description": "Unique identifier for the incident",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the incident",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "has_debrief": false,
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody7"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Incidents V2",
        "tags": [
          "Incidents V2"
        ]
      }
    },
    "/v2/incidents/{id}/actions/edit": {
      "post": {
        "description": "Edit an existing incident.\n\nThis endpoint allows you to edit the properties of an existing incident: e.g. set the severity or update custom fields.\n\nWhen using this endpoint, only fields that are provided will be edited (omitted fields\nwill be ignored).\n",
        "operationId": "Incidents V2#Edit",
        "parameters": [
          {
            "description": "The unique identifier of the incident that you want to edit",
            "example": "01G18REBY9AYH6CMWCJ2CVCYCH",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The unique identifier of the incident that you want to edit",
              "example": "01G18REBY9AYH6CMWCJ2CVCYCH",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "incident": {
                  "call_url": "https://zoom.us/foo",
                  "custom_field_entries": [
                    {
                      "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "values": [
                        {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "value_catalog_entry_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "value_link": "https://google.com/",
                          "value_numeric": "123.456",
                          "value_option_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "value_text": "This is my text field, I hope you like it",
                          "value_timestamp": ""
                        }
                      ]
                    }
                  ],
                  "incident_role_assignments": [
                    {
                      "assignee": {
                        "email": "bob@example.com",
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "slack_user_id": "USER123"
                      },
                      "incident_role_id": "01FH5TZRWMNAFB0DZ23FD1TV96"
                    }
                  ],
                  "incident_status_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                  "incident_timestamp_values": [
                    {
                      "incident_timestamp_id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "value": "2021-08-17T13:28:57.801578Z"
                    }
                  ],
                  "name": "Our database is sad",
                  "severity_id": "01FH5TZRWMNAFB0DZ23FD1TV96",
                  "slack_channel_name_override": "inc-123-database-down",
                  "summary": "Our database is really really sad, and we don't know why yet."
                },
                "notify_incident_channel": true
              },
              "schema": {
                "$ref": "#/components/schemas/EditRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "incident": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "has_debrief": false,
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ShowResponseBody7"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Edit Incidents V2",
        "tags": [
          "Incidents V2"
        ]
      }
    },
    "/v2/managed_resources": {
      "post": {
        "description": "Called by external providers such as Terraform, this can 'claim' an incident.io resource as being managed externally.",
        "operationId": "Managed Resources V2#CreateManagedResource",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "resource_id": "abc123",
                "resource_type": "schedule"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateManagedResourceRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "managed_resource": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "resource_id": "abc123",
                    "resource_type": "schedule",
                    "source_url": "https://github.com/my-company/infrastructure"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CreateManagedResourceResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "CreateManagedResource Managed Resources V2",
        "tags": [
          "Managed Resources V2"
        ]
      }
    },
    "/v2/schedule_entries": {
      "get": {
        "description": "Get a list of schedule entries. The endpoint will return all entries that overlap with the given window, if one is provided.",
        "operationId": "Schedules V2#ListScheduleEntries",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "The ID of the schedule to get entries for.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "schedule_id",
            "required": true,
            "schema": {
              "description": "The ID of the schedule to get entries for.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "The start of the window to get entries for.",
            "example": "2021-01-01T00:00:00Z",
            "in": "query",
            "name": "entry_window_start",
            "schema": {
              "description": "The start of the window to get entries for.",
              "example": "2021-01-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "The end of the window to get entries for.",
            "example": "2021-01-01T00:00:00Z",
            "in": "query",
            "name": "entry_window_end",
            "schema": {
              "description": "The end of the window to get entries for.",
              "example": "2021-01-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "pagination_meta": {
                    "after": "abc123",
                    "after_url": "abc123"
                  },
                  "schedule_entries": {
                    "final": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "overrides": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "scheduled": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ]
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SchedulesListScheduleEntriesResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListScheduleEntries Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/schedule_overrides": {
      "post": {
        "description": "Create a new schedule override.",
        "operationId": "Schedules V2#CreateOverride",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "end_at": "2021-08-17T14:00:00.000000Z",
                "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "schedule_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                "start_at": "2021-08-17T13:00:00.000000Z",
                "user": {
                  "email": "bob@example.com",
                  "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                  "slack_user_id": "USER123"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SchedulesCreateOverridePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "override": {
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "end_at": "2021-08-17T13:28:57.801578Z",
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "layer_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "schedule_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "start_at": "2021-08-17T13:28:57.801578Z",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "user": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SchedulesCreateOverrideResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateOverride Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/schedules": {
      "get": {
        "description": "List configured schedules.",
        "operationId": "Schedules V2#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "number of records to return",
              "example": 25,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "A schedule's ID. This endpoint will return a list of schedules after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "A schedule's ID. This endpoint will return a list of schedules after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25,
                    "total_record_count": 238
                  },
                  "schedules": [
                    {
                      "annotations": {
                        "incident.io/terraform/version": "3.0.0"
                      },
                      "config": {
                        "rotations": [
                          {
                            "effective_from": "2021-08-17T13:28:57.801578Z",
                            "handover_start_at": "2021-08-17T13:28:57.801578Z",
                            "handovers": [
                              {
                                "interval": 1,
                                "interval_type": "daily"
                              }
                            ],
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "layers": [
                              {
                                "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                                "name": "Layer 1"
                              }
                            ],
                            "name": "Primary On-Call Schedule",
                            "users": [
                              {
                                "email": "lisa@incident.io",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Lisa Karlin Curtis",
                                "role": "viewer",
                                "slack_user_id": "U02AYNF2XJM"
                              }
                            ],
                            "working_interval": [
                              {
                                "end_time": "17:00",
                                "start_time": "09:00",
                                "weekday": "tuesday"
                              }
                            ],
                            "working_intervals": [
                              {
                                "end_time": "17:00",
                                "start_time": "09:00",
                                "weekday": "tuesday"
                              }
                            ]
                          }
                        ]
                      },
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "current_shifts": [
                        {
                          "end_at": "2021-08-17T13:28:57.801578Z",
                          "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                          "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "start_at": "2021-08-17T13:28:57.801578Z",
                          "user": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          }
                        }
                      ],
                      "holidays_public_config": {
                        "country_codes": [
                          "GB",
                          "FR"
                        ]
                      },
                      "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                      "name": "Primary On-Call Schedule",
                      "timezone": "Europe/London",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/SchedulesListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create a new schedule.",
        "operationId": "Schedules V2#Create",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "schedule": {
                  "annotations": {
                    "incident.io/terraform/version": "version-of-terraform"
                  },
                  "config": {
                    "rotations": [
                      {
                        "effective_from": "2021-08-17T13:28:57.801578Z",
                        "handover_start_at": "2021-08-17T13:28:57.801578Z",
                        "handovers": [
                          {
                            "interval": 1,
                            "interval_type": "daily"
                          }
                        ],
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layers": [
                          {
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "name": "Layer 1"
                          }
                        ],
                        "name": "My Rotation",
                        "users": [
                          {
                            "email": "bob@example.com",
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "slack_user_id": "USER123"
                          }
                        ],
                        "working_interval": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  },
                  "holidays_public_config": {
                    "country_codes": [
                      "abc123"
                    ]
                  },
                  "name": "My Schedule",
                  "timezone": "America/Los_Angeles"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SchedulesCreatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "schedule": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "config": {
                      "rotations": [
                        {
                          "effective_from": "2021-08-17T13:28:57.801578Z",
                          "handover_start_at": "2021-08-17T13:28:57.801578Z",
                          "handovers": [
                            {
                              "interval": 1,
                              "interval_type": "daily"
                            }
                          ],
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layers": [
                            {
                              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                              "name": "Layer 1"
                            }
                          ],
                          "name": "Primary On-Call Schedule",
                          "users": [
                            {
                              "email": "lisa@incident.io",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Lisa Karlin Curtis",
                              "role": "viewer",
                              "slack_user_id": "U02AYNF2XJM"
                            }
                          ],
                          "working_interval": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ],
                          "working_intervals": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ]
                        }
                      ]
                    },
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "current_shifts": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "holidays_public_config": {
                      "country_codes": [
                        "GB",
                        "FR"
                      ]
                    },
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Primary On-Call Schedule",
                    "timezone": "Europe/London",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SchedulesCreateResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "Create Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/schedules/{id}": {
      "delete": {
        "description": "Archives a single schedule.",
        "operationId": "Schedules V2#Destroy",
        "parameters": [
          {
            "description": "Unique internal ID of the schedule",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique internal ID of the schedule",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          }
        },
        "summary": "Destroy Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Get a single schedule.",
        "operationId": "Schedules V2#Show",
        "parameters": [
          {
            "description": "Unique internal ID of the schedule",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique internal ID of the schedule",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "schedule": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "config": {
                      "rotations": [
                        {
                          "effective_from": "2021-08-17T13:28:57.801578Z",
                          "handover_start_at": "2021-08-17T13:28:57.801578Z",
                          "handovers": [
                            {
                              "interval": 1,
                              "interval_type": "daily"
                            }
                          ],
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layers": [
                            {
                              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                              "name": "Layer 1"
                            }
                          ],
                          "name": "Primary On-Call Schedule",
                          "users": [
                            {
                              "email": "lisa@incident.io",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Lisa Karlin Curtis",
                              "role": "viewer",
                              "slack_user_id": "U02AYNF2XJM"
                            }
                          ],
                          "working_interval": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ],
                          "working_intervals": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ]
                        }
                      ]
                    },
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "current_shifts": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "holidays_public_config": {
                      "country_codes": [
                        "GB",
                        "FR"
                      ]
                    },
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Primary On-Call Schedule",
                    "timezone": "Europe/London",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SchedulesShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Update a schedule.",
        "operationId": "Schedules V2#Update",
        "parameters": [
          {
            "description": "The schedule ID to update.",
            "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "The schedule ID to update.",
              "example": "01G0J1EXE7AXZ2C93K61WBPYEH",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "schedule": {
                  "annotations": {
                    "incident.io/terraform/version": "version-of-terraform"
                  },
                  "config": {
                    "rotations": [
                      {
                        "effective_from": "2021-08-17T13:28:57.801578Z",
                        "handover_start_at": "2021-08-17T13:28:57.801578Z",
                        "handovers": [
                          {
                            "interval": 1,
                            "interval_type": "daily"
                          }
                        ],
                        "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layers": [
                          {
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "name": "Layer 1"
                          }
                        ],
                        "name": "My Rotation",
                        "users": [
                          {
                            "email": "bob@example.com",
                            "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                            "slack_user_id": "USER123"
                          }
                        ],
                        "working_interval": [
                          {
                            "end_time": "17:00",
                            "start_time": "09:00",
                            "weekday": "tuesday"
                          }
                        ]
                      }
                    ]
                  },
                  "holidays_public_config": {
                    "country_codes": [
                      "abc123"
                    ]
                  },
                  "name": "My Schedule",
                  "timezone": "America/Los_Angeles"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SchedulesUpdatePayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "schedule": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "config": {
                      "rotations": [
                        {
                          "effective_from": "2021-08-17T13:28:57.801578Z",
                          "handover_start_at": "2021-08-17T13:28:57.801578Z",
                          "handovers": [
                            {
                              "interval": 1,
                              "interval_type": "daily"
                            }
                          ],
                          "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                          "layers": [
                            {
                              "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                              "name": "Layer 1"
                            }
                          ],
                          "name": "Primary On-Call Schedule",
                          "users": [
                            {
                              "email": "lisa@incident.io",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Lisa Karlin Curtis",
                              "role": "viewer",
                              "slack_user_id": "U02AYNF2XJM"
                            }
                          ],
                          "working_interval": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ],
                          "working_intervals": [
                            {
                              "end_time": "17:00",
                              "start_time": "09:00",
                              "weekday": "tuesday"
                            }
                          ]
                        }
                      ]
                    },
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "current_shifts": [
                      {
                        "end_at": "2021-08-17T13:28:57.801578Z",
                        "entry_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "fingerprint": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "layer_id": "01G0J1EXE7AXZ2C93K61WBPYNH",
                        "rotation_id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                        "start_at": "2021-08-17T13:28:57.801578Z",
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      }
                    ],
                    "holidays_public_config": {
                      "country_codes": [
                        "GB",
                        "FR"
                      ]
                    },
                    "id": "01G0J1EXE7AXZ2C93K61WBPYEH",
                    "name": "Primary On-Call Schedule",
                    "timezone": "Europe/London",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SchedulesUpdateResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Update Schedules V2",
        "tags": [
          "Schedules V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/users": {
      "get": {
        "description": "List users in your account.",
        "operationId": "Users V2#List",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Filter by email address",
            "example": "john.doe@incident.io",
            "in": "query",
            "name": "email",
            "schema": {
              "description": "Filter by email address",
              "example": "john.doe@incident.io",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Filter by Slack user ID",
            "example": "U12345678",
            "in": "query",
            "name": "slack_user_id",
            "schema": {
              "description": "Filter by Slack user ID",
              "example": "U12345678",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Integer number of records to return",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "schema": {
              "default": 25,
              "description": "Integer number of records to return",
              "example": 25,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "example": "01FDAG4SAP5TYPT98WGR2N7W91",
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  },
                  "users": [
                    {
                      "base_role": {
                        "description": "Elevated permissions for the customer success team.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Customer Success",
                        "slug": "customer-success"
                      },
                      "custom_roles": [
                        {
                          "description": "Elevated permissions for the customer success team.",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Customer Success",
                          "slug": "customer-success"
                        }
                      ],
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/UsersListResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "List Users V2",
        "tags": [
          "Users V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/users/{id}": {
      "get": {
        "description": "Get a single user.",
        "operationId": "Users V2#Show",
        "parameters": [
          {
            "description": "Unique identifier of the user",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier of the user",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "user": {
                    "base_role": {
                      "description": "Elevated permissions for the customer success team.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Customer Success",
                      "slug": "customer-success"
                    },
                    "custom_roles": [
                      {
                        "description": "Elevated permissions for the customer success team.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Customer Success",
                        "slug": "customer-success"
                      }
                    ],
                    "email": "lisa@incident.io",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Lisa Karlin Curtis",
                    "role": "viewer",
                    "slack_user_id": "U02AYNF2XJM"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/UsersShowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "Show Users V2",
        "tags": [
          "Users V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/workflows": {
      "get": {
        "description": "List all workflows",
        "operationId": "Workflows V2#ListWorkflows",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "workflows": [
                    {
                      "condition_groups": [
                        {
                          "conditions": [
                            {
                              "operation": {
                                "label": "Lawrence Jones",
                                "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                              },
                              "param_bindings": [
                                {
                                  "array_value": [
                                    {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  ],
                                  "value": {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                }
                              ],
                              "subject": {
                                "label": "Incident Severity",
                                "reference": "incident.severity"
                              }
                            }
                          ]
                        }
                      ],
                      "continue_on_step_error": true,
                      "delay": {
                        "conditions_apply_over_delay": false,
                        "for_seconds": 60
                      },
                      "expressions": [
                        {
                          "else_branch": {
                            "result": {
                              "array_value": [
                                {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              ],
                              "value": {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            }
                          },
                          "label": "Team Slack channel",
                          "operations": [
                            {
                              "branches": {
                                "branches": [
                                  {
                                    "condition_groups": [
                                      {
                                        "conditions": [
                                          {
                                            "operation": {
                                              "label": "Lawrence Jones",
                                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                            },
                                            "param_bindings": [
                                              {
                                                "array_value": [
                                                  {
                                                    "label": "Lawrence Jones",
                                                    "literal": "SEV123",
                                                    "reference": "incident.severity"
                                                  }
                                                ],
                                                "value": {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              }
                                            ],
                                            "subject": {
                                              "label": "Incident Severity",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "result": {
                                      "array_value": [
                                        {
                                          "label": "Lawrence Jones",
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  }
                                ],
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                }
                              },
                              "filter": {
                                "condition_groups": [
                                  {
                                    "conditions": [
                                      {
                                        "operation": {
                                          "label": "Lawrence Jones",
                                          "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                        },
                                        "param_bindings": [
                                          {
                                            "array_value": [
                                              {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            ],
                                            "value": {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          }
                                        ],
                                        "subject": {
                                          "label": "Incident Severity",
                                          "reference": "incident.severity"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "navigate": {
                                "reference": "1235",
                                "reference_label": "Teams"
                              },
                              "operation_type": "navigate",
                              "parse": {
                                "returns": {
                                  "array": true,
                                  "type": "IncidentStatus"
                                },
                                "source": "metadata.annotations[\"github.com/repo\"]"
                              },
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            }
                          ],
                          "reference": "abc123",
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "root_reference": "incident.status"
                        }
                      ],
                      "folder": "My folder 01",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "include_private_incidents": true,
                      "name": "My little workflow",
                      "once_for": [
                        {
                          "array": false,
                          "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                          "label": "Incident -\u003e Affected Team",
                          "type": "IncidentSeverity"
                        }
                      ],
                      "runs_from": "2021-08-17T13:28:57.801578Z",
                      "runs_on_incident_modes": [
                        "standard",
                        "test",
                        "retrospective"
                      ],
                      "runs_on_incidents": "newly_created",
                      "shortform": "page-the-ceo",
                      "state": "active",
                      "steps": [
                        {
                          "label": "PagerDuty Escalate",
                          "name": "pagerduty.escalate"
                        }
                      ],
                      "trigger": {
                        "label": "Incident Updated",
                        "name": "incident.updated"
                      },
                      "version": 3
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/WorkflowsListWorkflowsResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListWorkflows Workflows V2",
        "tags": [
          "Workflows V2"
        ],
        "x-public-api-version": "v2"
      },
      "post": {
        "description": "Create a new workflow",
        "operationId": "Workflows V2#CreateWorkflow",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "continue_on_step_error": true,
                "delay": {
                  "conditions_apply_over_delay": false,
                  "for_seconds": 60
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": "one_of",
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": "incident.severity"
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "root_reference": "incident.status"
                  }
                ],
                "folder": "My folder 01",
                "include_private_incidents": true,
                "name": "My little workflow",
                "once_for": [
                  "incident.url"
                ],
                "runs_on_incident_modes": [
                  "standard",
                  "test",
                  "retrospective"
                ],
                "runs_on_incidents": "newly_created",
                "shortform": "page-the-ceo",
                "state": "active",
                "steps": [
                  {
                    "for_each": "abc123",
                    "id": "abc123",
                    "name": "pagerduty.escalate",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ],
                "trigger": "incident.updated"
              },
              "schema": {
                "$ref": "#/components/schemas/WorkflowsCreateWorkflowPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "management_meta": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "source_url": "https://github.com/my-company/infrastructure"
                  },
                  "workflow": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "continue_on_step_error": true,
                    "delay": {
                      "conditions_apply_over_delay": false,
                      "for_seconds": 60
                    },
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "folder": "My folder 01",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "include_private_incidents": true,
                    "name": "My little workflow",
                    "once_for": [
                      {
                        "array": false,
                        "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                        "label": "Incident -\u003e Affected Team",
                        "type": "IncidentSeverity"
                      }
                    ],
                    "runs_from": "2021-08-17T13:28:57.801578Z",
                    "runs_on_incident_modes": [
                      "standard",
                      "test",
                      "retrospective"
                    ],
                    "runs_on_incidents": "newly_created",
                    "shortform": "page-the-ceo",
                    "state": "active",
                    "steps": [
                      {
                        "for_each": "abc123",
                        "id": "abc123",
                        "label": "PagerDuty Escalate",
                        "name": "pagerduty.escalate",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "trigger": {
                      "label": "Incident Updated",
                      "name": "incident.updated"
                    },
                    "version": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WorkflowsCreateWorkflowResultV2"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateWorkflow Workflows V2",
        "tags": [
          "Workflows V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v2/workflows/{id}": {
      "delete": {
        "description": "Archives a workflow",
        "operationId": "Workflows V2#DestroyWorkflow",
        "parameters": [
          {
            "description": "Unique identifier for the workflow",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the workflow",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "DestroyWorkflow Workflows V2",
        "tags": [
          "Workflows V2"
        ],
        "x-public-api-version": "v2"
      },
      "get": {
        "description": "Show a workflow by ID",
        "operationId": "Workflows V2#ShowWorkflow",
        "parameters": [
          {
            "description": "Unique identifier for the workflow",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Unique identifier for the workflow",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "management_meta": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "source_url": "https://github.com/my-company/infrastructure"
                  },
                  "workflow": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "continue_on_step_error": true,
                    "delay": {
                      "conditions_apply_over_delay": false,
                      "for_seconds": 60
                    },
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "folder": "My folder 01",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "include_private_incidents": true,
                    "name": "My little workflow",
                    "once_for": [
                      {
                        "array": false,
                        "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                        "label": "Incident -\u003e Affected Team",
                        "type": "IncidentSeverity"
                      }
                    ],
                    "runs_from": "2021-08-17T13:28:57.801578Z",
                    "runs_on_incident_modes": [
                      "standard",
                      "test",
                      "retrospective"
                    ],
                    "runs_on_incidents": "newly_created",
                    "shortform": "page-the-ceo",
                    "state": "active",
                    "steps": [
                      {
                        "for_each": "abc123",
                        "id": "abc123",
                        "label": "PagerDuty Escalate",
                        "name": "pagerduty.escalate",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "trigger": {
                      "label": "Incident Updated",
                      "name": "incident.updated"
                    },
                    "version": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WorkflowsShowWorkflowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowWorkflow Workflows V2",
        "tags": [
          "Workflows V2"
        ],
        "x-public-api-version": "v2"
      },
      "put": {
        "description": "Updates a workflow",
        "operationId": "Workflows V2#UpdateWorkflow",
        "parameters": [
          {
            "description": "ID of the workflow to update",
            "examples": {
              "default": {
                "summary": "default",
                "value": "01FCNDV6P870EA6S7TK1DSYDG0"
              }
            },
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of the workflow to update",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/terraform/version": "3.0.0"
                },
                "condition_groups": [
                  {
                    "conditions": [
                      {
                        "operation": "one_of",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ],
                        "subject": "incident.severity"
                      }
                    ]
                  }
                ],
                "continue_on_step_error": true,
                "delay": {
                  "conditions_apply_over_delay": false,
                  "for_seconds": 60
                },
                "expressions": [
                  {
                    "else_branch": {
                      "result": {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    },
                    "label": "Team Slack channel",
                    "operations": [
                      {
                        "branches": {
                          "branches": [
                            {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": "one_of",
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": "incident.severity"
                                    }
                                  ]
                                }
                              ],
                              "result": {
                                "array_value": [
                                  {
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            }
                          ],
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          }
                        },
                        "filter": {
                          "condition_groups": [
                            {
                              "conditions": [
                                {
                                  "operation": "one_of",
                                  "param_bindings": [
                                    {
                                      "array_value": [
                                        {
                                          "literal": "SEV123",
                                          "reference": "incident.severity"
                                        }
                                      ],
                                      "value": {
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ],
                                  "subject": "incident.severity"
                                }
                              ]
                            }
                          ]
                        },
                        "navigate": {
                          "reference": "catalog_attribute[\"01FCNDV6P870EA6S7TK1DSYD5H\"]"
                        },
                        "operation_type": "navigate",
                        "parse": {
                          "returns": {
                            "array": true,
                            "type": "IncidentStatus"
                          },
                          "source": "metadata.annotations[\"github.com/repo\"]"
                        }
                      }
                    ],
                    "reference": "abc123",
                    "root_reference": "incident.status"
                  }
                ],
                "folder": "My folder 01",
                "include_private_incidents": true,
                "name": "My little workflow",
                "once_for": [
                  "incident.url"
                ],
                "runs_on_incident_modes": [
                  "standard",
                  "test",
                  "retrospective"
                ],
                "runs_on_incidents": "newly_created",
                "shortform": "page-the-ceo",
                "state": "active",
                "steps": [
                  {
                    "for_each": "abc123",
                    "id": "abc123",
                    "name": "pagerduty.escalate",
                    "param_bindings": [
                      {
                        "array_value": [
                          {
                            "literal": "SEV123",
                            "reference": "incident.severity"
                          }
                        ],
                        "value": {
                          "literal": "SEV123",
                          "reference": "incident.severity"
                        }
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/WorkflowsUpdateWorkflowPayloadV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "management_meta": {
                    "annotations": {
                      "incident.io/terraform/version": "3.0.0"
                    },
                    "managed_by": "dashboard",
                    "source_url": "https://github.com/my-company/infrastructure"
                  },
                  "workflow": {
                    "condition_groups": [
                      {
                        "conditions": [
                          {
                            "operation": {
                              "label": "Lawrence Jones",
                              "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                            },
                            "param_bindings": [
                              {
                                "array_value": [
                                  {
                                    "label": "Lawrence Jones",
                                    "literal": "SEV123",
                                    "reference": "incident.severity"
                                  }
                                ],
                                "value": {
                                  "label": "Lawrence Jones",
                                  "literal": "SEV123",
                                  "reference": "incident.severity"
                                }
                              }
                            ],
                            "subject": {
                              "label": "Incident Severity",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "continue_on_step_error": true,
                    "delay": {
                      "conditions_apply_over_delay": false,
                      "for_seconds": 60
                    },
                    "expressions": [
                      {
                        "else_branch": {
                          "result": {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        },
                        "label": "Team Slack channel",
                        "operations": [
                          {
                            "branches": {
                              "branches": [
                                {
                                  "condition_groups": [
                                    {
                                      "conditions": [
                                        {
                                          "operation": {
                                            "label": "Lawrence Jones",
                                            "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                          },
                                          "param_bindings": [
                                            {
                                              "array_value": [
                                                {
                                                  "label": "Lawrence Jones",
                                                  "literal": "SEV123",
                                                  "reference": "incident.severity"
                                                }
                                              ],
                                              "value": {
                                                "label": "Lawrence Jones",
                                                "literal": "SEV123",
                                                "reference": "incident.severity"
                                              }
                                            }
                                          ],
                                          "subject": {
                                            "label": "Incident Severity",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "result": {
                                    "array_value": [
                                      {
                                        "label": "Lawrence Jones",
                                        "literal": "SEV123",
                                        "reference": "incident.severity"
                                      }
                                    ],
                                    "value": {
                                      "label": "Lawrence Jones",
                                      "literal": "SEV123",
                                      "reference": "incident.severity"
                                    }
                                  }
                                }
                              ],
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              }
                            },
                            "filter": {
                              "condition_groups": [
                                {
                                  "conditions": [
                                    {
                                      "operation": {
                                        "label": "Lawrence Jones",
                                        "value": "01FCQSP07Z74QMMYPDDGQB9FTG"
                                      },
                                      "param_bindings": [
                                        {
                                          "array_value": [
                                            {
                                              "label": "Lawrence Jones",
                                              "literal": "SEV123",
                                              "reference": "incident.severity"
                                            }
                                          ],
                                          "value": {
                                            "label": "Lawrence Jones",
                                            "literal": "SEV123",
                                            "reference": "incident.severity"
                                          }
                                        }
                                      ],
                                      "subject": {
                                        "label": "Incident Severity",
                                        "reference": "incident.severity"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "navigate": {
                              "reference": "1235",
                              "reference_label": "Teams"
                            },
                            "operation_type": "navigate",
                            "parse": {
                              "returns": {
                                "array": true,
                                "type": "IncidentStatus"
                              },
                              "source": "metadata.annotations[\"github.com/repo\"]"
                            },
                            "returns": {
                              "array": true,
                              "type": "IncidentStatus"
                            }
                          }
                        ],
                        "reference": "abc123",
                        "returns": {
                          "array": true,
                          "type": "IncidentStatus"
                        },
                        "root_reference": "incident.status"
                      }
                    ],
                    "folder": "My folder 01",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "include_private_incidents": true,
                    "name": "My little workflow",
                    "once_for": [
                      {
                        "array": false,
                        "key": "incident.custom_field[\"01FCNDV6P870EA6S7TK1DSYDG0\"]",
                        "label": "Incident -\u003e Affected Team",
                        "type": "IncidentSeverity"
                      }
                    ],
                    "runs_from": "2021-08-17T13:28:57.801578Z",
                    "runs_on_incident_modes": [
                      "standard",
                      "test",
                      "retrospective"
                    ],
                    "runs_on_incidents": "newly_created",
                    "shortform": "page-the-ceo",
                    "state": "active",
                    "steps": [
                      {
                        "for_each": "abc123",
                        "id": "abc123",
                        "label": "PagerDuty Escalate",
                        "name": "pagerduty.escalate",
                        "param_bindings": [
                          {
                            "array_value": [
                              {
                                "label": "Lawrence Jones",
                                "literal": "SEV123",
                                "reference": "incident.severity"
                              }
                            ],
                            "value": {
                              "label": "Lawrence Jones",
                              "literal": "SEV123",
                              "reference": "incident.severity"
                            }
                          }
                        ]
                      }
                    ],
                    "trigger": {
                      "label": "Incident Updated",
                      "name": "incident.updated"
                    },
                    "version": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/WorkflowsUpdateWorkflowResultV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateWorkflow Workflows V2",
        "tags": [
          "Workflows V2"
        ],
        "x-public-api-version": "v2"
      }
    },
    "/v3/catalog_entries": {
      "get": {
        "description": "List entries for a catalog type.",
        "operationId": "Catalog V3#ListEntries",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "query",
            "name": "catalog_type_id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "The integer number of records to return",
            "examples": {
              "default": {
                "summary": "default",
                "value": 25
              }
            },
            "in": "query",
            "name": "page_size",
            "required": true,
            "schema": {
              "default": 25,
              "description": "The integer number of records to return",
              "example": 25,
              "format": "int64",
              "maximum": 250,
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
            "examples": {
              "default": {
                "summary": "default",
                "value": "01FDAG4SAP5TYPT98WGR2N7W91"
              }
            },
            "in": "query",
            "name": "after",
            "schema": {
              "description": "An record's ID. This endpoint will return a list of records after this ID in relation to the API response order.",
              "example": "01FDAG4SAP5TYPT98WGR2N7W91",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entries": [
                    {
                      "aliases": [
                        "lawrence@incident.io",
                        "lawrence"
                      ],
                      "archived_at": "2021-08-17T14:28:57.801578Z",
                      "attribute_values": {
                        "abc123": {
                          "array_value": [
                            {
                              "label": "Lawrence Jones",
                              "literal": "SEV123"
                            }
                          ],
                          "value": {
                            "label": "Lawrence Jones",
                            "literal": "SEV123"
                          }
                        }
                      },
                      "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Primary On-call",
                      "rank": 3,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ],
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "pagination_meta": {
                    "after": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "page_size": 25
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogListEntriesResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListEntries Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      },
      "post": {
        "description": "Create an entry within the catalog. We support a maximum of 50,000 entries per type.\n\nIf you call this API with a payload where the external_id and catalog_type_id match an existing entry, the existing entry will be updated.",
        "operationId": "Catalog V3#CreateEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "literal": "SEV123"
                      }
                    ],
                    "value": {
                      "literal": "SEV123"
                    }
                  }
                },
                "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "name": "Primary On-call",
                "rank": 3
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogCreateEntryPayloadV3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogCreateEntryResultV3"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateEntry Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      }
    },
    "/v3/catalog_entries/{id}": {
      "delete": {
        "description": "Archives a catalog entry.",
        "operationId": "Catalog V3#DestroyEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "DestroyEntry Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      },
      "get": {
        "description": "Show a single catalog entry.",
        "operationId": "Catalog V3#ShowEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogShowEntryResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowEntry Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      },
      "put": {
        "description": "Updates an existing catalog entry.",
        "operationId": "Catalog V3#UpdateEntry",
        "parameters": [
          {
            "description": "ID of this catalog entry",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog entry",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "aliases": [
                  "lawrence@incident.io",
                  "lawrence"
                ],
                "attribute_values": {
                  "abc123": {
                    "array_value": [
                      {
                        "literal": "SEV123"
                      }
                    ],
                    "value": {
                      "literal": "SEV123"
                    }
                  }
                },
                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                "name": "Primary On-call",
                "rank": 3,
                "update_attributes": [
                  "abc123"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogUpdateEntryPayloadV3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_entry": {
                    "aliases": [
                      "lawrence@incident.io",
                      "lawrence"
                    ],
                    "archived_at": "2021-08-17T14:28:57.801578Z",
                    "attribute_values": {
                      "abc123": {
                        "array_value": [
                          {
                            "label": "Lawrence Jones",
                            "literal": "SEV123"
                          }
                        ],
                        "value": {
                          "label": "Lawrence Jones",
                          "literal": "SEV123"
                        }
                      }
                    },
                    "catalog_type_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "name": "Primary On-call",
                    "rank": 3,
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  },
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogUpdateEntryResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateEntry Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      }
    },
    "/v3/catalog_resources": {
      "get": {
        "description": "List available engine resources for the catalog.\n\nA resource represents a type of data that can be held within the catalog, so this\nendpoint can be used to see what attribute types can be used when updating the\nschema of a catalog type.\n",
        "operationId": "Catalog V3#ListResources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "resources": [
                    {
                      "category": "custom",
                      "description": "Boolean true or false value",
                      "label": "GitHub Repository",
                      "type": "CatalogEntry[\"01GVGYJSD39FRKVDWACK9NDS4E\"]",
                      "value_docstring": "Either the GraphQL node ID of the repository or a string of \u003cowner\u003e/\u003crepo\u003e, e.g. incident-io/website"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogListResourcesResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListResources Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      }
    },
    "/v3/catalog_types": {
      "get": {
        "description": "List all catalog types for an organisation, including those synced from external resources.",
        "operationId": "Catalog V3#ListTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_types": [
                    {
                      "annotations": {
                        "incident.io/catalog-importer/id": "id-of-config"
                      },
                      "categories": [
                        "issue-tracker"
                      ],
                      "color": "yellow",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Represents Kubernetes clusters that we run inside of GKE.",
                      "dynamic_resource_parameter": "abc123",
                      "estimated_count": 7,
                      "icon": "alert",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_editable": false,
                      "last_synced_at": "2021-08-17T13:28:57.801578Z",
                      "name": "Kubernetes Cluster",
                      "ranked": true,
                      "registry_type": "PagerDutyService",
                      "required_integrations": [
                        "pager_duty"
                      ],
                      "schema": {
                        "attributes": [
                          {
                            "array": false,
                            "backlink_attribute": "abc123",
                            "id": "01GW2G3V0S59R238FAHPDS1R66",
                            "mode": "api",
                            "name": "tier",
                            "path": [
                              {
                                "attribute_id": "abc123",
                                "attribute_name": "abc123"
                              }
                            ],
                            "type": "Custom[\"Service\"]"
                          }
                        ],
                        "version": 1
                      },
                      "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                      "type_name": "Custom[\"BackstageGroup\"]",
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogListTypesResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ListTypes Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      },
      "post": {
        "description": "Create a catalog type. The schema must be updated using the UpdateTypeSchema endpoint.",
        "operationId": "Catalog V3#CreateType",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "icon": "alert",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                "type_name": "Custom[\"BackstageGroup\"]"
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogCreateTypePayloadV3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogCreateTypeResultV3"
                }
              }
            },
            "description": "Created response."
          }
        },
        "summary": "CreateType Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      }
    },
    "/v3/catalog_types/{id}": {
      "delete": {
        "description": "Archives a catalog type and associated entries.",
        "operationId": "Catalog V3#DestroyType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          }
        },
        "summary": "DestroyType Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      },
      "get": {
        "description": "Show a single catalog type.",
        "operationId": "Catalog V3#ShowType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogShowTypeResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "ShowType Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      },
      "put": {
        "description": "Updates an existing catalog type. The schema must be updated using the UpdateTypeSchema endpoint.",
        "operationId": "Catalog V3#UpdateType",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "annotations": {
                  "incident.io/catalog-importer/id": "id-of-config"
                },
                "categories": [
                  "issue-tracker"
                ],
                "color": "yellow",
                "description": "Represents Kubernetes clusters that we run inside of GKE.",
                "icon": "alert",
                "name": "Kubernetes Cluster",
                "ranked": true,
                "source_repo_url": "https://github.com/my-company/incident-io-catalog"
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogUpdateTypePayloadV3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogUpdateTypeResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateType Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      }
    },
    "/v3/catalog_types/{id}/actions/update_schema": {
      "post": {
        "description": "Update an existing catalog types schema, adding or removing attributes.\n\nUpdating the schema is handled separately from creating and updating types, so that you don't\nhave to worry about dependencies between types. For example, if type A has an attribute that\nrelies on type B, you would have to create type B first.\n\nBy allowing the creation of types without a schema, they can be created in any order, but it\nmeans that you need to make a separate call to this endpoint to update the schema.",
        "operationId": "Catalog V3#UpdateTypeSchema",
        "parameters": [
          {
            "description": "ID of this catalog type",
            "example": "01FCNDV6P870EA6S7TK1DSYDG0",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "ID of this catalog type",
              "example": "01FCNDV6P870EA6S7TK1DSYDG0",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "attributes": [
                  {
                    "array": false,
                    "backlink_attribute": "abc123",
                    "id": "01GW2G3V0S59R238FAHPDS1R66",
                    "mode": "api",
                    "name": "tier",
                    "path": [
                      {
                        "attribute_id": "abc123"
                      }
                    ],
                    "type": "Custom[\"Service\"]"
                  }
                ],
                "version": 1
              },
              "schema": {
                "$ref": "#/components/schemas/CatalogUpdateTypeSchemaPayloadV3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "catalog_type": {
                    "annotations": {
                      "incident.io/catalog-importer/id": "id-of-config"
                    },
                    "categories": [
                      "issue-tracker"
                    ],
                    "color": "yellow",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Represents Kubernetes clusters that we run inside of GKE.",
                    "dynamic_resource_parameter": "abc123",
                    "estimated_count": 7,
                    "icon": "alert",
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "is_editable": false,
                    "last_synced_at": "2021-08-17T13:28:57.801578Z",
                    "name": "Kubernetes Cluster",
                    "ranked": true,
                    "registry_type": "PagerDutyService",
                    "required_integrations": [
                      "pager_duty"
                    ],
                    "schema": {
                      "attributes": [
                        {
                          "array": false,
                          "backlink_attribute": "abc123",
                          "id": "01GW2G3V0S59R238FAHPDS1R66",
                          "mode": "api",
                          "name": "tier",
                          "path": [
                            {
                              "attribute_id": "abc123",
                              "attribute_name": "abc123"
                            }
                          ],
                          "type": "Custom[\"Service\"]"
                        }
                      ],
                      "version": 1
                    },
                    "source_repo_url": "https://github.com/my-company/incident-io-catalog",
                    "type_name": "Custom[\"BackstageGroup\"]",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CatalogUpdateTypeSchemaResultV3"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "UpdateTypeSchema Catalog V3",
        "tags": [
          "Catalog V3"
        ],
        "x-public-api-version": "v3"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.incident.io"
    }
  ],
  "tags": [
    {
      "description": "Manage incident actions.\n\nThese endpoints have been deprecated in favour of Actions V2 and Follow-ups V2, as these\nconcepts have become increasingly separate.\n\nIncidents have two types of actions associated to them:\n\n- Actions, used during an incident response as ephemeral todo lists\n- Follow-ups, actions which are for after the incident and can be exported to external\n\tissue trackers\n\nYou can manage actions in the incident Slack channel with \u003ccode\u003e/incident actions\u003c/code\u003e, or on\nthe incident homepage.\n\nExporting follow-ups to external issue trackers can be done in the incident homepage.\n",
      "name": "Actions V1"
    },
    {
      "description": "Manage incident actions.\n\nIncident actions are used during an incident, to track work such as 'restart the database' or 'contact the customer'.\n\nYou can manage actions in the incident Slack channel with \u003ccode\u003e/incident actions\u003c/code\u003e, or on\nthe incident homepage.\n",
      "name": "Actions V2"
    },
    {
      "description": "View and manage alert attributes.\n\nAlert attributes are used to parse structured data from alerts coming in via alert sources.",
      "name": "Alert Attributes V2"
    },
    {
      "description": "Create alerts within incident.io.\n\nThe alerts API allows you to create alerts within incident.io by posting alert events. You\ncan use alerts to automatically trigger incidents.\n\nTo create an alert, you must first configure an alert source in the incident.io dashboard.\n",
      "name": "Alert Events V2"
    },
    {
      "description": "Create and manage alert routes.\n\nAlert routes take alerts from alert sources, filter them according to conditions, apply\ngrouping on alert attributes, then finally create:\n\n1. Incidents\n2. Escalations\n\nThese are best configured in the incident.io dashboard and exported via the UI to\nTerraform, as the configuration is complex.\n",
      "name": "Alert Routes V2"
    },
    {
      "description": "Configure your alert sources in incident.io.\n\nAlert sources are the systems that send alerts to incident.io, which can then be routed to the right people and teams.",
      "name": "Alert Sources V2"
    },
    {
      "description": "Manage and browse catalog resources.\n\nUse the incident.io catalog to track services, teams, product features and anything\nelse that helps build a map of your organisation. These different categories of thing\nbecome catalog types, and each instance (like a particular service or team) is a\ncatalog entry.\n\nEach type is made up of a series of attributes, and each attribute has a type. Types\ncan even have attributes that refer to other catalog types.\n\nWe automatically create catalog types when you connect an integration, such as GitHub\nrepositories or PagerDuty services and teams. You can use this API to create custom\ntypes, that are specifically tailored to your organisation.\n\nExamples might be a 'Service' type with an 'Alert channel' which you can point at a\nSlack channel, or 'Team' which specifies its 'Manager' and 'Technical Lead' as Slack\nusers. You can then use these types to create powerful new workflows.\n\nConsider using our official [catalog importer](https://github.com/incident-io/catalog-importer).\nIt can be used to sync catalog data from sources like local files or GitHub and push\nthem into the incident.io catalog without having to directly interact with our public API.\n",
      "name": "Catalog V2"
    },
    {
      "description": "Manage and browse catalog resources.\n\nUse the incident.io catalog to track services, teams, product features and anything\nelse that helps build a map of your organisation. These different categories of thing\nbecome catalog types, and each instance (like a particular service or team) is a\ncatalog entry.\n\nEach type is made up of a series of attributes, and each attribute has a type. Types\ncan even have attributes that refer to other catalog types.\n\nWe automatically create catalog types when you connect an integration, such as GitHub\nrepositories or PagerDuty services and teams. You can use this API to create custom\ntypes, that are specifically tailored to your organisation.\n\nExamples might be a 'Service' type with an 'Alert channel' which you can point at a\nSlack channel, or 'Team' which specifies its 'Manager' and 'Technical Lead' as Slack\nusers. You can then use these types to create powerful new workflows.\n\nConsider using our official [catalog importer](https://github.com/incident-io/catalog-importer).\nIt can be used to sync catalog data from sources like local files or GitHub and push\nthem into the incident.io catalog without having to directly interact with our public API.\n",
      "name": "Catalog V3"
    },
    {
      "description": "Manage custom field options.\n\nSingle- and multi-select custom fields have a list of all available options,\nwhich have a value, and a sort key. The value must be unique to the custom\nfield. For example, you might have an Incident Type custom field, with options\n\"Data breach\", \"Performance degradation\", \"API downtime\", etc.",
      "name": "Custom Field Options V1"
    },
    {
      "description": "Manage custom fields.\n\nCustom fields are used to attach metadata to incidents, which you can use when searching\nfor incidents in the dashboard, triggering workflows, building announcement rules or for\nyour own data needs.\n\nEach field has a type:\n\n- Single-select, single value selected from a predefined list of options (e.g. Detection Method)\n- Multi-select, as above but you can pick more than one option (e.g. Affected Teams)\n- Text, freeform text field (e.g. Customer ID)\n- Link, link URL that is synced to Slack bookmarks on the incident channel (e.g. External Status Page)\n- Number, integer or fractional numbers (e.g. # Customers Affected)\n\nWe may add more custom field types in the future - we'd love to hear any other types you'd like to use!\n",
      "name": "Custom Fields V1"
    },
    {
      "description": "Manage custom fields.\n\nCustom fields are used to attach metadata to incidents, which you can use when searching\nfor incidents in the dashboard, triggering workflows, building announcement rules or for\nyour own data needs.\n\nEach field has a type:\n\n- Single-select, single value selected from a predefined list of options (e.g. Detection Method)\n- Multi-select, as above but you can pick more than one option (e.g. Affected Teams)\n- Text, freeform text field (e.g. Customer ID)\n- Link, link URL that is synced to Slack bookmarks on the incident channel (e.g. External Status Page)\n- Number, integer or fractional numbers (e.g. # Customers Affected)\n\nWe may add more custom field types in the future - we'd love to hear any other types you'd like to use!\n",
      "name": "Custom Fields V2"
    },
    {
      "description": "Create and manage escalations.\n\nWith incident.io On-call you can create escalation paths that describe how a page should\nbe escalated to people and schedules, and create escalations that will execute those\npaths.\n",
      "name": "Escalations V2"
    },
    {
      "description": "Manage incident follow-ups.\n\nIncidents can have follow-ups associated with them, which track work that should be done\nafter an incident (e.g. improving some documentation, or upgrading a dependency). They can\nalso be exported to external issue trackers.\n\nYou can manage follow-ups in the incident Slack channel with \u003ccode\u003e/incident follow-ups\u003c/code\u003e, or on\nthe incident homepage.\n",
      "name": "Follow-ups V2"
    },
    {
      "description": "Create, list and delete incident attachments.\n\nIncident Attachments allows you to connect resources from external systems into incidents.\nExamples include: PagerDuty incidents and GitHub pull requests.\n",
      "name": "Incident Attachments V1"
    },
    {
      "description": "Manage private incident memberships",
      "name": "Incident Memberships V1"
    },
    {
      "description": "Manage incident roles.\n\nDuring an incident, you can assign responders to one of the incident roles that are\nconfigured in your organisation settings.\n\nEvery organisation will have a special 'lead' role, which signifies the incident lead or\ncommander. This role cannot be deleted, but can be renamed in the incident.io dashboard.\n",
      "name": "Incident Roles V1"
    },
    {
      "description": "Manage incident roles.\n\nDuring an incident, you can assign responders to one of the incident roles that are\nconfigured in your organisation settings.\n\nEvery organisation will have a special 'lead' role, which signifies the incident lead or\ncommander. This role cannot be deleted, but can be renamed in the incident.io dashboard.\n",
      "name": "Incident Roles V2"
    },
    {
      "description": "Manage incident statuses.\n\nEach incident has a status, picked from one of the statuses configured in your\norganisations settings.\n\nStatuses help communicate where an incident is in its lifecycle. You can use\nstatuses when filtering incidents in the dashboard, and in workflows and announcement\nrules.\n",
      "name": "Incident Statuses V1"
    },
    {
      "description": "View incident timestamps.\n\nEach incident has a number of timestamps; some being defaults that we set on\neach incident for you, and other being configured for your organisation within\nsettings.\n\nTimestamps help to communicate when a given action was taken for a specific\nincident, for example when it was reported, closed or fixed.\n",
      "name": "Incident Timestamps V2"
    },
    {
      "description": "View incident types.\n\nWith incident types enabled, you can tailor your process to the situation you're\nresponding to with different custom fields and roles for each incident type.\n",
      "name": "Incident Types V1"
    },
    {
      "description": "List incident updates.\n\nIncident Updates allows you to see all the updates that have been shared against a\nparticular incident. This will include any time that the Severity or Status of\nan incident changed, alongside any additional updates that were provided.\n",
      "name": "Incident Updates V2"
    },
    {
      "description": "Create and read incidents.\n\nIncidents are a core resource, on which many other resources (actions, etc) are created.\n\nCare should be taken around these endpoints, as automation that creates duplicate\nincidents can be distracting, and impact reporting.\n\nThe maximum page size that can be requested is 250.\n",
      "name": "Incidents V1"
    },
    {
      "description": "Create and read incidents.\n\nIncidents are a core resource, on which many other resources (actions, etc) are created.\n\nCare should be taken around these endpoints, as automation that creates duplicate\nincidents can be distracting, and impact reporting.\n",
      "name": "Incidents V2"
    },
    {
      "description": "Manage how resources are managed.\n\nAllows callers to set whether a resource is being managed externally, and where the source configuration is.\n",
      "name": "Managed Resources V2"
    },
    {
      "description": "View and manage schedules.\nManage your full schedule of on-call rotations, including the users and rotation configuration.\n",
      "name": "Schedules V2"
    },
    {
      "description": "Manage incident severities.\n\nEach incident has a severity, picked from one of the severities configured in your\norganisations settings.\n\nSeverities help categorise incidents, and communicate urgency/impact. You can use\nseverities when filtering incidents in the dashboard, and in workflows and announcement\nrules.\n",
      "name": "Severities V1"
    },
    {
      "description": "View users.\n\nUsers all have a single base role, and can be assigned multiple custom roles. They can be managed via your Slack workspace or SAML provider.\n",
      "name": "Users V2"
    },
    {
      "description": "Miscelaneous utility endpoints.\n\nCollection of utility functions that can help build integrations against this API.\n",
      "name": "Utilities V1"
    },
    {
      "description": "Manage workflows.\n\nWorkflows allow you to automate certain actions and behaviors based on specific triggers.",
      "name": "Workflows V2"
    },
    {
      "description": "Webhooks can be used to receive notifications when certain events occur in incident.io. This might be useful for annotating graphs in a monitoring tool with incidents, or keeping track of follow-ups in another system. Our webhooks are powered by \u003ca href=\"https://svix.com\" target=\"_blank\"\u003eSvix\u003c/a\u003e.\n\n## Getting started with webhooks\n\nTo start using webhooks, you’ll need to create a webhook endpoint. You can do this in the same way that you’d create any other endpoint in your application. If you’d like to play around with our webhooks, we’d recommend using \u003ca href=\"https://www.svix.com/play/\" target=\"_blank\"\u003eSvix play\u003c/a\u003e which allows you to set up an endpoint and inspect the payloads via their web interface. There are also other services (e.g. \u003ca href=\"https://ngrok.com/\" target=\"_blank\"\u003engrok\u003c/a\u003e) which have great debugging tools to help getting started with webhooks.\n\nOnce you have a webhook endpoint set up, you can head to \u003ca href=\"https://app.incident.io/settings/webhooks\" target=\"_blank\"\u003eSettings \u003e Webhooks\u003c/a\u003e to configure your endpoint. In here you'll be able to choose which types of events you'd like to recieve, send test events, see recent event deliveries, and retry any failed events.\n\n## Status codes, errors and retries\n\nWhen processing webhooks, please return a 2xx status code (e.g. `200 OK` or `204 No Content`). If the endpoint returns a non-2xx status code, we’ll try to resend the event with a backoff over the next 24 hours. If attempts to a specific endpoint repeatedly fail over a 5 day period, we’ll mark the endpoint as disabled and notify you via email. If you do miss some messages (e.g. due to unexpected downtime), Svix offer a number of options for [replaying messages](https://docs.svix.com/receiving/using-app-portal/replaying-messages) which you can access via \u003ca href=\"https://app.incident.io/settings/webhooks\" target=\"_blank\"\u003eSettings \u003e Webhooks\u003c/a\u003e.\n\n## Verifying webhooks\n\nIt’s important to know whether a webhook has come from incident.io, or a third party that might be trying to exploit a vulnerability. To avoid this, we send a `signature` in the header of our webhooks, which you can verify using the `Signing secret` from the webhook endpoint settings page. The webhooks we send will have three headers that you’ll want to look at:\n\n```json\n{\n  \"webhook-id\": \"123\",\n  \"webhook-timestamp\": 1676033031,\n  \"webhook-signature\": \"v1,g0hM9SsE+OTPJTGt/tmIKtSyZlE3uFJELVlNIOLJ1OE=\"\n}\n```\n\nThese are signed using a HMAC signature in the following format:\n\n```\n${webhook-id}.${webhook-timestamp}.${request_body}\n```\n\nYou can verify the signature either using the \u003ca href=\"https://docs.svix.com/receiving/verifying-payloads/how\" target=\"_blank\"\u003eSvix client libraries\u003c/a\u003e, or manually by following \u003ca href=\"https://docs.svix.com/receiving/verifying-payloads/how-manual\" target=\"_blank\"\u003ethese instructions\u003c/a\u003e.\n\n## Keeping another system in-line with incident.io\n\nA common use-case for webhooks is to keep another system up-to-date with everything that’s happening in incident.io. As we deliver webhooks individually over HTTPS, we cannot guarantee that they’ll be delivered in the correct order. That means that, to keep the other system up-to-date, we’d recommend that you build an application which:\n\n- Receives a webhook about INC-123\n- Makes a request to our public API to get the latest state of INC-123\n- Save that state to your system\n\nThis means you aren’t relying on the order in which you receive webhooks to make sure your system remains up-to-date.\n\n## Webhooks on private incidents\n\nIn general, we try to send webhooks with all the relevant information in the payload (e.g. the name, summary, status etc.). However, private incidents are the exception. For private incidents, we only send the ID of the resource that’s been changed. If your integration needs to access the full data, you’ll need to \u003ca href=\"https://help.incident.io/articles/3838115863-our-api\" target=\"_blank\"\u003ecreate an API Key\u003c/a\u003e that can view private incidents. You can then use that key to get the details about the specific incident or follow-up. This is to make sure we don’t leak information about private incidents to a system that shouldn’t have access to them.\n",
      "name": "Webhooks"
    },
    {
      "description": "To give you visibility over the changes that are made within your incident.io account, we use an audit log. Our audit log is powered by \u003ca href=\"https://workos.com\" target=\"_blank\"\u003eWorkOS\u003c/a\u003e. The log is available for customers on our [Enterprise plan](https://incident.io/pricing).\n\nThe audit log contains information about any configuration changes, as well as changes to a user's permissions (e.g. being given a new role, or access to a private incident).\n\nEach entry will have an actor (the person or system that made the change) and one or more targets (a thing that was modified by this change). It will also include the Location and User Agent of the actor, where applicable.\n\nEach entry will conform to a schema, which is documented here. Each entry also has a version, so that if our schema changes over time you’ll still be able to parse old events.\n\nWe’ll retain these entries for one year.\n\nAudit log entries start from 18 April, 2023 (there are no entries available from before that date) and are retained in WorkOS for 365 days.\n\n## Viewing your audit log\n\nYou can view your audit log via our [security settings](https://app.incident.io/settings/security) page.\n\nFrom there, you'll be able to:\n\n- View the entries via a web interface (filterable by target, event type, actor and date)\n- Export the entries for a given time period to a CSV\n- Set up a log stream to a provider of your choice (e.g. Splunk or an Amazon S3 bucket)\n\n## Understanding actors\n\nEach entry will have an actor associated with it, which is one of 6 types:\n\n### Users\n\nThis is for changes triggered by the actions of a particular user in your account.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"user\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Kelsey Mills\",\n    \"metadata\": {\n      \"user_base_role_slug\": \"admin\",\n      \"user_custom_role_slugs\": \"engineering,security\"\n    }\n  }\n```\n\n### API Keys\n\nThis is for changes triggered by an API key.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"api_key\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Lisa's development key\",\n    \"metadata\": {\n      \"api_key_roles\": \"incident_creator,global_access\"\n    }\n  }\n```\n\n### Integrations\n\nThis is for changes triggered by a system. Sometimes that will be a third party system (e.g. a user might be created\nvia Slack) or sometimes it might be something triggered from inside incident.io (e.g. a severity created as part of setup).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"system\",\n    \"id\": \"incident_setup\",\n    \"name\": \"incident.io (setup)\",\n    \"metadata\": {}\n  }\n```\n\n### Workflows\n\nThis is for changes triggered by a workflow: for example, a workflow that invites users to a private incident.\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"workflow\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Auto-invite security team to private incidents\",\n    \"metadata\": {}\n  }\n```\n\n### External resources\n\nThis is for changes triggered by a specific [external resource](https://api-docs.incident.io/tag/Incident-Attachments-V1) (also known as an attachment).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"external_resource\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"#1234 Increased API latency\",\n    \"metadata\": {\n      \"external_resource_type\": \"pager_duty_incident\",\n      \"external_resource_external_id\": \"q1234\"\n    }\n  }\n```\n\n### Alerts\n\nThis is for changes triggered by a specific alert (e.g. from Datadog or Grafana).\n\nAs an example:\n\n```\n\"actor\": {\n    \"type\": \"alert\",\n    \"id\": \"01G0J1EXE7AXZ2C93K61WBPYEH\",\n    \"name\": \"Staging: pod CPU high\",\n    \"metadata\": {\n      \"alert_source_id\": \"01HB0ZG3B0HM04RCXNSPV1EDYG\"\n    }\n  }\n```\n",
      "name": "Audit logs"
    }
  ],
  "x-webhooks": {
    "/x-audit-logs/alert_route.created.1": {
      "get": {
        "description": "This entry is created whenever an alert route is created",
        "operationId": "AlertRouteCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_route.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Production incidents",
                      "type": "alert_route"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertRouteCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/alert_route.deleted.1": {
      "get": {
        "description": "This entry is created whenever an alert route is deleted",
        "operationId": "AlertRouteDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_route.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Production incidents",
                      "type": "alert_route"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertRouteDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/alert_route.updated.1": {
      "get": {
        "description": "This entry is created whenever an alert route is updated",
        "operationId": "AlertRouteUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_route.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Production incidents",
                      "type": "alert_route"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertRouteUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/alert_schema.updated.1": {
      "get": {
        "description": "This entry is created whenever alert attributes are updated",
        "operationId": "AlertSchemaUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_schema.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Alert schema",
                      "type": "alert_schema"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertSchemaUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/alert_source_config.created.1": {
      "get": {
        "description": "This entry is created whenever an alert source is created",
        "operationId": "AlertSourceConfigCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_source_config.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Datadog alerts",
                      "type": "alert_source"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertSourceConfigCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/alert_source_config.deleted.1": {
      "get": {
        "description": "This entry is created whenever an alert source is deleted",
        "operationId": "AlertSourceConfigDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_source_config.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Datadog alerts",
                      "type": "alert_source"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertSourceConfigDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/alert_source_config.updated.1": {
      "get": {
        "description": "This entry is created whenever an alert source is updated",
        "operationId": "AlertSourceConfigUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "alert_source_config.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Datadog alerts",
                      "type": "alert_source"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAlertSourceConfigUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/announcement_rule.created.1": {
      "get": {
        "description": "This entry is created whenever a announcement rule is created",
        "operationId": "AnnouncementRuleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "announcement_rule.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#engineering",
                      "type": "announcement_rule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/announcement_rule.deleted.1": {
      "get": {
        "description": "This entry is created whenever a announcement rule is deleted",
        "operationId": "AnnouncementRuleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "announcement_rule.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#engineering",
                      "type": "announcement_rule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/announcement_rule.updated.1": {
      "get": {
        "description": "This entry is created whenever a announcement rule is updated",
        "operationId": "AnnouncementRuleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "announcement_rule.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#engineering",
                      "type": "announcement_rule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAnnouncementRuleUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/api_key.created.1": {
      "get": {
        "description": "This entry is created whenever a api key is created",
        "operationId": "ApiKeyCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "api_key.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Development API Key",
                      "type": "api_key"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/api_key.deleted.1": {
      "get": {
        "description": "This entry is created whenever a api key is deleted",
        "operationId": "ApiKeyDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "api_key.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Development API Key",
                      "type": "api_key"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsAPIKeyDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/catalog_type.created.1": {
      "get": {
        "description": "This entry is created whenever a catalog type is created",
        "operationId": "CatalogTypeCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "catalog_type.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Service",
                      "type": "catalog_type"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/catalog_type.deleted.1": {
      "get": {
        "description": "This entry is created whenever a catalog type is deleted",
        "operationId": "CatalogTypeDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "catalog_type.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Service",
                      "type": "catalog_type"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/catalog_type.updated.1": {
      "get": {
        "description": "This entry is created whenever a catalog type is updated",
        "operationId": "CatalogTypeUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "catalog_type.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Service",
                      "type": "catalog_type"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCatalogTypeUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/custom_field.created.1": {
      "get": {
        "description": "This entry is created whenever a custom field is created",
        "operationId": "CustomFieldCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "custom_field.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected teams",
                      "type": "custom_field"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/custom_field.deleted.1": {
      "get": {
        "description": "This entry is created whenever a custom field is deleted",
        "operationId": "CustomFieldDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "custom_field.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected teams",
                      "type": "custom_field"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/custom_field.updated.1": {
      "get": {
        "description": "This entry is created whenever a custom field is updated",
        "operationId": "CustomFieldUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "custom_field.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Affected teams",
                      "type": "custom_field"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsCustomFieldUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/debrief_invite_rule.created.1": {
      "get": {
        "description": "This entry is created whenever a debrief invite rule is created",
        "operationId": "DebriefInviteRuleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "debrief_invite_rule.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Invite founders for critical incidents",
                      "type": "debrief_invite_rule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsDebriefInviteRuleCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/debrief_invite_rule.deleted.1": {
      "get": {
        "description": "This entry is created whenever a debrief invite rule is deleted",
        "operationId": "DebriefInviteRuleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "debrief_invite_rule.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Invite founders for critical incidents",
                      "type": "debrief_invite_rule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsDebriefInviteRuleDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/debrief_invite_rule.updated.1": {
      "get": {
        "description": "This entry is created whenever a debrief invite rule is updated",
        "operationId": "DebriefInviteRuleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "debrief_invite_rule.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Invite founders for critical incidents",
                      "type": "debrief_invite_rule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsDebriefInviteRuleUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/escalation_path.created.1": {
      "get": {
        "description": "This entry is created whenever an escalation path is created",
        "operationId": "EscalationPathCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "escalation_path.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Critical incidents",
                      "type": "escalation_path"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsEscalationPathCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/escalation_path.deleted.1": {
      "get": {
        "description": "This entry is created whenever an escalation path is deleted",
        "operationId": "EscalationPathDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "escalation_path.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Critical incidents",
                      "type": "escalation_path"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsEscalationPathDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/escalation_path.updated.1": {
      "get": {
        "description": "This entry is created whenever an escalation path is updated",
        "operationId": "EscalationPathUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "escalation_path.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Critical incidents",
                      "type": "escalation_path"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsEscalationPathUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/follow_up_priority.created.1": {
      "get": {
        "description": "This entry is created whenever a follow up priority is created",
        "operationId": "FollowUpPriorityCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "follow_up_priority.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Low",
                      "type": "follow_up_priority"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/follow_up_priority.deleted.1": {
      "get": {
        "description": "This entry is created whenever a follow up priority is deleted",
        "operationId": "FollowUpPriorityDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "follow_up_priority.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Low",
                      "type": "follow_up_priority"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/follow_up_priority.updated.1": {
      "get": {
        "description": "This entry is created whenever a follow up priority is updated",
        "operationId": "FollowUpPriorityUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "follow_up_priority.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Low",
                      "type": "follow_up_priority"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsFollowUpPriorityUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/holiday_user_feed.created.1": {
      "get": {
        "description": "This entry is created whenever a holiday user feed is created",
        "operationId": "HolidayUserFeedCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "holiday_user_feed.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "US Team holidays",
                      "type": "holiday_user_feed"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsHolidayUserFeedCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/holiday_user_feed.deleted.1": {
      "get": {
        "description": "This entry is created whenever a holiday user feed is deleted",
        "operationId": "HolidayUserFeedDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "holiday_user_feed.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "US Team holidays",
                      "type": "holiday_user_feed"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsHolidayUserFeedDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/holiday_user_feed.updated.1": {
      "get": {
        "description": "This entry is created whenever a holiday user feed is updated",
        "operationId": "HolidayUserFeedUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "holiday_user_feed.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "US Team holidays",
                      "type": "holiday_user_feed"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsHolidayUserFeedUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_call_setting.updated.1": {
      "get": {
        "description": "This entry is created whenever an organisation's incident call settings are updated",
        "operationId": "IncidentCallSettingUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_call_setting.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Incident call settings",
                      "type": "incident_call_setting"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentCallSettingUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_duration_metric.created.1": {
      "get": {
        "description": "This entry is created whenever a incident duration metric is created",
        "operationId": "IncidentDurationMetricCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_duration_metric.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Time to resolve",
                      "type": "incident_duration_metric"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_duration_metric.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident duration metric is deleted",
        "operationId": "IncidentDurationMetricDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_duration_metric.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Time to resolve",
                      "type": "incident_duration_metric"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_duration_metric.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident duration metric is updated",
        "operationId": "IncidentDurationMetricUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_duration_metric.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Time to resolve",
                      "type": "incident_duration_metric"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentDurationMetricUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_role.created.1": {
      "get": {
        "description": "This entry is created whenever a incident role is created",
        "operationId": "IncidentRoleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_role.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Communications Lead",
                      "type": "incident_role"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_role.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident role is deleted",
        "operationId": "IncidentRoleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_role.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Communications Lead",
                      "type": "incident_role"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_role.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident role is updated",
        "operationId": "IncidentRoleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_role.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Communications Lead",
                      "type": "incident_role"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentRoleUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_status.created.1": {
      "get": {
        "description": "This entry is created whenever a incident status is created",
        "operationId": "IncidentStatusCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_status.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "incident_status"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_status.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident status is deleted",
        "operationId": "IncidentStatusDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_status.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "incident_status"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_status.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident status is updated",
        "operationId": "IncidentStatusUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_status.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "incident_status"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentStatusUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_timestamp.created.1": {
      "get": {
        "description": "This entry is created whenever a incident timestamp is created",
        "operationId": "IncidentTimestampCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_timestamp.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Fixed at",
                      "type": "incident_timestamp"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_timestamp.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident timestamp is deleted",
        "operationId": "IncidentTimestampDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_timestamp.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Fixed at",
                      "type": "incident_timestamp"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_timestamp.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident timestamp is updated",
        "operationId": "IncidentTimestampUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_timestamp.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Fixed at",
                      "type": "incident_timestamp"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTimestampUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_type.created.1": {
      "get": {
        "description": "This entry is created whenever a incident type is created",
        "operationId": "IncidentTypeCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_type.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "incident_type"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_type.deleted.1": {
      "get": {
        "description": "This entry is created whenever a incident type is deleted",
        "operationId": "IncidentTypeDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_type.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "incident_type"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/incident_type.updated.1": {
      "get": {
        "description": "This entry is created whenever a incident type is updated",
        "operationId": "IncidentTypeUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "incident_type.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "incident_type"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIncidentTypeUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/integration.installed.1": {
      "get": {
        "description": "This entry is created whenever an integration is installed",
        "operationId": "IntegrationInstalledV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "integration.installed",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "github",
                      "name": "Github",
                      "type": "integration"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationInstalledV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/integration.uninstalled.1": {
      "get": {
        "description": "This entry is created whenever an integration is uninstalled",
        "operationId": "IntegrationUninstalledV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "integration.uninstalled",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "github",
                      "name": "Github",
                      "type": "integration"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsIntegrationUninstalledV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/internal_status_page.created.1": {
      "get": {
        "description": "This entry is created whenever an internal status page is created",
        "operationId": "InternalStatusPageCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "internal_status_page.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "internal_status_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/internal_status_page.deleted.1": {
      "get": {
        "description": "This entry is created whenever an internal status page is deleted",
        "operationId": "InternalStatusPageDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "internal_status_page.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "internal_status_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/internal_status_page.updated.1": {
      "get": {
        "description": "This entry is created whenever an internal status page has its configuration updated",
        "operationId": "InternalStatusPageUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "internal_status_page.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "internal_status_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsInternalStatusPageUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/nudge.created.1": {
      "get": {
        "description": "This entry is created whenever a nudge is created",
        "operationId": "NudgeCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "nudge.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Reminder to take a break",
                      "type": "nudge"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsNudgeCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/nudge.deleted.1": {
      "get": {
        "description": "This entry is created whenever a nudge is deleted",
        "operationId": "NudgeDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "nudge.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Reminder to take a break",
                      "type": "nudge"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsNudgeDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/nudge.updated.1": {
      "get": {
        "description": "This entry is created whenever a nudge is updated",
        "operationId": "NudgeUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "nudge.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Reminder to take a break",
                      "type": "nudge"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsNudgeUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/policy.created.1": {
      "get": {
        "description": "This entry is created whenever a policy is created",
        "operationId": "PolicyCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "policy.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Follow-ups must be closed within 3 weeks",
                      "type": "policy"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/policy.deleted.1": {
      "get": {
        "description": "This entry is created whenever a policy is deleted",
        "operationId": "PolicyDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "policy.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Follow-ups must be closed within 3 weeks",
                      "type": "policy"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/policy.updated.1": {
      "get": {
        "description": "This entry is created whenever a policy is updated",
        "operationId": "PolicyUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "policy.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Follow-ups must be closed within 3 weeks",
                      "type": "policy"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPolicyUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/post_incident_task.created.1": {
      "get": {
        "description": "This entry is created whenever a post-incident task is created",
        "operationId": "PostIncidentTaskCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "post_incident_task.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostIncidentTaskCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/post_incident_task.deleted.1": {
      "get": {
        "description": "This entry is created whenever a post-incident task is deleted",
        "operationId": "PostIncidentTaskDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "post_incident_task.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostIncidentTaskDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/post_incident_task.updated.1": {
      "get": {
        "description": "This entry is created whenever a post-incident task is updated",
        "operationId": "PostIncidentTaskUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "post_incident_task.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostIncidentTaskUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_section.created.1": {
      "get": {
        "description": "This entry is created whenever a postmortem template section is created",
        "operationId": "PostmortemSectionCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_section.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemSectionCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_section.created.2": {
      "get": {
        "description": "This entry is created whenever a postmortem template section is created",
        "operationId": "PostmortemSectionCreatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_section.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "follow_ups",
                      "type": "postmortem_template_section"
                    }
                  ],
                  "version": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemSectionCreatedV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_section.deleted.1": {
      "get": {
        "description": "This entry is created whenever a postmortem template section is deleted",
        "operationId": "PostmortemSectionDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_section.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemSectionDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_section.deleted.2": {
      "get": {
        "description": "This entry is created whenever a postmortem template section is deleted",
        "operationId": "PostmortemSectionDeletedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_section.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "follow_ups",
                      "type": "postmortem_template_section"
                    }
                  ],
                  "version": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemSectionDeletedV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_section.updated.1": {
      "get": {
        "description": "This entry is created whenever a postmortem template section is updated",
        "operationId": "PostmortemSectionUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_section.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemSectionUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_section.updated.2": {
      "get": {
        "description": "This entry is created whenever a postmortem template section is updated",
        "operationId": "PostmortemSectionUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_section.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "follow_ups",
                      "type": "postmortem_template_section"
                    }
                  ],
                  "version": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemSectionUpdatedV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_template.created.1": {
      "get": {
        "description": "This entry is created whenever a postmortem template is created",
        "operationId": "PostmortemTemplateCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_template.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemTemplateCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_template.created.2": {
      "get": {
        "description": "This entry is created whenever a postmortem template is created",
        "operationId": "PostmortemTemplateCreatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_template.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Root cause analysis (RCA)",
                      "type": "postmortem_template"
                    }
                  ],
                  "version": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemTemplateCreatedV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_template.deleted.1": {
      "get": {
        "description": "This entry is created whenever a postmortem template is deleted",
        "operationId": "PostmortemTemplateDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_template.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemTemplateDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_template.deleted.2": {
      "get": {
        "description": "This entry is created whenever a postmortem template is deleted",
        "operationId": "PostmortemTemplateDeletedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_template.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Root cause analysis (RCA)",
                      "type": "postmortem_template"
                    }
                  ],
                  "version": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemTemplateDeletedV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_template.updated.1": {
      "get": {
        "description": "This entry is created whenever a postmortem template is updated",
        "operationId": "PostmortemTemplateUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_template.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Schedule a debrief",
                      "type": "post_incident_task"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemTemplateUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/postmortem_template.updated.2": {
      "get": {
        "description": "This entry is created whenever a postmortem template is updated",
        "operationId": "PostmortemTemplateUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "postmortem_template.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Root cause analysis (RCA)",
                      "type": "postmortem_template"
                    }
                  ],
                  "version": 2
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPostmortemTemplateUpdatedV2"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident.access_attempted.1": {
      "get": {
        "description": "This entry is created whenever someone attempts to access a private incident.",
        "operationId": "PrivateIncidentAccessAttemptedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "private_incident.access_attempted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "metadata": {
                    "outcome": "granted"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessAttemptedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident.access_requested.1": {
      "get": {
        "description": "This entry is created whenever someone requests access to a private incident.",
        "operationId": "PrivateIncidentAccessRequestedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "private_incident.access_requested",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentAccessRequestedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident_membership.granted.1": {
      "get": {
        "description": "This entry is created whenever someone is granted access to a private incident. If they have the 'manage private incidents' permission, then it'll appear that the system has given them access to the incident.",
        "operationId": "PrivateIncidentMembershipGrantedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "private_incident_membership.granted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    },
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipGrantedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/private_incident_membership.revoked.1": {
      "get": {
        "description": "This entry is created whenever someone's access to a private incident is revoked.",
        "operationId": "PrivateIncidentMembershipRevokedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "private_incident_membership.revoked",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    },
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "#INC-123 The website is slow",
                      "type": "incident"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsPrivateIncidentMembershipRevokedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/rbac_role.created.1": {
      "get": {
        "description": "This entry is created whenever a rbac role is created",
        "operationId": "RbacRoleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "rbac_role.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Engineering",
                      "type": "rbac_role"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/rbac_role.deleted.1": {
      "get": {
        "description": "This entry is created whenever a rbac role is deleted",
        "operationId": "RbacRoleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "rbac_role.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Engineering",
                      "type": "rbac_role"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/rbac_role.updated.1": {
      "get": {
        "description": "This entry is created whenever a rbac role is updated",
        "operationId": "RbacRoleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "rbac_role.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Engineering",
                      "type": "rbac_role"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsRbacRoleUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/schedule.created.1": {
      "get": {
        "description": "This entry is created whenever a schedule is created",
        "operationId": "ScheduleCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "schedule.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "On-call",
                      "type": "schedule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScheduleCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/schedule.deleted.1": {
      "get": {
        "description": "This entry is created whenever a schedule is deleted",
        "operationId": "ScheduleDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "schedule.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "On-call",
                      "type": "schedule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScheduleDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/schedule.updated.1": {
      "get": {
        "description": "This entry is created whenever a schedule is updated",
        "operationId": "ScheduleUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "schedule.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "On-call",
                      "type": "schedule"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScheduleUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/schedule_override.created.1": {
      "get": {
        "description": "This entry is created whenever a schedule override is created",
        "operationId": "ScheduleOverrideCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "schedule_override.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Override for Urgent Support",
                      "type": "schedule_override"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScheduleOverrideCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/schedule_override.deleted.1": {
      "get": {
        "description": "This entry is created whenever a schedule override is deleted",
        "operationId": "ScheduleOverrideDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "schedule_override.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Override for Urgent Support",
                      "type": "schedule_override"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScheduleOverrideDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/schedule_override.updated.1": {
      "get": {
        "description": "This entry is created whenever a schedule override is updated",
        "operationId": "ScheduleOverrideUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "schedule_override.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Override for Urgent Support",
                      "type": "schedule_override"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScheduleOverrideUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/scim_group.role_mappings_updated.1": {
      "get": {
        "description": "This entry is created whenever a SCIM group is mapped to a new RBAC role",
        "operationId": "ScimGroupRoleMappingsUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "scim_group.role_mappings_updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "metadata": {
                    "after_base_role_slug": "owner",
                    "after_custom_role_slugs": "engineering,data",
                    "before_base_role_slug": "admin",
                    "before_custom_role_slugs": "engineering,security"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Security",
                      "type": "scim_group"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsScimGroupRoleMappingsUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/severity.created.1": {
      "get": {
        "description": "This entry is created whenever a severity is created",
        "operationId": "SeverityCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "severity.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "type": "severity"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/severity.deleted.1": {
      "get": {
        "description": "This entry is created whenever a severity is deleted",
        "operationId": "SeverityDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "severity.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "type": "severity"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/severity.updated.1": {
      "get": {
        "description": "This entry is created whenever a severity is updated",
        "operationId": "SeverityUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "severity.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "type": "severity"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsSeverityUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page.created.1": {
      "get": {
        "description": "This entry is created whenever a status page is created",
        "operationId": "StatusPageCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "status_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page.deleted.1": {
      "get": {
        "description": "This entry is created whenever a status page is deleted",
        "operationId": "StatusPageDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "status_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page.updated.1": {
      "get": {
        "description": "This entry is created whenever a status page has its configuration updated",
        "operationId": "StatusPageUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Public Page",
                      "type": "status_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_sub_page.created.1": {
      "get": {
        "description": "This entry is created whenever a status page sub-page is created",
        "operationId": "StatusPageSubPageCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page_sub_page.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Superpayments France",
                      "type": "status_page_sub_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageSubPageCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_sub_page.deleted.1": {
      "get": {
        "description": "This entry is created whenever a status page sub-page is deleted",
        "operationId": "StatusPageSubPageDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page_sub_page.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Superpayments France",
                      "type": "status_page_sub_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageSubPageDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_sub_page.updated.1": {
      "get": {
        "description": "This entry is created whenever a status page sub-page has its configuration updated",
        "operationId": "StatusPageSubPageUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page_sub_page.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Superpayments France",
                      "type": "status_page_sub_page"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageSubPageUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_template.created.1": {
      "get": {
        "description": "This entry is created whenever a status page template is created",
        "operationId": "StatusPageTemplateCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page_template.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "status_page_template"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_template.deleted.1": {
      "get": {
        "description": "This entry is created whenever a status page template is deleted",
        "operationId": "StatusPageTemplateDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page_template.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "status_page_template"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/status_page_template.updated.1": {
      "get": {
        "description": "This entry is created whenever a status page template is updated",
        "operationId": "StatusPageTemplateUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "status_page_template.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Investigating",
                      "type": "status_page_template"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsStatusPageTemplateUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.created.1": {
      "get": {
        "description": "This entry is created whenever a user is created",
        "operationId": "UserCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "user.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.deactivated.1": {
      "get": {
        "description": "This entry is created whenever a user is deactivated",
        "operationId": "UserDeactivatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "user.deactivated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserDeactivatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.reinstated.1": {
      "get": {
        "description": "This entry is created when a user is reinstated after being deactivated",
        "operationId": "UserReinstatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "user.reinstated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserReinstatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.role_memberships_updated.1": {
      "get": {
        "description": "This entry is created whenever a user's role memberships are changed.",
        "operationId": "UserRoleMembershipsUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "user.role_memberships_updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "metadata": {
                    "after_base_role_slug": "owner",
                    "after_custom_role_slugs": "engineering,data",
                    "before_base_role_slug": "admin",
                    "before_custom_role_slugs": "engineering,security"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserRoleMembershipsUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/user.updated.1": {
      "get": {
        "description": "This entry is created whenever a user is updated",
        "operationId": "UserUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "user.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Bob the builder",
                      "type": "user"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsUserUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/workflow.created.1": {
      "get": {
        "description": "This entry is created whenever a workflow is created",
        "operationId": "WorkflowCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "workflow.created",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Nudge to write a postmortem",
                      "type": "workflow"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowCreatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/workflow.deleted.1": {
      "get": {
        "description": "This entry is created whenever a workflow is deleted",
        "operationId": "WorkflowDeletedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "workflow.deleted",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Nudge to write a postmortem",
                      "type": "workflow"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowDeletedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-audit-logs/workflow.updated.1": {
      "get": {
        "description": "This entry is created whenever a workflow is updated",
        "operationId": "WorkflowUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": "workflow.updated",
                  "actor": {
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "metadata": {
                      "user_base_role_slug": "admin",
                      "user_custom_role_slugs": "engineering,security"
                    },
                    "name": "John Doe",
                    "type": "user"
                  },
                  "context": {
                    "location": "1.2.3.4",
                    "user_agent": "Chrome/91.0.4472.114"
                  },
                  "occurred_at": "2021-08-17T13:28:57.801578Z",
                  "targets": [
                    {
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Nudge to write a postmortem",
                      "type": "workflow"
                    }
                  ],
                  "version": 1
                },
                "schema": {
                  "$ref": "#/components/schemas/AuditLogsWorkflowUpdatedV1"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Audit logs"
        ]
      }
    },
    "/x-webhooks/private_incident.action_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is created.",
        "operationId": "PrivateIncidentActionCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.action_created_v1",
                  "private_incident.action_created_v1": {
                    "id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentActionCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.action_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is updated.",
        "operationId": "PrivateIncidentActionUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.action_updated_v1",
                  "private_incident.action_updated_v1": {
                    "id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentActionUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.follow_up_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is created.",
        "operationId": "PrivateIncidentFollowUpCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.follow_up_created_v1",
                  "private_incident.follow_up_created_v1": {
                    "id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentFollowUpCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.follow_up_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up for a private incident is updated.",
        "operationId": "PrivateIncidentFollowUpUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.follow_up_updated_v1",
                  "private_incident.follow_up_updated_v1": {
                    "id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentFollowUpUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.incident_created_v2": {
      "get": {
        "description": "This webhook is emitted whenever a new private incident is created.",
        "operationId": "PrivateIncidentIncidentCreatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.incident_created_v2",
                  "private_incident.incident_created_v2": {
                    "id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentIncidentCreatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.incident_updated_v2": {
      "get": {
        "description": "This webhook is emitted whenever a private incident is updated.",
        "operationId": "PrivateIncidentIncidentUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.incident_updated_v2",
                  "private_incident.incident_updated_v2": {
                    "id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentIncidentUpdatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.membership_granted_v1": {
      "get": {
        "description": "This webhook is emitted whenever a user is given access to a private incident.",
        "operationId": "PrivateIncidentMembershipGrantedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.membership_granted_v1",
                  "private_incident.membership_granted_v1": {
                    "actor_user_id": "abc123",
                    "incident_id": "abc123",
                    "user_id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentMembershipGrantedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/private_incident.membership_revoked_v1": {
      "get": {
        "description": "This webhook is emitted whenever a user's access to a private incident is revoked.",
        "operationId": "PrivateIncidentMembershipRevokedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "private_incident.membership_revoked_v1",
                  "private_incident.membership_revoked_v1": {
                    "actor_user_id": "abc123",
                    "incident_id": "abc123",
                    "user_id": "abc123"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PrivateIncidentMembershipRevokedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.action_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is created.",
        "operationId": "PublicIncidentActionCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.action_created_v1",
                  "public_incident.action_created_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentActionCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.action_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is updated.",
        "operationId": "PublicIncidentActionUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.action_updated_v1",
                  "public_incident.action_updated_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentActionUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.follow_up_created_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is created.",
        "operationId": "PublicIncidentFollowUpCreatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.follow_up_created_v1",
                  "public_incident.follow_up_created_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentFollowUpCreatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.follow_up_updated_v1": {
      "get": {
        "description": "This webhook is emitted whenever a follow-up is updated.",
        "operationId": "PublicIncidentFollowUpUpdatedV1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.follow_up_updated_v1",
                  "public_incident.follow_up_updated_v1": {
                    "assignee": {
                      "email": "lisa@incident.io",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Lisa Karlin Curtis",
                      "role": "viewer",
                      "slack_user_id": "U02AYNF2XJM"
                    },
                    "completed_at": "2021-08-17T13:28:57.801578Z",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "description": "Call the fire brigade",
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "follow_up": true,
                    "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "incident_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                    "status": "outstanding",
                    "updated_at": "2021-08-17T13:28:57.801578Z"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentFollowUpUpdatedV1ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.incident_created_v2": {
      "get": {
        "description": "This webhook is emitted whenever a new incident is created.",
        "operationId": "PublicIncidentIncidentCreatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.incident_created_v2",
                  "public_incident.incident_created_v2": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "has_debrief": false,
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "related_incidents": [
                      "INC-237"
                    ],
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentIncidentCreatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.incident_status_updated_v2": {
      "get": {
        "description": "This webhook is emitted whenever an incident's status changes.",
        "operationId": "PublicIncidentIncidentStatusUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.incident_status_updated_v2",
                  "public_incident.incident_status_updated_v2": {
                    "incident": {
                      "call_url": "https://zoom.us/foo",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "creator": {
                        "api_key": {
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "My test API key"
                        },
                        "user": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        }
                      },
                      "custom_field_entries": [
                        {
                          "custom_field": {
                            "description": "Which team is impacted by this issue",
                            "field_type": "single_select",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Affected Team",
                            "options": [
                              {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              }
                            ]
                          },
                          "values": [
                            {
                              "value_catalog_entry": {
                                "aliases": [
                                  "lawrence@incident.io",
                                  "lawrence"
                                ],
                                "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "name": "Primary On-call"
                              },
                              "value_link": "https://google.com/",
                              "value_numeric": "123.456",
                              "value_option": {
                                "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                                "sort_key": 10,
                                "value": "Product"
                              },
                              "value_text": "This is my text field, I hope you like it"
                            }
                          ]
                        }
                      ],
                      "duration_metrics": [
                        {
                          "duration_metric": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Lasted"
                          },
                          "value_seconds": 1
                        }
                      ],
                      "external_issue_reference": {
                        "issue_name": "INC-123",
                        "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                        "provider": "asana"
                      },
                      "has_debrief": false,
                      "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                      "incident_role_assignments": [
                        {
                          "assignee": {
                            "email": "lisa@incident.io",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "name": "Lisa Karlin Curtis",
                            "role": "viewer",
                            "slack_user_id": "U02AYNF2XJM"
                          },
                          "role": {
                            "created_at": "2021-08-17T13:28:57.801578Z",
                            "description": "The person currently coordinating the incident",
                            "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                            "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                            "name": "Incident Lead",
                            "required": false,
                            "role_type": "lead",
                            "shortform": "lead",
                            "updated_at": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_status": {
                        "category": "triage",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                        "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                        "name": "Closed",
                        "rank": 4,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "incident_timestamp_values": [
                        {
                          "incident_timestamp": {
                            "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                            "name": "Impact started",
                            "rank": 1
                          },
                          "value": {
                            "value": "2021-08-17T13:28:57.801578Z"
                          }
                        }
                      ],
                      "incident_type": {
                        "create_in_triage": "always",
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Customer facing production outages",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "is_default": false,
                        "name": "Production Outage",
                        "private_incidents_only": false,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "mode": "standard",
                      "name": "Our database is sad",
                      "permalink": "https://app.incident.io/incidents/123",
                      "postmortem_document_url": "https://docs.google.com/my_doc_id",
                      "reference": "INC-123",
                      "severity": {
                        "created_at": "2021-08-17T13:28:57.801578Z",
                        "description": "Issues with **low impact**.",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Minor",
                        "rank": 1,
                        "updated_at": "2021-08-17T13:28:57.801578Z"
                      },
                      "slack_channel_id": "C02AW36C1M5",
                      "slack_channel_name": "inc-165-green-parrot",
                      "slack_team_id": "T02A1FSLE8J",
                      "summary": "Our database is really really sad, and we don't know why yet.",
                      "updated_at": "2021-08-17T13:28:57.801578Z",
                      "visibility": "public",
                      "workload_minutes_late": 40.7,
                      "workload_minutes_sleeping": 0,
                      "workload_minutes_total": 60.7,
                      "workload_minutes_working": 20
                    },
                    "message": "We're working on a fix, hoping to ship in the next 30 minutes",
                    "new_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "previous_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentIncidentStatusUpdatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/x-webhooks/public_incident.incident_updated_v2": {
      "get": {
        "description": "This webhook is emitted whenever an incident is updated.",
        "operationId": "PublicIncidentIncidentUpdatedV2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "event_type": "public_incident.incident_updated_v2",
                  "public_incident.incident_updated_v2": {
                    "call_url": "https://zoom.us/foo",
                    "created_at": "2021-08-17T13:28:57.801578Z",
                    "creator": {
                      "api_key": {
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "My test API key"
                      },
                      "user": {
                        "email": "lisa@incident.io",
                        "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                        "name": "Lisa Karlin Curtis",
                        "role": "viewer",
                        "slack_user_id": "U02AYNF2XJM"
                      }
                    },
                    "custom_field_entries": [
                      {
                        "custom_field": {
                          "description": "Which team is impacted by this issue",
                          "field_type": "single_select",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Affected Team",
                          "options": [
                            {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            }
                          ]
                        },
                        "values": [
                          {
                            "value_catalog_entry": {
                              "aliases": [
                                "lawrence@incident.io",
                                "lawrence"
                              ],
                              "external_id": "761722cd-d1d7-477b-ac7e-90f9e079dc33",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "name": "Primary On-call"
                            },
                            "value_link": "https://google.com/",
                            "value_numeric": "123.456",
                            "value_option": {
                              "custom_field_id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                              "sort_key": 10,
                              "value": "Product"
                            },
                            "value_text": "This is my text field, I hope you like it"
                          }
                        ]
                      }
                    ],
                    "duration_metrics": [
                      {
                        "duration_metric": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Lasted"
                        },
                        "value_seconds": 1
                      }
                    ],
                    "external_issue_reference": {
                      "issue_name": "INC-123",
                      "issue_permalink": "https://linear.app/incident-io/issue/INC-1609/find-copywriter-to-write-up",
                      "provider": "asana"
                    },
                    "has_debrief": false,
                    "id": "01FDAG4SAP5TYPT98WGR2N7W91",
                    "incident_role_assignments": [
                      {
                        "assignee": {
                          "email": "lisa@incident.io",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "name": "Lisa Karlin Curtis",
                          "role": "viewer",
                          "slack_user_id": "U02AYNF2XJM"
                        },
                        "role": {
                          "created_at": "2021-08-17T13:28:57.801578Z",
                          "description": "The person currently coordinating the incident",
                          "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                          "instructions": "Take point on the incident; Make sure people are clear on responsibilities",
                          "name": "Incident Lead",
                          "required": false,
                          "role_type": "lead",
                          "shortform": "lead",
                          "updated_at": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_status": {
                      "category": "triage",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Impact has been **fully mitigated**, and we're ready to learn from this incident.",
                      "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                      "name": "Closed",
                      "rank": 4,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "incident_timestamp_values": [
                      {
                        "incident_timestamp": {
                          "id": "01FCNDV6P870EA6S7TK1DSYD5H",
                          "name": "Impact started",
                          "rank": 1
                        },
                        "value": {
                          "value": "2021-08-17T13:28:57.801578Z"
                        }
                      }
                    ],
                    "incident_type": {
                      "create_in_triage": "always",
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Customer facing production outages",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "is_default": false,
                      "name": "Production Outage",
                      "private_incidents_only": false,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "mode": "standard",
                    "most_recent_update_message": "We're working on a fix, hoping to ship in the next 30 minutes",
                    "name": "Our database is sad",
                    "permalink": "https://app.incident.io/incidents/123",
                    "postmortem_document_url": "https://docs.google.com/my_doc_id",
                    "reference": "INC-123",
                    "related_incidents": [
                      "INC-237"
                    ],
                    "severity": {
                      "created_at": "2021-08-17T13:28:57.801578Z",
                      "description": "Issues with **low impact**.",
                      "id": "01FCNDV6P870EA6S7TK1DSYDG0",
                      "name": "Minor",
                      "rank": 1,
                      "updated_at": "2021-08-17T13:28:57.801578Z"
                    },
                    "slack_channel_id": "C02AW36C1M5",
                    "slack_channel_name": "inc-165-green-parrot",
                    "slack_team_id": "T02A1FSLE8J",
                    "summary": "Our database is really really sad, and we don't know why yet.",
                    "updated_at": "2021-08-17T13:28:57.801578Z",
                    "visibility": "public",
                    "workload_minutes_late": 40.7,
                    "workload_minutes_sleeping": 0,
                    "workload_minutes_total": 60.7,
                    "workload_minutes_working": 20
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PublicIncidentIncidentUpdatedV2ResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    }
  }
}